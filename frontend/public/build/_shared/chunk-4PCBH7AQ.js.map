{
  "version": 3,
  "sources": ["../../../node_modules/rollup-plugin-node-polyfills/polyfills/http-lib/capability.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/http-lib/response.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/http-lib/to-arraybuffer.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/http-lib/request.js", "node-modules-polyfills:punycode", "node-modules-polyfills:querystring", "node-modules-polyfills:url", "node-modules-polyfills:https", "node-modules-polyfills-commonjs:https", "node-modules-polyfills:http", "node-modules-polyfills-commonjs:http", "node-modules-polyfills-commonjs:url", "node-modules-polyfills:os", "node-modules-polyfills-commonjs:os"],
  "sourcesContent": ["export var hasFetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nvar _blobConstructor;\nexport function blobConstructor() {\n  if (typeof _blobConstructor !== 'undefined') {\n    return _blobConstructor;\n  }\n  try {\n    new global.Blob([new ArrayBuffer(1)])\n    _blobConstructor = true\n  } catch (e) {\n    _blobConstructor = false\n  }\n  return _blobConstructor\n}\nvar xhr;\n\nfunction checkTypeSupport(type) {\n  if (!xhr) {\n    xhr = new global.XMLHttpRequest()\n    // If location.host is empty, e.g. if this page/worker was loaded\n    // from a Blob, then use example.com to avoid an error\n    xhr.open('GET', global.location.host ? '/' : 'https://example.com')\n  }\n  try {\n    xhr.responseType = type\n    return xhr.responseType === type\n  } catch (e) {\n    return false\n  }\n\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\nexport var arraybuffer = haveArrayBuffer && checkTypeSupport('arraybuffer')\n  // These next two tests unavoidably show warnings in Chrome. Since fetch will always\n  // be used if it's available, just return false for these to avoid the warnings.\nexport var msstream = !hasFetch && haveSlice && checkTypeSupport('ms-stream')\nexport var mozchunkedarraybuffer = !hasFetch && haveArrayBuffer &&\n  checkTypeSupport('moz-chunked-arraybuffer')\nexport var overrideMimeType = isFunction(xhr.overrideMimeType)\nexport var vbArray = isFunction(global.VBArray)\n\nfunction isFunction(value) {\n  return typeof value === 'function'\n}\n\nxhr = null // Help gc\n", "import {overrideMimeType} from './capability';\nimport {inherits} from 'util';\nimport {Readable} from 'stream';\n\nvar rStates = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n}\nexport {\n  rStates as readyStates\n};\nexport function IncomingMessage(xhr, response, mode) {\n  var self = this\n  Readable.call(self)\n\n  self._mode = mode\n  self.headers = {}\n  self.rawHeaders = []\n  self.trailers = {}\n  self.rawTrailers = []\n\n  // Fake the 'close' event, but only once 'end' fires\n  self.on('end', function() {\n    // The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n    process.nextTick(function() {\n      self.emit('close')\n    })\n  })\n  var read;\n  if (mode === 'fetch') {\n    self._fetchResponse = response\n\n    self.url = response.url\n    self.statusCode = response.status\n    self.statusMessage = response.statusText\n      // backwards compatible version of for (<item> of <iterable>):\n      // for (var <item>,_i,_it = <iterable>[Symbol.iterator](); <item> = (_i = _it.next()).value,!_i.done;)\n    for (var header, _i, _it = response.headers[Symbol.iterator](); header = (_i = _it.next()).value, !_i.done;) {\n      self.headers[header[0].toLowerCase()] = header[1]\n      self.rawHeaders.push(header[0], header[1])\n    }\n\n    // TODO: this doesn't respect backpressure. Once WritableStream is available, this can be fixed\n    var reader = response.body.getReader()\n\n    read = function () {\n      reader.read().then(function(result) {\n        if (self._destroyed)\n          return\n        if (result.done) {\n          self.push(null)\n          return\n        }\n        self.push(new Buffer(result.value))\n        read()\n      })\n    }\n    read()\n\n  } else {\n    self._xhr = xhr\n    self._pos = 0\n\n    self.url = xhr.responseURL\n    self.statusCode = xhr.status\n    self.statusMessage = xhr.statusText\n    var headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n    headers.forEach(function(header) {\n      var matches = header.match(/^([^:]+):\\s*(.*)/)\n      if (matches) {\n        var key = matches[1].toLowerCase()\n        if (key === 'set-cookie') {\n          if (self.headers[key] === undefined) {\n            self.headers[key] = []\n          }\n          self.headers[key].push(matches[2])\n        } else if (self.headers[key] !== undefined) {\n          self.headers[key] += ', ' + matches[2]\n        } else {\n          self.headers[key] = matches[2]\n        }\n        self.rawHeaders.push(matches[1], matches[2])\n      }\n    })\n\n    self._charset = 'x-user-defined'\n    if (!overrideMimeType) {\n      var mimeType = self.rawHeaders['mime-type']\n      if (mimeType) {\n        var charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n        if (charsetMatch) {\n          self._charset = charsetMatch[1].toLowerCase()\n        }\n      }\n      if (!self._charset)\n        self._charset = 'utf-8' // best guess\n    }\n  }\n}\n\ninherits(IncomingMessage, Readable)\n\nIncomingMessage.prototype._read = function() {}\n\nIncomingMessage.prototype._onXHRProgress = function() {\n  var self = this\n\n  var xhr = self._xhr\n\n  var response = null\n  switch (self._mode) {\n  case 'text:vbarray': // For IE9\n    if (xhr.readyState !== rStates.DONE)\n      break\n    try {\n      // This fails in IE8\n      response = new global.VBArray(xhr.responseBody).toArray()\n    } catch (e) {\n      // pass\n    }\n    if (response !== null) {\n      self.push(new Buffer(response))\n      break\n    }\n    // Falls through in IE8\n  case 'text':\n    try { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n      response = xhr.responseText\n    } catch (e) {\n      self._mode = 'text:vbarray'\n      break\n    }\n    if (response.length > self._pos) {\n      var newData = response.substr(self._pos)\n      if (self._charset === 'x-user-defined') {\n        var buffer = new Buffer(newData.length)\n        for (var i = 0; i < newData.length; i++)\n          buffer[i] = newData.charCodeAt(i) & 0xff\n\n        self.push(buffer)\n      } else {\n        self.push(newData, self._charset)\n      }\n      self._pos = response.length\n    }\n    break\n  case 'arraybuffer':\n    if (xhr.readyState !== rStates.DONE || !xhr.response)\n      break\n    response = xhr.response\n    self.push(new Buffer(new Uint8Array(response)))\n    break\n  case 'moz-chunked-arraybuffer': // take whole\n    response = xhr.response\n    if (xhr.readyState !== rStates.LOADING || !response)\n      break\n    self.push(new Buffer(new Uint8Array(response)))\n    break\n  case 'ms-stream':\n    response = xhr.response\n    if (xhr.readyState !== rStates.LOADING)\n      break\n    var reader = new global.MSStreamReader()\n    reader.onprogress = function() {\n      if (reader.result.byteLength > self._pos) {\n        self.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n        self._pos = reader.result.byteLength\n      }\n    }\n    reader.onload = function() {\n      self.push(null)\n    }\n      // reader.onerror = ??? // TODO: this\n    reader.readAsArrayBuffer(response)\n    break\n  }\n\n  // The ms-stream case handles end separately in reader.onload()\n  if (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n    self.push(null)\n  }\n}\n", "// from https://github.com/jhiesey/to-arraybuffer/blob/6502d9850e70ba7935a7df4ad86b358fc216f9f0/index.js\n\n// MIT License\n// Copyright (c) 2016 John Hiesey\nimport {isBuffer} from 'buffer';\nexport default function (buf) {\n  // If the buffer is backed by a Uint8Array, a faster version will work\n  if (buf instanceof Uint8Array) {\n    // If the buffer isn't a subarray, return the underlying ArrayBuffer\n    if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n      return buf.buffer\n    } else if (typeof buf.buffer.slice === 'function') {\n      // Otherwise we need to get a proper copy\n      return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n    }\n  }\n\n  if (isBuffer(buf)) {\n    // This is the slow version that will work with any Buffer\n    // implementation (even in old browsers)\n    var arrayCopy = new Uint8Array(buf.length)\n    var len = buf.length\n    for (var i = 0; i < len; i++) {\n      arrayCopy[i] = buf[i]\n    }\n    return arrayCopy.buffer\n  } else {\n    throw new Error('Argument must be a Buffer')\n  }\n}\n", "import * as capability from './capability';\nimport {inherits} from 'util';\nimport {IncomingMessage, readyStates as rStates} from './response';\nimport {Writable} from 'stream';\nimport toArrayBuffer from './to-arraybuffer';\n\nfunction decideMode(preferBinary, useFetch) {\n  if (capability.hasFetch && useFetch) {\n    return 'fetch'\n  } else if (capability.mozchunkedarraybuffer) {\n    return 'moz-chunked-arraybuffer'\n  } else if (capability.msstream) {\n    return 'ms-stream'\n  } else if (capability.arraybuffer && preferBinary) {\n    return 'arraybuffer'\n  } else if (capability.vbArray && preferBinary) {\n    return 'text:vbarray'\n  } else {\n    return 'text'\n  }\n}\nexport default ClientRequest;\n\nfunction ClientRequest(opts) {\n  var self = this\n  Writable.call(self)\n\n  self._opts = opts\n  self._body = []\n  self._headers = {}\n  if (opts.auth)\n    self.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n  Object.keys(opts.headers).forEach(function(name) {\n    self.setHeader(name, opts.headers[name])\n  })\n\n  var preferBinary\n  var useFetch = true\n  if (opts.mode === 'disable-fetch') {\n    // If the use of XHR should be preferred and includes preserving the 'content-type' header\n    useFetch = false\n    preferBinary = true\n  } else if (opts.mode === 'prefer-streaming') {\n    // If streaming is a high priority but binary compatibility and\n    // the accuracy of the 'content-type' header aren't\n    preferBinary = false\n  } else if (opts.mode === 'allow-wrong-content-type') {\n    // If streaming is more important than preserving the 'content-type' header\n    preferBinary = !capability.overrideMimeType\n  } else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n    // Use binary if text streaming may corrupt data or the content-type header, or for speed\n    preferBinary = true\n  } else {\n    throw new Error('Invalid value for opts.mode')\n  }\n  self._mode = decideMode(preferBinary, useFetch)\n\n  self.on('finish', function() {\n    self._onFinish()\n  })\n}\n\ninherits(ClientRequest, Writable)\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n  'accept-charset',\n  'accept-encoding',\n  'access-control-request-headers',\n  'access-control-request-method',\n  'connection',\n  'content-length',\n  'cookie',\n  'cookie2',\n  'date',\n  'dnt',\n  'expect',\n  'host',\n  'keep-alive',\n  'origin',\n  'referer',\n  'te',\n  'trailer',\n  'transfer-encoding',\n  'upgrade',\n  'user-agent',\n  'via'\n]\nClientRequest.prototype.setHeader = function(name, value) {\n  var self = this\n  var lowerName = name.toLowerCase()\n    // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n    // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n    // http-browserify did it, so I will too.\n  if (unsafeHeaders.indexOf(lowerName) !== -1)\n    return\n\n  self._headers[lowerName] = {\n    name: name,\n    value: value\n  }\n}\n\nClientRequest.prototype.getHeader = function(name) {\n  var self = this\n  return self._headers[name.toLowerCase()].value\n}\n\nClientRequest.prototype.removeHeader = function(name) {\n  var self = this\n  delete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function() {\n  var self = this\n\n  if (self._destroyed)\n    return\n  var opts = self._opts\n\n  var headersObj = self._headers\n  var body\n  if (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n    if (capability.blobConstructor()) {\n      body = new global.Blob(self._body.map(function(buffer) {\n        return toArrayBuffer(buffer)\n      }), {\n        type: (headersObj['content-type'] || {}).value || ''\n      })\n    } else {\n      // get utf8 string\n      body = Buffer.concat(self._body).toString()\n    }\n  }\n\n  if (self._mode === 'fetch') {\n    var headers = Object.keys(headersObj).map(function(name) {\n      return [headersObj[name].name, headersObj[name].value]\n    })\n\n    global.fetch(self._opts.url, {\n      method: self._opts.method,\n      headers: headers,\n      body: body,\n      mode: 'cors',\n      credentials: opts.withCredentials ? 'include' : 'same-origin'\n    }).then(function(response) {\n      self._fetchResponse = response\n      self._connect()\n    }, function(reason) {\n      self.emit('error', reason)\n    })\n  } else {\n    var xhr = self._xhr = new global.XMLHttpRequest()\n    try {\n      xhr.open(self._opts.method, self._opts.url, true)\n    } catch (err) {\n      process.nextTick(function() {\n        self.emit('error', err)\n      })\n      return\n    }\n\n    // Can't set responseType on really old browsers\n    if ('responseType' in xhr)\n      xhr.responseType = self._mode.split(':')[0]\n\n    if ('withCredentials' in xhr)\n      xhr.withCredentials = !!opts.withCredentials\n\n    if (self._mode === 'text' && 'overrideMimeType' in xhr)\n      xhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n    Object.keys(headersObj).forEach(function(name) {\n      xhr.setRequestHeader(headersObj[name].name, headersObj[name].value)\n    })\n\n    self._response = null\n    xhr.onreadystatechange = function() {\n      switch (xhr.readyState) {\n      case rStates.LOADING:\n      case rStates.DONE:\n        self._onXHRProgress()\n        break\n      }\n    }\n      // Necessary for streaming in Firefox, since xhr.response is ONLY defined\n      // in onprogress, not in onreadystatechange with xhr.readyState = 3\n    if (self._mode === 'moz-chunked-arraybuffer') {\n      xhr.onprogress = function() {\n        self._onXHRProgress()\n      }\n    }\n\n    xhr.onerror = function() {\n      if (self._destroyed)\n        return\n      self.emit('error', new Error('XHR error'))\n    }\n\n    try {\n      xhr.send(body)\n    } catch (err) {\n      process.nextTick(function() {\n        self.emit('error', err)\n      })\n      return\n    }\n  }\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid(xhr) {\n  try {\n    var status = xhr.status\n    return (status !== null && status !== 0)\n  } catch (e) {\n    return false\n  }\n}\n\nClientRequest.prototype._onXHRProgress = function() {\n  var self = this\n\n  if (!statusValid(self._xhr) || self._destroyed)\n    return\n\n  if (!self._response)\n    self._connect()\n\n  self._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function() {\n  var self = this\n\n  if (self._destroyed)\n    return\n\n  self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n  self.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function(chunk, encoding, cb) {\n  var self = this\n\n  self._body.push(chunk)\n  cb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function() {\n  var self = this\n  self._destroyed = true\n  if (self._response)\n    self._response._destroyed = true\n  if (self._xhr)\n    self._xhr.abort()\n    // Currently, there isn't a way to truly abort a fetch.\n    // If you like bikeshedding, see https://github.com/whatwg/fetch/issues/27\n}\n\nClientRequest.prototype.end = function(data, encoding, cb) {\n  var self = this\n  if (typeof data === 'function') {\n    cb = data\n    data = undefined\n  }\n\n  Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function() {}\nClientRequest.prototype.setTimeout = function() {}\nClientRequest.prototype.setNoDelay = function() {}\nClientRequest.prototype.setSocketKeepAlive = function() {}\n", "/*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\n/** Highest positive signed 32-bit float value */\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n  'overflow': 'Overflow: input needs wider integers to process',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n  var length = array.length;\n  var result = [];\n  while (length--) {\n    result[length] = fn(array[length]);\n  }\n  return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n  var parts = string.split('@');\n  var result = '';\n  if (parts.length > 1) {\n    // In email addresses, only the domain name should be punycoded. Leave\n    // the local part (i.e. everything up to `@`) intact.\n    result = parts[0] + '@';\n    string = parts[1];\n  }\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  string = string.replace(regexSeparators, '\\x2E');\n  var labels = string.split('.');\n  var encoded = map(labels, fn).join('.');\n  return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n  var output = [],\n    counter = 0,\n    length = string.length,\n    value,\n    extra;\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nfunction ucs2encode(array) {\n  return map(array, function(value) {\n    var output = '';\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n    output += stringFromCharCode(value);\n    return output;\n  }).join('');\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint) {\n  if (codePoint - 48 < 10) {\n    return codePoint - 22;\n  }\n  if (codePoint - 65 < 26) {\n    return codePoint - 65;\n  }\n  if (codePoint - 97 < 26) {\n    return codePoint - 97;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input) {\n  // Don't use UCS-2\n  var output = [],\n    inputLength = input.length,\n    out,\n    i = 0,\n    n = initialN,\n    bias = initialBias,\n    basic,\n    j,\n    index,\n    oldi,\n    w,\n    k,\n    digit,\n    t,\n    /** Cached calculation results */\n    baseMinusT;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */ ) {\n\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    for (oldi = i, w = 1, k = base; /* no condition */ ; k += base) {\n\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n      if (digit < t) {\n        break;\n      }\n\n      baseMinusT = base - t;\n      if (w > floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n\n    }\n\n    out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi == 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output\n    output.splice(i++, 0, n);\n\n  }\n\n  return ucs2encode(output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(input) {\n  var n,\n    delta,\n    handledCPCount,\n    basicLength,\n    bias,\n    j,\n    m,\n    q,\n    k,\n    t,\n    currentValue,\n    output = [],\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n    baseMinusT,\n    qMinusT;\n\n  // Convert the input in UCS-2 to Unicode\n  input = ucs2decode(input);\n\n  // Cache the length\n  inputLength = input.length;\n\n  // Initialize the state\n  n = initialN;\n  delta = 0;\n  bias = initialBias;\n\n  // Handle the basic code points\n  for (j = 0; j < inputLength; ++j) {\n    currentValue = input[j];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  handledCPCount = basicLength = output.length;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string - if it is not empty - with a delimiter\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow\n    handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer\n        for (q = delta, k = base; /* no condition */ ; k += base) {\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) {\n            break;\n          }\n          qMinusT = q - t;\n          baseMinusT = base - t;\n          output.push(\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n          );\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input) {\n  return mapDomain(input, function(string) {\n    return regexPunycode.test(string) ?\n      decode(string.slice(4).toLowerCase()) :\n      string;\n  });\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input) {\n  return mapDomain(input, function(string) {\n    return regexNonASCII.test(string) ?\n      'xn--' + encode(string) :\n      string;\n  });\n}\nexport var version = '1.4.1';\n/**\n * An object of methods to convert from JavaScript's internal character\n * representation (UCS-2) to Unicode code points, and back.\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode\n * @type Object\n */\n\nexport var ucs2 = {\n  decode: ucs2decode,\n  encode: ucs2encode\n};\nexport default {\n  version: version,\n  ucs2: ucs2,\n  toASCII: toASCII,\n  toUnicode: toUnicode,\n  encode: encode,\n  decode: decode\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nimport {toASCII} from 'punycode';\nimport {isObject,isString,isNullOrUndefined,isNull} from 'util';\nimport {parse as qsParse,stringify as qsStringify} from 'querystring';\nexport {\n  urlParse as parse,\n  urlResolve as resolve,\n  urlResolveObject as resolveObject,\n  urlFormat as format\n};\nexport default {\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  format: urlFormat,\n  Url: Url\n}\nexport function Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n  // RFC 2396: characters reserved for delimiting URLs.\n  // We actually just auto-escape these.\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  // Characters that are never ever allowed in a hostname.\n  // Note that any invalid chars are also handled, but these\n  // are the ones that are *expected* to be seen, so we fast-path\n  // them.\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n  hostEndingChars = ['/', '?', '#'],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    'http': true,\n    'https': true,\n    'ftp': true,\n    'gopher': true,\n    'file': true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  };\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  return parse(this, url, parseQueryString, slashesDenoteHost);\n}\n\nfunction parse(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n    splitter =\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n        if (parseQueryString) {\n          self.query = qsParse(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n  var i, hec, l, p;\n  if (!hostlessProtocol[proto] &&\n    (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    parseHost(self);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    self.hostname = self.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = self.hostname[0] === '[' &&\n      self.hostname[self.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      self.query = qsParse(self.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n  if (rest) self.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n    self.hostname && !self.pathname) {\n    self.pathname = '/';\n  }\n\n  //to support http.request\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  self.href = format(self);\n  return self;\n}\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = parse({}, obj);\n  return format(obj);\n}\n\nfunction format(self) {\n  var auth = self.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n    pathname = self.pathname || '',\n    hash = self.hash || '',\n    host = false,\n    query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ?\n      self.hostname :\n      '[' + this.hostname + ']');\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query &&\n    isObject(self.query) &&\n    Object.keys(self.query).length) {\n    query = qsStringify(self.query);\n  }\n\n  var search = self.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (self.slashes ||\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function() {\n  return format(this);\n}\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n      result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n  var relPath;\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n    isRelAbs = (\n      relative.host ||\n      relative.pathname && relative.pathname.charAt(0) === '/'\n    ),\n    mustEndAbs = (isRelAbs || isSourceAbs ||\n      (result.host && relative.pathname)),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || [];\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n  var authInHost;\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n      relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\n        result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n        (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n    (result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n      srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n      (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) self.hostname = host;\n}\n", "/*\nthis and http-lib folder\n\nThe MIT License\n\nCopyright (c) 2015 John Hiesey\n\nPermission is hereby granted, free of charge,\nto any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom\nthe Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\nANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport ClientRequest from './http-lib/request';\nimport {parse} from 'url';\n\nexport function request(opts, cb) {\n  if (typeof opts === 'string')\n    opts = parse(opts)\n\n\n  // Normally, the page is loaded from http or https, so not specifying a protocol\n  // will result in a (valid) protocol-relative url. However, this won't work if\n  // the protocol is something else, like 'file:'\n  var defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n  var protocol = opts.protocol || defaultProtocol\n  var host = opts.hostname || opts.host\n  var port = opts.port\n  var path = opts.path || '/'\n\n  // Necessary for IPv6 addresses\n  if (host && host.indexOf(':') !== -1)\n    host = '[' + host + ']'\n\n  // This may be a relative url. The browser should always be able to interpret it correctly.\n  opts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n  opts.method = (opts.method || 'GET').toUpperCase()\n  opts.headers = opts.headers || {}\n\n  // Also valid opts.auth, opts.mode\n\n  var req = new ClientRequest(opts)\n  if (cb)\n    req.on('response', cb)\n  return req\n}\n\nexport function get(opts, cb) {\n  var req = request(opts, cb)\n  req.end()\n  return req\n}\n\nexport function Agent() {}\nAgent.defaultMaxSockets = 4\n\nexport var METHODS = [\n  'CHECKOUT',\n  'CONNECT',\n  'COPY',\n  'DELETE',\n  'GET',\n  'HEAD',\n  'LOCK',\n  'M-SEARCH',\n  'MERGE',\n  'MKACTIVITY',\n  'MKCOL',\n  'MOVE',\n  'NOTIFY',\n  'OPTIONS',\n  'PATCH',\n  'POST',\n  'PROPFIND',\n  'PROPPATCH',\n  'PURGE',\n  'PUT',\n  'REPORT',\n  'SEARCH',\n  'SUBSCRIBE',\n  'TRACE',\n  'UNLOCK',\n  'UNSUBSCRIBE'\n]\nexport var STATUS_CODES = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  102: 'Processing', // RFC 2518, obsoleted by RFC 4918\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  207: 'Multi-Status', // RFC 4918\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Moved Temporarily',\n  303: 'See Other',\n  304: 'Not Modified',\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required',\n  408: 'Request Time-out',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Request Entity Too Large',\n  414: 'Request-URI Too Large',\n  415: 'Unsupported Media Type',\n  416: 'Requested Range Not Satisfiable',\n  417: 'Expectation Failed',\n  418: 'I\\'m a teapot', // RFC 2324\n  422: 'Unprocessable Entity', // RFC 4918\n  423: 'Locked', // RFC 4918\n  424: 'Failed Dependency', // RFC 4918\n  425: 'Unordered Collection', // RFC 4918\n  426: 'Upgrade Required', // RFC 2817\n  428: 'Precondition Required', // RFC 6585\n  429: 'Too Many Requests', // RFC 6585\n  431: 'Request Header Fields Too Large', // RFC 6585\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Time-out',\n  505: 'HTTP Version Not Supported',\n  506: 'Variant Also Negotiates', // RFC 2295\n  507: 'Insufficient Storage', // RFC 4918\n  509: 'Bandwidth Limit Exceeded',\n  510: 'Not Extended', // RFC 2774\n  511: 'Network Authentication Required' // RFC 6585\n};\n\nexport default {\n  request,\n  get,\n  Agent,\n  METHODS,\n  STATUS_CODES\n}\n", "\nconst polyfill = require('https')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "/*\nthis and http-lib folder\n\nThe MIT License\n\nCopyright (c) 2015 John Hiesey\n\nPermission is hereby granted, free of charge,\nto any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom\nthe Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\nANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport ClientRequest from './http-lib/request';\nimport {parse} from 'url';\n\nexport function request(opts, cb) {\n  if (typeof opts === 'string')\n    opts = parse(opts)\n\n\n  // Normally, the page is loaded from http or https, so not specifying a protocol\n  // will result in a (valid) protocol-relative url. However, this won't work if\n  // the protocol is something else, like 'file:'\n  var defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n  var protocol = opts.protocol || defaultProtocol\n  var host = opts.hostname || opts.host\n  var port = opts.port\n  var path = opts.path || '/'\n\n  // Necessary for IPv6 addresses\n  if (host && host.indexOf(':') !== -1)\n    host = '[' + host + ']'\n\n  // This may be a relative url. The browser should always be able to interpret it correctly.\n  opts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n  opts.method = (opts.method || 'GET').toUpperCase()\n  opts.headers = opts.headers || {}\n\n  // Also valid opts.auth, opts.mode\n\n  var req = new ClientRequest(opts)\n  if (cb)\n    req.on('response', cb)\n  return req\n}\n\nexport function get(opts, cb) {\n  var req = request(opts, cb)\n  req.end()\n  return req\n}\n\nexport function Agent() {}\nAgent.defaultMaxSockets = 4\n\nexport var METHODS = [\n  'CHECKOUT',\n  'CONNECT',\n  'COPY',\n  'DELETE',\n  'GET',\n  'HEAD',\n  'LOCK',\n  'M-SEARCH',\n  'MERGE',\n  'MKACTIVITY',\n  'MKCOL',\n  'MOVE',\n  'NOTIFY',\n  'OPTIONS',\n  'PATCH',\n  'POST',\n  'PROPFIND',\n  'PROPPATCH',\n  'PURGE',\n  'PUT',\n  'REPORT',\n  'SEARCH',\n  'SUBSCRIBE',\n  'TRACE',\n  'UNLOCK',\n  'UNSUBSCRIBE'\n]\nexport var STATUS_CODES = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  102: 'Processing', // RFC 2518, obsoleted by RFC 4918\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  207: 'Multi-Status', // RFC 4918\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Moved Temporarily',\n  303: 'See Other',\n  304: 'Not Modified',\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required',\n  408: 'Request Time-out',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Request Entity Too Large',\n  414: 'Request-URI Too Large',\n  415: 'Unsupported Media Type',\n  416: 'Requested Range Not Satisfiable',\n  417: 'Expectation Failed',\n  418: 'I\\'m a teapot', // RFC 2324\n  422: 'Unprocessable Entity', // RFC 4918\n  423: 'Locked', // RFC 4918\n  424: 'Failed Dependency', // RFC 4918\n  425: 'Unordered Collection', // RFC 4918\n  426: 'Upgrade Required', // RFC 2817\n  428: 'Precondition Required', // RFC 6585\n  429: 'Too Many Requests', // RFC 6585\n  431: 'Request Header Fields Too Large', // RFC 6585\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Time-out',\n  505: 'HTTP Version Not Supported',\n  506: 'Variant Also Negotiates', // RFC 2295\n  507: 'Insufficient Storage', // RFC 4918\n  509: 'Bandwidth Limit Exceeded',\n  510: 'Not Extended', // RFC 2774\n  511: 'Network Authentication Required' // RFC 6585\n};\n\nexport default {\n  request,\n  get,\n  Agent,\n  METHODS,\n  STATUS_CODES\n}\n", "\nconst polyfill = require('http')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "\nconst polyfill = require('url')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 CoderPuppy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\nvar _endianness;\nexport function endianness() {\n  if (typeof _endianness === 'undefined') {\n    var a = new ArrayBuffer(2);\n    var b = new Uint8Array(a);\n    var c = new Uint16Array(a);\n    b[0] = 1;\n    b[1] = 2;\n    if (c[0] === 258) {\n      _endianness = 'BE';\n    } else if (c[0] === 513){\n      _endianness = 'LE';\n    } else {\n      throw new Error('unable to figure out endianess');\n    }\n  }\n  return _endianness;\n}\n\nexport function hostname() {\n  if (typeof global.location !== 'undefined') {\n    return global.location.hostname\n  } else return '';\n}\n\nexport function loadavg() {\n  return [];\n}\n\nexport function uptime() {\n  return 0;\n}\n\nexport function freemem() {\n  return Number.MAX_VALUE;\n}\n\nexport function totalmem() {\n  return Number.MAX_VALUE;\n}\n\nexport function cpus() {\n  return [];\n}\n\nexport function type() {\n  return 'Browser';\n}\n\nexport function release () {\n  if (typeof global.navigator !== 'undefined') {\n    return global.navigator.appVersion;\n  }\n  return '';\n}\n\nexport function networkInterfaces(){}\nexport function getNetworkInterfaces(){}\n\nexport function arch() {\n  return 'javascript';\n}\n\nexport function platform() {\n  return 'browser';\n}\n\nexport function tmpDir() {\n  return '/tmp';\n}\nexport var tmpdir = tmpDir;\n\nexport var EOL = '\\n';\nexport default {\n  EOL: EOL,\n  tmpdir: tmpdir,\n  tmpDir: tmpDir,\n  networkInterfaces:networkInterfaces,\n  getNetworkInterfaces: getNetworkInterfaces,\n  release: release,\n  type: type,\n  cpus: cpus,\n  totalmem: totalmem,\n  freemem: freemem,\n  uptime: uptime,\n  loadavg: loadavg,\n  hostname: hostname,\n  endianness: endianness,\n}\n", "\nconst polyfill = require('os')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n"],
  "mappings": "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",
  "names": []
}
