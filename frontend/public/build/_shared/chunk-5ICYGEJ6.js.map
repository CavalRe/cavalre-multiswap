{
  "version": 3,
  "sources": ["../../../node_modules/@react-dnd/invariant/src/index.ts", "../../../node_modules/react-dnd/src/core/DndContext.ts"],
  "sourcesContent": ["/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n\tif (isProduction()) {\n\t\tif (format === undefined) {\n\t\t\tthrow new Error('invariant requires an error message argument')\n\t\t}\n\t}\n\n\tif (!condition) {\n\t\tlet error\n\t\tif (format === undefined) {\n\t\t\terror = new Error(\n\t\t\t\t'Minified exception occurred; use the non-minified dev environment ' +\n\t\t\t\t\t'for the full error message and additional helpful warnings.',\n\t\t\t)\n\t\t} else {\n\t\t\tlet argIndex = 0\n\t\t\terror = new Error(\n\t\t\t\tformat.replace(/%s/g, function () {\n\t\t\t\t\treturn args[argIndex++]\n\t\t\t\t}),\n\t\t\t)\n\t\t\terror.name = 'Invariant Violation'\n\t\t}\n\n\t\t;(error as any).framesToPop = 1 // we don't care about invariant's own frame\n\t\tthrow error\n\t}\n}\n\nfunction isProduction() {\n\treturn (\n\t\ttypeof process !== 'undefined' && process.env['NODE_ENV'] === 'production'\n\t)\n}\n", "import { createContext } from 'react'\nimport type { DragDropManager } from 'dnd-core'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n"],
  "mappings": ";;;;;;;AAAA;AAWM,mBAAoB,WAAgB,WAAmB,MAAa;AACzE,MAAI,gBAAgB;AACnB,QAAI,WAAW,QAAW;AACzB,YAAM,IAAI,MAAM;;;AAIlB,MAAE,CAAG,WAAW;AACf,QAAI;AACJ,QAAI,WAAW,QAAW;AACzB,cAAQ,IAAI,MACX;WAGK;AACN,UAAI,WAAW;AACf,cAAQ,IAAI,MACX,OAAO,QAAO,OAAQ,WAAY;AACjC,eAAO,KAAK;;AAGd,YAAM,OAAO;;AAGZ,UAAc,cAAc;AAC9B,UAAM;;;wBAIgB;AACvB,SACC,OAAO,YAAY,eAAe,QAAQ,IAAI,gBAAgB;;;;AC1ChE;mBAA8B;AAavB,IAAM,aAAa,gCAA8B;EACvD,iBAAiB;;",
  "names": []
}
