{
  "version": 3,
  "sources": ["../../../node_modules/crc-32/crc32.js", "../../../node_modules/@ethereumjs/common/src/chains/index.ts", "../../../node_modules/@ethereumjs/common/src/hardforks/index.ts", "../../../node_modules/@ethereumjs/common/src/eips/index.ts", "../../../node_modules/@ethereumjs/common/src/index.ts", "../../../node_modules/@ethereumjs/tx/src/types.ts", "../../../node_modules/@ethereumjs/tx/src/baseTransaction.ts", "../../../node_modules/@ethereumjs/tx/src/legacyTransaction.ts", "../../../node_modules/@ethereumjs/tx/src/util.ts", "../../../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts", "../../../node_modules/@ethereumjs/tx/src/transactionFactory.ts", "../../../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts", "../../../node_modules/@ethereumjs/tx/src/index.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/bn.js/lib/bn.js", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/secp256k1v3-lib/index.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/secp256k1v3-lib/der.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/secp256k1v3-adapter.ts", "../../../node_modules/ethjs-util/lib/index.js", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/constants.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/bytes.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/hash.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/account.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/signature.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/object.ts", "../../../node_modules/@metamask/eth-sig-util/node_modules/ethereumjs-util/src/index.ts", "../../../node_modules/@metamask/eth-sig-util/src/utils.ts", "../../../node_modules/@metamask/eth-sig-util/src/personal-sign.ts", "../../../node_modules/ethereumjs-abi/node_modules/bn.js/lib/bn.js", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/secp256k1v3-lib/index.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/secp256k1v3-lib/der.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/secp256k1v3-adapter.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/constants.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/bytes.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/hash.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/account.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/signature.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/object.ts", "../../../node_modules/ethereumjs-abi/node_modules/ethereumjs-util/src/index.ts", "../../../node_modules/ethereumjs-abi/lib/index.js", "../../../node_modules/ethereumjs-abi/index.js", "../../../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts", "../../../node_modules/tweetnacl-util/nacl-util.js", "../../../node_modules/@metamask/eth-sig-util/src/encryption.ts", "../../../node_modules/@metamask/eth-sig-util/src/index.ts", "../../../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts", "../../../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts", "../../../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts", "../../../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts", "../../../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts", "../../../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts", "../../../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts"],
  "sourcesContent": ["/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.1';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n", null, null, null, null, null, null, null, null, null, null, null, null, "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", null, null, null, "'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};", null, null, null, null, null, null, null, "import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n", "import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", null, null, null, null, null, null, null, null, null, null, "/* eslint-disable no-useless-escape */\nconst utils = require('ethereumjs-util')\nconst BN = require('bn.js')\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n", "module.exports = require('./lib/index.js')\n", "import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string', enum: getSolidityTypes() },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Get a list of all Solidity types.\n *\n * @returns A list of all Solidity types.\n */\nfunction getSolidityTypes() {\n  const types = ['bool', 'address', 'string', 'bytes'];\n  const ints = Array.from(new Array(32)).map(\n    (_, index) => `int${(index + 1) * 8}`,\n  );\n  const uints = Array.from(new Array(32)).map(\n    (_, index) => `uint${(index + 1) * 8}`,\n  );\n  const bytes = Array.from(new Array(32)).map(\n    (_, index) => `bytes${index + 1}`,\n  );\n\n  return [...types, ...ints, ...uints, ...bytes];\n}\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n", "// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n", "import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n", "export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n", null, null, null, null, null, null, null],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAGA,QAAI;AACJ,IAAC,UAAU,SAAS;AAGnB,UAAG,OAAO,sBAAsB,aAAa;AAC5C,YAAG,AAAa,OAAO,YAApB,UAA6B;AAC/B,kBAAQ;AAAA,mBACE,AAAe,OAAO,WAAtB,cAAgC,OAAO,KAAK;AACtD,iBAAO,WAAY;AAClB,gBAAI,UAAS;AACb,oBAAQ;AACR,mBAAO;AAAA;AAAA,eAEF;AACN,kBAAQ,QAAQ;AAAA;AAAA,aAEX;AACN,gBAAQ,QAAQ;AAAA;AAAA,OAIhB,SAAS,QAAO;AAClB,aAAM,UAAU;AAEhB,kCAA4B;AAC3B,YAAI,IAAI,GAAG,QAAQ,IAAI,MAAM;AAE7B,iBAAQ,IAAG,GAAG,KAAK,KAAK,EAAE,GAAE;AAC3B,cAAI;AACJ,cAAM,IAAE,IAAM,aAAc,MAAM,IAAO,MAAM;AAC/C,cAAM,IAAE,IAAM,aAAc,MAAM,IAAO,MAAM;AAC/C,cAAM,IAAE,IAAM,aAAc,MAAM,IAAO,MAAM;AAC/C,cAAM,IAAE,IAAM,aAAc,MAAM,IAAO,MAAM;AAC/C,cAAM,IAAE,IAAM,aAAc,MAAM,IAAO,MAAM;AAC/C,cAAM,IAAE,IAAM,aAAc,MAAM,IAAO,MAAM;AAC/C,cAAM,IAAE,IAAM,aAAc,MAAM,IAAO,MAAM;AAC/C,cAAM,IAAE,IAAM,aAAc,MAAM,IAAO,MAAM;AAC/C,gBAAM,KAAK;AAAA;AAGZ,eAAO,OAAO,eAAe,cAAc,IAAI,WAAW,SAAS;AAAA;AAGpE,UAAI,KAAK;AACT,kCAA4B,GAAG;AAC9B,YAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,QAAQ,OAAO,eAAe,cAAc,IAAI,WAAW,QAAQ,IAAI,MAAM;AAEtG,aAAI,IAAI,GAAG,KAAK,KAAK,EAAE;AAAG,gBAAM,KAAK,EAAE;AACvC,aAAI,IAAI,GAAG,KAAK,KAAK,EAAE,GAAG;AACzB,cAAI,EAAE;AACN,eAAI,IAAI,MAAM,GAAG,IAAI,MAAM,KAAK;AAAK,gBAAI,MAAM,KAAM,MAAM,IAAK,EAAE,IAAI;AAAA;AAEvE,YAAI,MAAM;AACV,aAAI,IAAI,GAAG,KAAK,IAAI,EAAE;AAAG,cAAI,IAAI,KAAK,OAAO,eAAe,cAAc,MAAM,SAAS,IAAI,KAAK,IAAI,MAAM,OAAO,MAAM,MAAM,IAAI,KAAK,IAAI,MAAM;AAClJ,eAAO;AAAA;AAER,UAAI,KAAK,mBAAmB;AAC5B,UAAI,KAAK,GAAG,IAAK,KAAK,GAAG,IAAK,KAAK,GAAG,IAAK,KAAK,GAAG,IAAK,KAAK,GAAG;AAChE,UAAI,KAAK,GAAG,IAAK,KAAK,GAAG,IAAK,KAAK,GAAG,IAAK,KAAK,GAAG,IAAK,KAAK,GAAG;AAChE,UAAI,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG;AAChE,0BAAoB,MAAM,MAAM;AAC/B,YAAI,IAAI,OAAO;AACf,iBAAQ,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI;AAAI,cAAK,MAAI,IAAK,GAAI,KAAE,KAAK,WAAW,QAAM;AAClF,eAAO,CAAC;AAAA;AAGT,yBAAmB,GAAG,MAAM;AAC3B,YAAI,IAAI,OAAO,IAAI,IAAI,EAAE,SAAS,IAAI,IAAI;AAC1C,eAAM,IAAI;AAAI,cACb,GAAG,EAAE,OAAQ,IAAI,OACjB,GAAG,EAAE,OAAS,KAAK,IAAK,OACxB,GAAG,EAAE,OAAS,KAAK,KAAM,OACzB,GAAG,EAAE,OAAQ,MAAM,MACnB,GAAG,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG,EAAE,QAC5C,GAAG,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG,EAAE,QAC5C,GAAG,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG,EAAE;AAC7C,aAAK;AACL,eAAM,IAAI;AAAG,cAAK,MAAI,IAAK,GAAI,KAAE,EAAE,QAAM;AACzC,eAAO,CAAC;AAAA;AAGT,yBAAmB,KAAK,MAAM;AAC7B,YAAI,IAAI,OAAO;AACf,iBAAQ,IAAI,GAAG,IAAI,IAAI,QAAQ,IAAI,GAAG,IAAI,GAAG,IAAI,KAAI;AACpD,cAAI,IAAI,WAAW;AACnB,cAAG,IAAI,KAAM;AACZ,gBAAK,MAAI,IAAK,GAAI,KAAE,KAAG;AAAA,qBACd,IAAI,MAAO;AACpB,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAM,KAAG,IAAG,OAAM;AACzC,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAK,IAAE,OAAM;AAAA,qBAC3B,KAAK,SAAU,IAAI,OAAQ;AACpC,gBAAK,KAAE,QAAM;AAAI,gBAAI,IAAI,WAAW,OAAK;AACzC,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAM,KAAG,IAAG,MAAK;AACxC,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAM,KAAG,IAAG,OAAM;AACzC,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAM,KAAG,IAAG,KAAM,KAAE,MAAI,MAAK;AACpD,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAK,IAAE,OAAM;AAAA,iBAC9B;AACN,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAM,KAAG,KAAI,OAAM;AAC1C,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAM,KAAG,IAAG,OAAM;AACzC,gBAAK,MAAI,IAAK,GAAI,KAAK,OAAK,IAAE,OAAM;AAAA;AAAA;AAGtC,eAAO,CAAC;AAAA;AAET,aAAM,QAAQ;AAEd,aAAM,OAAO;AAEb,aAAM,MAAM;AAEZ,ahHZ,QAAA,iBAAA,gBAAA;AACA,QAAA,iBAAA,gBAAA;AACA,QAAA,iBAAA,gBAAA;AACA,QAAA,eAAA,gBAAA;AACA,QAAA,gBAAA,gBAAA;AACA,QAAA,iBAAA,gBAAA;AAKA,mCAAsC,cAAsB;;AAC1D,UAAM,QAAa;QACjB,KAAK;QACL,KAAK;QACL,KAAK;QACL,MAAM;QACN,KAAK;QACL,YAAY;;AAEd,UAAM,SAAc;QAClB,SAAO,eAAA;QACP,SAAO,eAAA;QACP,SAAO,eAAA;QACP,OAAK,aAAA;QACL,QAAM,cAAA;QACN,SAAO,eAAA;;AAET,UAAI,cAAc;;AAChB,mBAAoB,iBAAA,SAAA,eAAY,mBAAA,eAAA,QAAA,CAAA,iBAAA,MAAA,mBAAA,eAAA,QAAE;AAA7B,gBAAM,QAAK,iBAAA;AACd,gBAAM,SAAO,MAAM;AACnB,kBAAM,MAAM,QAAQ,cAAc;AAClC,mBAAO,UAAQ;;;;;;;;;;;;;;AAInB,aAAO,WAAW;AAClB,aAAO;;AA1BT,YAAA,wBAAA;AAiCa,YAAA,SAAqrB,YAAA,YAAY;MACvB,CAAC,cAAc;MACf,CAAC,aAAa;MACd,CAAC,OAAO;MACR,CAAC,oBAAoB;MACrB,CAAC,kBAAkB;MACnB,CAAC,aAAa;MACd,CAAC,kBAAkB;MACnB,CAAC,cAAc;MACf,CAAC,YAAY;MACb,CAAC,eAAe;MAChB,CAAC,UAAU;MACX,CAAC,UAAU;MACX,CAAC,YAAY;MACb,CAAC,gBAAgB;MACjB,CAAC,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbC,YAAA,OAAijBR,QAAA,WAAA;AACA,QAAA,WAAA;AACA,QAAA,oBAAA;AACA,QAAA,WAAA;AACA,QAAA,cAAA;AACA,QAAA,SAAA;AASA,QAAY;AAAZ,IAAA,UAAY,cAAW;AAMrB,mBAAA,oBAAA;AAOA,mBAAA,mBAAA;AAOA,mBAAA,4BAAA;AAOA,mBAAA,eAAA;AAOA,mBAAA,qBAAA;AAOA,mBAAA,wBAAA;OAzCU,cAAA,QAAA,eAAA,SAAA,cAAW;AA4CvB,QAAY;AAAZ,IAAA,UAAY,QAAK;AACf,aAAA,OAAA,aAAA,KAAA;AACA,aAAA,OAAA,aAAA,KAAA;AACA,aAAA,OAAA,aAAA,KAAA;AACA,aAAA,OAAA,WAAA,MAAA;AACA,aAAA,OAAA,YAAA,KAAA;AACA,aAAA,OAAA,aAAA,YAAA;OANU,QAAA,QAAA,SAAA,SAAA,QAAK;AASjB,QAAY;AAAZ,IAAA,UAAY,WAAQ;AAClB,gBAAA,gBAAA;AACA,gBAAA,eAAA;AACA,gBAAA,SAAA;AACA,gBAAA,sBAAA;AACA,gBAAA,oBAAA;AACA,gBAAA,eAAA;AACA,gBAAA,oBAAA;AACA,gBAAA,gBAAA;AACA,gBAAA,cAAA;AACA,gBAAA,iBAAA;AACA,gBAAA,YAAA;AACA,gBAAA,YAAA;AACA,gBAAA,kBAAA;AACA,gBAAA,cAAA;AACA,gBAAA,WAAA;OAfU,YAAA,QAAA,YAAA,SAAA,WAAQ;AAkBpB,QAAY;AAAZ,IAAA,UAAY,gBAAa;AACvB,qBAAA,kBAAA;AACA,qBAAA,iBAAA;AACA,qBAAA,sBAAA;OAHU,gBAAA,QAAA,iBAAA,SAAA,gBAAa;AAMzB,QAAY;AAAZ,IAAA,UAAY,qBAAkB;AAC5B,0BAAA,YAAA;AACA,0BAAA,YAAA;AACA,0BAAA,YAAA;OAHU,qBAAA,QAAA,sBAAA,SAAA,qBAAkB;AAwF9B,QAAA,UAAA,SAAA,QAAA;AAAoC,gBAAA,SAAA;AA6KlC,uBAAY,MAAgB;;;AAA5B,YAAA,QACE,OAAA,KAAA,SAAO;AAzKD,cAAA,sBAAgD;AAChD,cAAA,QAAkB;AAyKxB,cAAK,gBAAgB,MAAA,KAAK,kBAAY,QAAA,OAAA,SAAA,KAAI;AAC1C,cAAK,eAAe,MAAK,SAAS,KAAK;AACvC,cAAK,mBAAmB,MAAA,MAAK,aAAa,qBAAe,QAAA,OAAA,SAAA,KAAI,UAAS;;AACtE,mBAAiB,KAAA,SAAA,MAAK,aAAa,YAAS,KAAA,GAAA,QAAA,CAAA,GAAA,MAAA,KAAA,GAAA,QAAE;AAAzC,gBAAM,KAAE,GAAA;AACX,gBAAI,CAAC,GAAG,UAAU;AAChB,iBAAG,WAAW,MAAK,cAAc,GAAG;;;;;;;;;;;;;;AAGxC,cAAK,YAAY,MAAK;AACtB,YAAI,KAAK,oBAAoB;AAC3B,gBAAK,sBAAsB,KAAK;;AAElC,YAAI,KAAK,UAAU;AACjB,gBAAK,YAAY,KAAK;;AAExB,YAAI,KAAK,MAAM;AACb,gBAAK,QAAQ,KAAK;;;;AA9Jf,cAAA,SAAP,SACE,mBACA,MAA2B;;AAA3B,YAAA,SAAA,QAAA;AAAA,iBAAA;;AAEA,YAAM,YAAY,MAAA,KAAK,eAAS,QAAA,OAAA,SAAA,KAAI;AACpC,YAAM,sBAAmB,SAAA,IAAQ,QAAO,gBAAgB;AACxD,4BAAoB,UAAU;AAE9B,YAAI,OAAO,sBAAsB,UAAU;AACzC,iBAAO,IAAI,QAAM,SAAA,EACf,OAAK,SAAA,SAAA,IACA,sBACA,sBAEF;eAEA;AACL,cAAI,sBAAsB,YAAY,gBAAgB;AACpD,mBAAO,QAAO,OAAO;cACnB,MAAM,YAAY;cAClB,SAAS;cACT,WAAW;;;AAGf,cAAI,sBAAsB,YAAY,eAAe;AACnD,mBAAO,QAAO,OAAO;cACnB,MAAM,YAAY;cAClB,SAAS;cACT,WAAW;;;AAGf,cAAI,sBAAsB,YAAY,wBAAwB;AAC5D,mBAAO,QAAO,OAAO;cACnB,MAAM,YAAY;cAClB,SAAS;cACT,WAAW;;;AAGf,cAAI,sBAAsB,YAAY,WAAW;AAC/C,mBAAO,QAAO,OAAO;cACnB,MAAM,YAAY;cAClB,SAAS;cACT,WAAW;;;AAIf,cAAI,sBAAsB,YAAY,iBAAiB;AACrD,mBAAO,QAAO,OACZ;cACE,MAAM,YAAY;cAClB,SAAS;cACT,WAAW;eAGb,EAAE,UAAU,UAAS;;AAIzB,cAAI,sBAAsB,YAAY,oBAAoB;AACxD,mBAAO,QAAO,OACZ;cACE,MAAM,YAAY;cAClB,SAAS;cACT,WAAW;eAGb,EAAE,UAAU,UAAS;;AAGzB,gBAAM,IAAI,MAAM,gBAAA,OAAgB,mBAAiB;;;AAgB9C,cAAA,iBAAP,SACE,WACA,mBACA,UACA,oBAA6C;AAE7C,YAAM,sBAAsB,QAAO,gBAAgB;AAEnD,eAAO,IAAI,QAAO;UAChB,OAAK,SAAA,SAAA,IACA,sBACA;UAEL;UACA;;;AASG,cAAA,qBAAP,SAA0B,SAAW;AACnC,YAAM,oBAAyB,IAAA,SAAA;AAC/B,eAAO,QAAQ,kBAAkB,SAAS,QAAQ;;AAGrC,cAAA,kBAAf,SACE,OACA,cAAuB;AAEvB,YAAM,oBAAyB,IAAA,SAAA,uBAAsB;AACrD,YAAI,OAAO,UAAU,YAAY,kBAAA,GAAG,KAAK,QAAQ;AAC/C,kBAAQ,MAAM;AAEd,cAAI,kBAAkB,SAAS,QAAQ;AACrC,gBAAM,SAAe,kBAAkB,SAAS;AAChD,mBAAO,kBAAkB;;AAG3B,gBAAM,IAAI,MAAM,iBAAA,OAAiB,OAAK;;AAGxC,YAAI,kBAAkB,QAAQ;AAC5B,iBAAO,kBAAkB;;AAG3B,cAAM,IAAI,MAAM,mBAAA,OAAmB,OAAK;;AAmC1C,cAAA,UAAA,WAAA,SAAS,OAA4C;;AACnD,YAAI,OAAO,UAAU,YAAY,OAAO,UAAU,YAAY,kBAAA,GAAG,KAAK,QAAQ;AAE5E,cAAI,oBAAiB;AACrB,cACE,KAAK,iBACL,KAAK,cAAc,SAAS,KAC5B,MAAM,QAAQ,KAAK,cAAc,KACjC;AACA,gCAAqB,KAAK,cAA2C,IAAI,SAAC,GAAC;AAAK,qBAAA,EAAE;;iBAC7E;AACL,gCAAoB,KAAK;;AAE3B,eAAK,eAAe,QAAO,gBAAgB,OAAO;mBACzC,OAAO,UAAU,UAAU;AACpC,cAAI,KAAK,cAAc,SAAS,GAAG;AACjC,kBAAM,IAAI,MACR;;AAGJ,cAAM,WAAW,CAAC,aAAa,WAAW,aAAa;;AACvD,qBAAoB,aAAA,SAAA,WAAQ,eAAA,WAAA,QAAA,CAAA,aAAA,MAAA,eAAA,WAAA,QAAE;AAAzB,kBAAM,QAAK,aAAA;AACd,kBAAU,MAAO,WAAW,QAAW;AACrC,sBAAM,IAAI,MAAM,qCAAA,OAAqC;;;;;;;;;;;;;;AAGzD,eAAK,eAAe;eACf;AACL,gBAAM,IAAI,MAAM;;AAElB,eAAO,KAAK;;AAOd,cAAA,UAAA,cAAA,SAAY,UAA2B;;AACrC,YAAI,CAAC,KAAK,qBAAqB,WAAW;AACxC,gBAAM,IAAI,MAAM,YAAA,OAAY,UAAQ;;AAEtC,YAAI,WAAW;;AACf,mBAAwB,qBAAA,SAAA,YAAA,YAAgB,uBAAA,mBAAA,QAAA,CAAA,qBAAA,MAAA,uBAAA,mBAAA,QAAE;AAArC,gBAAM,YAAS,qBAAA;AAClB,gBAAI,UAAU,OAAO,UAAU;AAC7B,kBAAI,KAAK,cAAc,UAAU;AAC/B,qBAAK,YAAY;AACjB,qBAAK,KAAK,mBAAmB;;AAE/B,yBAAW;;;;;;;;;;;;;;AAGf,YAAI,CAAC,UAAU;AACb,gBAAM,IAAI,MAAM,sBAAA,OAAsB,UAAQ;;;AAgBlD,cAAA,UAAA,2BAAA,SAAyB,aAAqB,IAAW;;AACvD,sBAAc,IAAA,kBAAA,QAAO,aAAa,kBAAA,WAAW;AAC7C,aAAK,IAAA,kBAAA,QAAO,IAAI,kBAAA,WAAW;AAE3B,YAAI,WAAW,UAAS;AACxB,YAAI;AACJ,YAAI;AACJ,YAAI;;AACJ,mBAAiB,KAAA,SAAA,KAAK,cAAW,KAAA,GAAA,QAAA,CAAA,GAAA,MAAA,KAAA,GAAA,QAAE;AAA9B,gBAAM,KAAE,GAAA;AAEX,gBAAI,GAAG,UAAU,MAAM;AACrB,kBAAI,OAAO,UAAa,OAAO,QAAQ,GAAG,OAAO,UAAa,GAAG,OAAO,MAAM;AAC5E,oBAAI,GAAG,IAAI,IAAI,kBAAA,GAAG,GAAG,MAAM;AACzB,yBAAO,GAAG;;;AAGd;;AAEF,gBAAI,YAAY,IAAI,IAAI,kBAAA,GAAG,GAAG,SAAS;AACrC,yBAAW,GAAG;;AAEhB,gBAAI,MAAM,GAAG,IAAI;AACf,kBAAI,GAAG,IAAI,IAAI,kBAAA,GAAG,GAAG,MAAM;AACzB,0BAAU,GAAG;qBACR;AACL,0BAAU;;;AAGd,yBAAa,GAAG;;;;;;;;;;;;;AAElB,YAAI,IAAI;AACN,cAAI,SAAS,iBAAA,OAAiB,aAAW,SAAA,OAAQ,UAAQ;AACzD,cAAI,SAAS;AACX,gBAAI,CAAC,KAAK,oBAAoB,UAAU,UAAU;AAChD,kBAAM,MAAM;AACZ,wBAAU,qBAAA,OAAqB,IAAE,SAAA,OAAQ,SAAO;AAChD,oBAAM,IAAI,MAAM,GAAA,OAAG,KAAG,MAAA,OAAK;;;AAG/B,cAAI,SAAS;AACX,gBAAI,CAAC,KAAK,oBAAoB,SAAS,WAAW;AAChD,kBAAM,MAAM;AACZ,wBAAU,qBAAA,OAAqB,IAAE,SAAA,OAAQ,SAAO;AAChD,oBAAM,IAAI,MAAM,GAAA,OAAG,KAAG,MAAA,OAAK;;;;AAIjC,eAAO;;AAeT,cAAA,UAAA,2BAAA,SAAyB,aAAqB,IAAW;AACvD,YAAM,WAAW,KAAK,yBAAyB,aAAa;AAC5D,aAAK,YAAY;AACjB,eAAO;;AAQT,cAAA,UAAA,kBAAA,SAAgB,UAAqC,eAA6B;AAA7B,YAAA,kBAAA,QAAA;AAAA,0BAAA;;AACnD,YAAI,CAAC,UAAU;AACb,qBAAW,KAAK;mBACP,iBAAiB,CAAC,KAAK,qBAAqB,WAAW;AAChE,gBAAM,IAAI,MAAM,YAAA,OAAY,UAAQ;;AAEtC,eAAO;;AAQT,cAAA,UAAA,eAAA,SAAa,UAA2B;;AACtC,YAAM,MAAM,KAAK;;AACjB,mBAAiB,QAAA,SAAA,MAAG,UAAA,MAAA,QAAA,CAAA,QAAA,MAAA,UAAA,MAAA,QAAE;AAAjB,gBAAM,KAAE,QAAA;AACX,gBAAI,GAAG,YAAY;AAAU,qBAAO;;;;;;;;;;;;;AAEtC,cAAM,IAAI,MAAM,YAAA,OAAY,UAAQ,2BAAA,OAA0B,KAAK;;AAQrE,cAAA,UAAA,uBAAA,SAAqB,UAAkC;;AACrD,YAAI,KAAK,oBAAoB,SAAS,GAAG;;AACvC,qBAA0B,KAAA,SAAA,KAAK,sBAAmB,KAAA,GAAA,QAAA,CAAA,GAAA,MAAA,KAAA,GAAA,QAAE;AAA/C,kBAAM,cAAW,GAAA;AACpB,kBAAI,aAAa;AAAa,uBAAO;;;;;;;;;;;;;eAElC;AACL,iBAAO;;AAET,eAAO;;AAOT,cAAA,UAAA,UAAA,SAAQ,MAAmB;;AAA3B,YAAA,QAAA;AAAQ,YAAA,SAAA,QAAA;AAAA,iBAAA;;+BACK,MAAG;AACZ,cAAI,CAAE,SAAO,OAAA,OAAO;AAClB,kBAAM,IAAI,MAAM,GAAA,OAAG,MAAG;;AAExB,cAAM,QAAQ,OAAK,YAAY,OAAA,KAAK,MAAK;AACzC,cAAI,CAAC,OAAO;AACV,kBAAM,IAAI,MACR,GAAA,OAAG,MAAG,qCAAA,OAAoC,OAAK,YAAU,uBAAA,OAAsB;;AAGnF,cAAI,OAAA,KAAK,MAAK,cAAc;AAC1B;AAAE,mBAAA,KAAK,MAAK,aAA0B,QAAQ,SAAC,MAAI;AACjD,kBAAI,CAAE,MAAK,SAAS,SAAS,MAAK,eAAe,QAAQ;AACvD,sBAAM,IAAI,MAAM,GAAA,OAAG,MAAG,kBAAA,OAAiB,MAAI;;;;;;;AAbnD,mBAAkB,SAAA,SAAA,OAAI,WAAA,OAAA,QAAA,CAAA,SAAA,MAAA,WAAA,OAAA,QAAA;AAAjB,gBAAM,MAAG,SAAA;oBAAH;;;;;;;;;;;;;AAkBX,aAAK,QAAQ;;AAcf,cAAA,UAAA,QAAA,SAAM,OAAe,MAAY;;AAG/B,YAAI,QAAQ;;AACZ,mBAAkB,KAAA,SAAA,KAAK,QAAK,KAAA,GAAA,QAAA,CAAA,GAAA,MAAA,KAAA,GAAA,QAAE;AAAzB,gBAAM,MAAG,GAAA;AACZ,oBAAQ,KAAK,WAAW,OAAO,MAAM;AACrC,gBAAI,UAAU,MAAM;AAClB,qBAAO;;;;;;;;;;;;;;AAGX,eAAO,KAAK,gBAAgB,OAAO,MAAM,KAAK;;AAUhD,cAAA,UAAA,kBAAA,SAAgB,OAAe,MAAc,UAA2B;;AACtE,mBAAW,KAAK,gBAAgB;AAEhC,YAAI,QAAQ;;AACZ,mBAAwB,qBAAA,SAAA,YAAA,YAAgB,uBAAA,mBAAA,QAAA,CAAA,qBAAA,MAAA,uBAAA,mBAAA,QAAE;AAArC,gBAAM,YAAS,qBAAA;AAElB,gBAAI,UAAU,UAAU,IAAI;AAC1B,kBAAM,SAAS,UAAU,GAAG;;AAC5B,yBAAkB,WAAA,QAAA,QAAA,SAAA,UAAM,aAAA,SAAA,QAAA,CAAA,WAAA,MAAA,aAAA,SAAA,QAAE;AAArB,sBAAM,MAAG,WAAA;AACZ,sBAAM,WAAW,KAAK,WAAW,OAAO,MAAM;AAC9C,0BAAQ,aAAa,OAAO,WAAW;;;;;;;;;;;;;mBAGpC;AACL,kBAAI,CAAC,UAAU,GAAG,QAAQ;AACxB,sBAAM,IAAI,MAAM,SAAA,OAAS,OAAK;;AAEhC,kBAAI,UAAU,GAAG,OAAO,UAAU,QAAW;AAC3C,wBAAQ,UAAU,GAAG,OAAO,MAAM;;;AAGtC,gBAAI,UAAU,OAAO;AAAU;;;;;;;;;;;;;AAEjC,eAAO;;AAUT,cAAA,UAAA,aAAA,SAAW,OAAe,MAAc,KAAW;AACjD,YAAI,CAAE,QAAO,OAAA,OAAO;AAClB,gBAAM,IAAI,MAAM,GAAA,OAAG,KAAG;;AAGxB,YAAM,YAAY,OAAA,KAAK;AACvB,YAAI,CAAE,UAAS,YAAY;AACzB,gBAAM,IAAI,MAAM,SAAA,OAAS,OAAK;;AAEhC,YAAI,UAAU,OAAO,UAAU,QAAW;AACxC,iBAAO;;AAET,YAAM,QAAQ,UAAU,OAAO,MAAM;AACrC,eAAO;;AAST,cAAA,UAAA,eAAA,SAAa,OAAe,MAAc,aAAmB;AAC3D,YAAM,YAAY,KAAK,gBAAgB;AACvC,YAAM,WAAW,UAAU,UAAU,SAAS,GAAG;AACjD,eAAO,KAAK,gBAAgB,OAAO,MAAM;;AAY3C,cAAA,UAAA,iBAAA,SAAe,KAAW;;AACxB,YAAI,KAAK,OAAO,SAAS,MAAM;AAC7B,iBAAO;;;AAET,mBAAwB,qBAAA,SAAA,YAAA,YAAgB,uBAAA,mBAAA,QAAA,CAAA,qBAAA,MAAA,uBAAA,mBAAA,QAAE;AAArC,gBAAM,YAAS,qBAAA;AAClB,gBAAM,KAAK,UAAU;AACrB,gBAAI,KAAK,YAAY,GAAG,YAAY,UAAU,IAAI;AAChD,kBAAI,GAAG,QAAQ,SAAS,MAAM;AAC5B,uBAAO;;;;;;;;;;;;;;;AAIb,eAAO;;AAUT,cAAA,UAAA,0BAAA,SACE,UACA,aACA,MAA0B;;AAA1B,YAAA,SAAA,QAAA;AAAA,iBAAA;;AAEA,sBAAc,IAAA,kBAAA,QAAO,aAAa,kBAAA,WAAW;AAC7C,YAAM,gBAAgB,MAAA,KAAK,mBAAa,QAAA,OAAA,SAAA,KAAI;AAC5C,mBAAW,KAAK,gBAAgB,UAAU;AAC1C,YAAM,UAAU,KAAK,gBAAgB;AACrC,YAAI,WAAW,YAAY,IAAI,UAAU;AACvC,iBAAO;;AAET,eAAO;;AAST,cAAA,UAAA,gBAAA,SAAc,aAAqB,MAAsB;AACvD,eAAO,KAAK,wBAAwB,MAAM,aAAa;;AAUzD,cAAA,UAAA,sBAAA,SACE,WACA,WACA,MAA0B;;AAA1B,YAAA,SAAA,QAAA;AAAA,iBAAA;;AAEA,YAAM,aAAa,KAAK,eAAe,SAAY,QAAQ,KAAK;AAChE,oBAAY,KAAK,gBAAgB,WAAW,KAAK;AAEjD,YAAI;AACJ,YAAI,YAAY;AACd,sBAAY,KAAK,gBAAgB,MAAM;eAClC;AACL,sBAAY,KAAK;;AAGnB,YAAI,SAAS,IACX,SAAS;AACX,YAAI,QAAQ;;AACZ,mBAAiB,cAAA,SAAA,YAAS,gBAAA,YAAA,QAAA,CAAA,cAAA,MAAA,gBAAA,YAAA,QAAE;AAAvB,gBAAM,KAAE,cAAA;AACX,gBAAI,GAAG,YAAY;AAAW,uBAAS;AACvC,gBAAI,GAAG,YAAY;AAAW,uBAAS;AACvC,qBAAS;;;;;;;;;;;;;AAEX,eAAO,UAAU,UAAU,WAAW;;AASxC,cAAA,UAAA,cAAA,SAAY,UAA6B,MAAsB;AAC7D,eAAO,KAAK,oBAAoB,MAAM,UAAU;;AASlD,cAAA,UAAA,0BAAA,SACE,UACA,MAA0B;;;AAA1B,YAAA,SAAA,QAAA;AAAA,iBAAA;;AAEA,YAAM,gBAAgB,MAAA,KAAK,mBAAa,QAAA,OAAA,SAAA,KAAI;AAC5C,mBAAW,KAAK,gBAAgB,UAAU;;AAC1C,mBAAiB,KAAA,SAAA,KAAK,cAAW,KAAA,GAAA,QAAA,CAAA,GAAA,MAAA,KAAA,GAAA,QAAE;AAA9B,gBAAM,KAAE,GAAA;AACX,gBAAI,GAAG,YAAY,YAAY,GAAG,aAAa;AAAM,qBAAO;;;;;;;;;;;;;AAE9D,eAAO;;AAST,cAAA,UAAA,kBAAA,SAAgB,aAA6B,MAA0B;;AAA1B,YAAA,SAAA,QAAA;AAAA,iBAAA;;AAC3C,YAAM,kBAAoC;AAC1C,YAAM,MAAM,KAAK;;AACjB,mBAAiB,QAAA,SAAA,MAAG,UAAA,MAAA,QAAA,CAAA,QAAA,MAAA,UAAA,MAAA,QAAE;AAAjB,gBAAM,KAAE,QAAA;AACX,gBAAI,GAAG,aAAa;AAAM;AAC1B,gBAAI,gBAAgB,UAAa,gBAAgB,QAAQ,cAAc,GAAG;AAAU;AACpF,gBAAI,KAAK,iBAAiB,CAAC,KAAK,qBAAqB,GAAG;AAAU;AAElE,4BAAgB,KAAK;;;;;;;;;;;;;AAEvB,eAAO;;AAST,cAAA,UAAA,iBAAA,SAAe,aAA6B,MAA0B;AAA1B,YAAA,SAAA,QAAA;AAAA,iBAAA;;AAC1C,YAAM,kBAAkB,KAAK,gBAAgB,aAAa;AAC1D,YAAI,gBAAgB,SAAS,GAAG;AAC9B,iBAAO,gBAAgB,gBAAgB,SAAS,GAAG;eAC9C;AACL,gBAAM,IAAI,MAAM;;;AAUpB,cAAA,UAAA,gBAAA,SAAc,UAA4B;AACxC,YAAM,QAAQ,KAAK,gBAAgB;AACnC,eAAO,IAAA,kBAAA,QAAO,OAAO,kBAAA,WAAW;;AAQlC,cAAA,UAAA,kBAAA,SAAgB,UAA4B;AAC1C,mBAAW,KAAK,gBAAgB,UAAU;AAC1C,YAAM,QAAQ,KAAK,aAAa,UAAU;AAC1C,YAAI,UAAU,UAAa,UAAU,MAAM;AACzC,iBAAO;;AAET,eAAO,IAAI,kBAAA,GAAG;;AAQhB,cAAA,UAAA,aAAA,SAAW,UAA4B;AACrC,mBAAW,KAAK,gBAAgB,UAAU;AAC1C,YAAM,KAAK,KAAK,aAAa,UAAU;AACvC,YAAI,OAAO,UAAa,OAAO,MAAM;AACnC,iBAAO;;AAET,eAAO,IAAI,kBAAA,GAAG;;AAShB,cAAA,UAAA,kBAAA,SAAgB,aAAqB,UAA4B;AAC/D,sBAAc,IAAA,kBAAA,QAAO,aAAa,kBAAA,WAAW;AAC7C,mBAAW,KAAK,gBAAgB,UAAU;AAC1C,YAAM,QAAQ,KAAK,gBAAgB;AACnC,eAAO,QAAQ,MAAM,GAAG,eAAe;;AASzC,cAAA,UAAA,oBAAA,SAAkB,UAA4B;AAC5C,YAAM,QAAQ,KAAK,oBAAoB;AACvC,eAAO,IAAA,kBAAA,QAAO,OAAO,kBAAA,WAAW;;AAQlC,cAAA,UAAA,sBAAA,SAAoB,UAA4B;AAC9C,mBAAW,KAAK,gBAAgB,UAAU;AAC1C,YAAM,UAAU,KAAK,gBAAgB;AACrC,YAAI,YAAY,MAAM;AACpB,iBAAO;;AAMT,YAAM,cAAc,KAAK,YAAY,OAAO,SAAC,KAAgB,IAAkB;AAC7E,cAAM,QAAQ,IAAI,kBAAA,GAAG,GAAG;AACxB,iBAAO,MAAM,GAAG,YAAY,QAAQ,OAAO,QAAQ;WAClD;AACH,eAAO;;AAST,cAAA,UAAA,sBAAA,SAAoB,aAAqB,UAA4B;AACnE,sBAAc,IAAA,kBAAA,QAAO,aAAa,kBAAA,WAAW;AAC7C,mBAAW,KAAK,gBAAgB,UAAU;AAC1C,YAAM,oBAAoB,KAAK,oBAAoB;AAEnD,eAAO,sBAAsB,OAAO,QAAQ,kBAAkB,GAAG;;AAQnE,cAAA,UAAA,gBAAA,SAAc,UAA2B;;AACvC,YAAM,UAAU,OAAO,KAAK,KAAK,UAAU,KAAK,OAAO,IAAI;AAE3D,YAAI,WAAW,OAAO,MAAM;AAC5B,YAAI,YAAY;;AAChB,mBAAiB,KAAA,SAAA,KAAK,cAAW,KAAA,GAAA,QAAA,CAAA,GAAA,MAAA,KAAA,GAAA,QAAE;AAA9B,gBAAM,KAAE,GAAA;AACX,gBAAM,QAAQ,GAAG;AAIjB,gBAAI,UAAU,KAAK,UAAU,QAAQ,UAAU,WAAW;AACxD,kBAAM,gBAAgB,OAAO,KAAK,MAAM,SAAS,IAAI,SAAS,IAAI,MAAM;AACxE,yBAAW,OAAO,OAAO,CAAC,UAAU;;AAGtC,gBAAI,GAAG,SAAS;AAAU;AAC1B,gBAAI,UAAU,MAAM;AAClB,0BAAY;;;;;;;;;;;;;;AAGhB,YAAM,cAAc,OAAO,OAAO,CAAC,SAAS;AAI5C,YAAM,WAAW,IAAA,kBAAA,aAAY,IAAA,SAAA,KAAY,iBAAiB,GAAG,SAAS;AACtE,eAAO,KAAA,OAAK;;AAOd,cAAA,UAAA,WAAA,SAAS,UAA4B;AACnC,mBAAW,KAAK,gBAAgB,UAAU;AAC1C,YAAM,OAAO,KAAK,aAAa;AAC/B,YAAI,KAAK,aAAa,QAAQ,KAAK,UAAU,QAAW;AACtD,cAAM,MAAM;AACZ,gBAAM,IAAI,MAAM;;AAElB,YAAI,KAAK,gBAAgB,QAAW;AAClC,iBAAO,KAAK;;AAEd,eAAO,KAAK,cAAc;;AAQ5B,cAAA,UAAA,sBAAA,SAAoB,UAAgB;AAClC,YAAM,WAAW,KAAK,YAAY,OAAO,SAAC,IAAO;AAC/C,iBAAO,GAAG,aAAa;;AAEzB,eAAO,SAAS,UAAU,IAAI,SAAS,SAAS,SAAS,KAAK;;AAOhE,cAAA,UAAA,UAAA,WAAA;AACE,eAAO,KAAK,aAAa;;AAO3B,cAAA,UAAA,eAAA,WAAA;;AAIE,gBAAQ,KAAK;eACN;AACH,mBAAO;eACJ;AACH,mBAAO;eACJ;AACH,mBAAO;eACJ;AACH,mBAAO;eACJ;AACH,mBAAO;eACJ;AACH,mBAAO;;AAIX,YACE,KAAK,iBACL,KAAK,cAAc,SAAS,KAC5B,MAAM,QAAQ,KAAK,cAAc,KACjC;;AACA,qBAAoC,KAAA,SAAA,KAAK,gBAAyC,KAAA,GAAA,QAAA,CAAA,GAAA,MAAA,KAAA,GAAA,QAAE;AAA/E,kBAAM,wBAAqB,GAAA;AAC9B,kBAAI,sBAAsB,GAAG,SAAS,KAAK,aAAa;AACtD,uBAAO,sBAAsB;;;;;;;;;;;;;;;AAKnC,eAAO;;AAOT,cAAA,UAAA,YAAA,WAAA;AACE,eAAO,KAAK,aAAa;;AAO3B,cAAA,UAAA,iBAAA,WAAA;AACE,eAAO,KAAK,aAAa;;AAO3B,cAAA,UAAA,cAAA,WAAA;AACE,eAAO,KAAK,aAAa;;AAO3B,cAAA,UAAA,WAAA,WAAA;AACE,eAAO,KAAK;;AAQd,cAAA,UAAA,UAAA,WAAA;AACE,eAAO,IAAA,kBAAA,QAAO,KAAK,aAAa,kBAAA,WAAW;;AAO7C,cAAA,UAAA,YAAA,WAAA;AACE,eAAO,IAAI,kBAAA,GAAG,KAAK,aAAa;;AAOlC,cAAA,UAAA,YAAA,WAAA;AACE,eAAO,KAAK,aAAa;;AAQ3B,cAAA,UAAA,YAAA,WAAA;AACE,eAAO,IAAA,kBAAA,QAAO,KAAK,eAAe,kBAAA,WAAW;;AAO/C,cAAA,UAAA,cAAA,WAAA;AACE,eAAO,IAAI,kBAAA,GAAG,KAAK,aAAa;;AAOlC,cAAA,UAAA,OAAA,WAAA;AACE,eAAO,KAAK;;AASd,cAAA,UAAA,gBAAA,WAAA;;AACE,YAAM,WAAW,KAAK;AAEtB,YAAI;;AACJ,mBAAwB,qBAAA,SAAA,YAAA,YAAgB,uBAAA,mBAAA,QAAA,CAAA,qBAAA,MAAA,uBAAA,mBAAA,QAAE;AAArC,gBAAM,YAAS,qBAAA;AAClB,gBAAI,eAAe,UAAU,IAAI;AAC/B,sBAAQ,UAAU,GAAG,aAAa;;AAEpC,gBAAI,UAAU,OAAO;AAAU;;;;;;;;;;;;;AAEjC,YAAI,OAAO;AACT,iBAAO;;AAET,eAAO,KAAK,aAAa,aAAc;;AAYzC,cAAA,UAAA,qBAAA,WAAA;;AACE,YAAM,WAAW,KAAK;AAEtB,YAAI;;AACJ,mBAAwB,qBAAA,SAAA,YAAA,YAAgB,uBAAA,mBAAA,QAAA,CAAA,qBAAA,MAAA,uBAAA,mBAAA,QAAE;AAArC,gBAAM,YAAS,qBAAA;AAClB,gBAAI,eAAe,UAAU,IAAI;AAC/B,sBAAQ,UAAU,GAAG,aAAa;;AAEpC,gBAAI,UAAU,OAAO;AAAU;;;;;;;;;;;;;AAEjC,YAAI,OAAO;AACT,iBAAO;;AAET,eAAO,KAAK,aAAa,aAAc;;AAiBzC,cAAA,UAAA,kBAAA,WAAA;;AACE,YAAM,WAAW,KAAK;AAEtB,YAAI;;AACJ,mBAAwB,qBAAA,SAAA,YAAA,YAAgB,uBAAA,mBAAA,QAAA,CAAA,qBAAA,MAAA,uBAAA,mBAAA,QAAE;AAArC,gBAAM,YAAS,qBAAA;AAClB,gBAAI,eAAe,UAAU,IAAI;AAE/B,sBAAQ,UAAU,GAAG,aAAa,UAAU,GAAG,aAAa;;AAE9D,gBAAI,UAAU,OAAO;AAAU;;;;;;;;;;;;;AAEjC,YAAI,OAAO;AACT,iBAAO;;AAET,YAAM,qBAAqB,KAAK;AAChC,eAAO,KAAK,aAAa,aAAc;;AAMzC,cAAA,UAAA,OAAA,WAAA;AACE,eAAO,OAAO,OAAO,OAAO,OAAO,OAAO,eAAe,QAAQ;;AAErE,aAAA;MAhgCoC,SAAA;;;;;;;;;;;;ACnLpC,QAAA,oBAAA;AAUA,QAAY;AAAZ,IAAA,UAAY,aAAU;AAKpB,kBAAA,YAAA,4BAAA,OAAA;AAMA,kBAAA,YAAA,sBAAA,QAAA;AAMA,kBAAA,YAAA,6BAAA,QAAA;AAMA,kBAAA,YAAA,wBAAA,QAAA;OAvBU,aAAA,QAAA,cAAA,SAAA,aAAU;AAuEtB,gCACE,OAAoC;AAEpC,UAAI,MAAM,WAAW,GAAG;AACtB,eAAO;;AAET,UAAM,YAAY,MAAM;AACxB,UAAI,MAAM,QAAQ,YAAY;AAC5B,eAAO;;AAET,aAAO;;AAVT,YAAA,qBAAA;AAaA,0BAA6B,OAAoC;AAC/D,aAAO,CAAC,mBAAmB;;AAD7B,YAAA,eAAA;AA+Ka,YAAA,UAAU,IAAI,kBAAA,GACzB,oEACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/QF,QAAA,WAAA,aAAA;AACA,QAAA,oBAAA;AAYA,QAAA,UAAA;AA0BA,QAAA,kBAAA,WAAA;AA6CE,gCAAY,QAAiE;AA9BnE,aAAA,QAA0B;UAClC,MAAM;UACN,SAAS;;AAQD,aAAA,qBAA+B;AAU/B,aAAA,gBAAgB,SAAA,MAAM;AAQtB,aAAA,mBAAsC,SAAA,SAAS;AAG/C,YAAA,QAAoD,OAAM,OAAnD,WAA6C,OAAM,UAAzC,KAAmC,OAAM,IAArC,QAA+B,OAAM,OAA9B,OAAwB,OAAM,MAAxB,IAAkB,OAAM,GAArB,IAAe,OAAM,GAAlB,IAAY,OAAM,GAAf,OAAS,OAAM;AAClE,aAAK,QAAQ,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,OAAO;AAEpC,YAAM,MAAM,IAAA,kBAAA,UAAS,OAAO,KAAK,OAAO;AACxC,YAAM,KAAK,IAAA,kBAAA,UAAS,MAAM,KAAK,OAAO;AACtC,YAAM,KAAK,IAAA,kBAAA,UAAS,MAAM,KAAK,OAAO;AACtC,YAAM,KAAK,IAAA,kBAAA,UAAS,MAAM,KAAK,OAAO;AAEtC,aAAK,QAAQ,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,UAAU,KAAK,OAAO;AACnD,aAAK,WAAW,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,aAAa,KAAK,OAAO;AACzD,aAAK,KAAK,IAAI,SAAS,IAAI,IAAI,kBAAA,QAAQ,OAAO;AAC9C,aAAK,QAAQ,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,UAAU,KAAK,OAAO;AACnD,aAAK,OAAO,IAAA,kBAAA,UAAS,SAAS,KAAK,OAAO;AAE1C,aAAK,IAAI,GAAG,SAAS,IAAI,IAAI,kBAAA,GAAG,MAAM;AACtC,aAAK,IAAI,GAAG,SAAS,IAAI,IAAI,kBAAA,GAAG,MAAM;AACtC,aAAK,IAAI,GAAG,SAAS,IAAI,IAAI,kBAAA,GAAG,MAAM;AAEtC,aAAK,gCAAgC,EAAE,OAAO,KAAK,OAAO,GAAG,KAAK,GAAG,GAAG,KAAK;AAG7E,aAAK,gCAAgC,EAAE,UAAU,KAAK,YAAY;AAGlE,aAAK,gCAAgC,EAAE,OAAO,KAAK,SAAS,IAAI;;AAQlE,aAAA,eAAI,iBAAA,WAAA,mBAAe;aAAnB,WAAA;AACE,iBAAO,KAAK;;;;;AAQd,aAAA,eAAI,iBAAA,WAAA,QAAI;aAAR,WAAA;AACE,iBAAO,KAAK;;;;;AAmBd,uBAAA,UAAA,WAAA,SAAS,YAAsB;AAC7B,eAAO,KAAK,mBAAmB,SAAS;;AAU1C,uBAAA,UAAA,WAAA,SAAS,aAA4B;AAA5B,YAAA,gBAAA,QAAA;AAAA,wBAAA;;AACP,YAAM,SAAS;AAEf,YAAI,KAAK,aAAa,GAAG,KAAK,WAAW;AACvC,iBAAO,KAAK,8BAAA,OAA8B,KAAK,UAAQ,oBAAA,OAAmB,KAAK;;AAGjF,YAAI,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC9C,iBAAO,KAAK;;AAGd,eAAO,cAAc,SAAS,OAAO,WAAW;;AAMlD,uBAAA,UAAA,aAAA,WAAA;AACE,YAAM,MAAM,KAAK,aAAa,KAAK,KAAK,OAAO,MAAM,aAAa;AAClE,YAAI,KAAK,OAAO,YAAY,gBAAgB,KAAK,qBAAqB;AACpE,cAAI,MAAM,KAAK,OAAO,MAAM,aAAa;;AAE3C,eAAO;;AAMT,uBAAA,UAAA,aAAA,WAAA;AACE,YAAM,aAAa,KAAK,OAAO,MAAM,aAAa;AAClD,YAAM,gBAAgB,KAAK,OAAO,MAAM,aAAa;AAErD,YAAI,OAAO;AACX,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,QAAQ,KAAK;AACzC,eAAK,KAAK,OAAO,IAAK,QAAQ,aAAe,QAAQ;;AAGvD,eAAO,IAAI,kBAAA,GAAG;;AAWhB,uBAAA,UAAA,oBAAA,WAAA;AACE,eAAO,KAAK,OAAO,UAAa,KAAK,GAAG,IAAI,WAAW;;AA+BlD,uBAAA,UAAA,WAAP,WAAA;AACQ,YAAA,KAAc,MAAZ,IAAC,GAAA,GAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACf,YAAI,KAAK,SAAS,GAAG;AACnB,cAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG;AAClB,mBAAO;iBACF;AACL,mBAAO;;eAEJ;AACL,cAAI,MAAM,UAAa,CAAC,KAAK,CAAC,GAAG;AAC/B,mBAAO;iBACF;AACL,mBAAO;;;;AAQb,uBAAA,UAAA,kBAAA,WAAA;AACE,YAAI;AAEF,cAAM,YAAY,KAAK;AACvB,iBAAO,IAAA,kBAAA,aAAY,WAAW,WAAW;iBAClC,GAAP;AACA,iBAAO;;;AAOX,uBAAA,UAAA,mBAAA,WAAA;AACE,eAAO,IAAI,kBAAA,QAAQ,IAAA,kBAAA,iBAAgB,KAAK;;AAiB1C,uBAAA,UAAA,OAAA,SAAK,YAAkB;AACrB,YAAI,WAAW,WAAW,IAAI;AAC5B,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAOlB,YAAI,cAAc;AAClB,YACE,KAAK,SAAS,KACd,KAAK,OAAO,YAAY,qBACxB,CAAC,KAAK,SAAS,QAAA,WAAW,yBAC1B;AACA,eAAK,mBAAmB,KAAK,QAAA,WAAW;AACxC,wBAAc;;AAGhB,YAAM,UAAU,KAAK,iBAAiB;AAChC,YAAA,KAAc,IAAA,kBAAA,QAAO,SAAS,aAA5B,IAAC,GAAA,GAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACf,YAAM,KAAK,KAAK,kBAAkB,GAAG,GAAG;AAGxC,YAAI,aAAa;AACf,cAAM,QAAQ,KAAK,mBAAmB,QAAQ,QAAA,WAAW;AACzD,cAAI,QAAQ,IAAI;AACd,iBAAK,mBAAmB,OAAO,OAAO;;;AAI1C,eAAO;;AAmBC,uBAAA,UAAA,aAAV,SAAqB,QAAiB,SAAgB;;AAEpD,YAAI,SAAS;AACX,cAAM,YAAY,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS;AAClC,cAAI,QAAQ;AACV,gBAAI,CAAC,OAAO,YAAY,GAAG,YAAY;AACrC,kBAAM,MAAM,KAAK,UAAU;AAC3B,oBAAM,IAAI,MAAM;;AAIlB,mBAAO,OAAO;iBACT;AACL,gBAAI,SAAA,QAAO,mBAAmB,YAAY;AAGxC,qBAAO,IAAI,SAAA,QAAO,EAAE,OAAO,WAAW,UAAU,KAAK;mBAChD;AAGL,qBAAO,SAAA,QAAO,eACZ,KAAK,eACL;gBACE,MAAM;gBACN,WAAW;gBACX,SAAS;iBAEX,KAAK;;;eAIN;AAGL,iBACE,MAAA,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,YAAM,QAAA,OAAA,SAAA,KAAI,IAAI,SAAA,QAAO,EAAE,OAAO,KAAK,eAAe,UAAU,KAAK;;;AAWrE,uBAAA,UAAA,kCAAV,SACE,QACA,MACA,aAAmB;;AADnB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACA,YAAA,gBAAA,QAAA;AAAA,wBAAA;;;AAEA,mBAA2B,KAAA,SAAA,OAAO,QAAQ,UAAO,KAAA,GAAA,QAAA,CAAA,GAAA,MAAA,KAAA,GAAA,QAAE;AAAxC,gBAAA,KAAA,OAAA,GAAA,OAAA,IAAC,MAAG,GAAA,IAAE,QAAK,GAAA;AACpB,oBAAQ;mBACD;AACH,oBAAI,aAAa;AACf,sBAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,IAAI,kBAAA,aAAa;AAC1B,wBAAM,MAAM,KAAK,UACf,GAAA,OAAG,KAAG,uDAAA,OAAsD;AAE9D,0BAAM,IAAI,MAAM;;uBAEb;AACL,sBAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,GAAG,kBAAA,aAAa;AACzB,wBAAM,MAAM,KAAK,UAAU,GAAA,OAAG,KAAG,8CAAA,OAA6C;AAC9E,0BAAM,IAAI,MAAM;;;AAGpB;mBACG;AACH,oBAAI,aAAa;AACf,sBAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,IAAI,kBAAA,cAAc;AAC3B,wBAAM,MAAM,KAAK,UACf,GAAA,OAAG,KAAG,yDAAA,OAAwD;AAEhE,0BAAM,IAAI,MAAM;;uBAEb;AACL,sBAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,GAAG,kBAAA,cAAc;AAC1B,wBAAM,MAAM,KAAK,UACf,GAAA,OAAG,KAAG,gDAAA,OAA+C;AAEvD,0BAAM,IAAI,MAAM;;;AAGpB;uBACO;AACP,oBAAM,MAAM,KAAK,UAAU;AAC3B,sBAAM,IAAI,MAAM;;;;;;;;;;;;;;;;AAuBd,uBAAA,UAAA,yBAAV,WAAA;AACE,YAAI,OAAO;AACX,YAAI;AACF,iBAAO,KAAK,aAAa,IAAA,kBAAA,aAAY,KAAK,UAAU;iBAC7C,GAAP;AACA,iBAAO;;AAET,YAAI,WAAW;AACf,YAAI;AACF,qBAAW,KAAK,WAAW;iBACpB,GAAP;AACA,iBAAO;;AAET,YAAI,KAAK;AACT,YAAI;AACF,eAAK,KAAK,OAAO;iBACV,GAAP;AACA,eAAK;;AAGP,YAAI,UAAU,WAAA,OAAW,KAAK,MAAI,UAAA,OAAS,MAAI,WAAA,OAAU,KAAK,OAAK,WAAA,OAAU,KAAK,OAAK;AACvF,mBAAW,UAAA,OAAU,UAAQ,QAAA,OAAO;AAEpC,eAAO;;AAEX,aAAA;;AAnbsB,YAAA,kBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCtB,QAAA,oBAAA;AAYA,QAAA,UAAA;AACA,QAAA,oBAAA;AAGA,QAAM,mBAAmB;AAKzB,QAAA,cAAA,SAAA,QAAA;AAAyC,gBAAA,cAAA;AAoFvC,4BAAmB,QAAgB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;;AAAnC,YAAA,QACE,OAAA,KAAA,MAAA,SAAA,SAAA,IAAW,SAAM,EAAE,MAAM,wBAAmB;AAE5C,cAAK,SAAS,MAAK,aAAa,MAAK,GAAG,KAAK;AAE7C,cAAK,WAAW,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,OAAO,aAAa,KAAK,OAAO,OAAO;AAEvE,YAAI,MAAK,SAAS,IAAI,MAAK,UAAU,GAAG,kBAAA,cAAc;AACpD,cAAM,MAAM,MAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAElB,cAAK,gCAAgC,EAAE,UAAU,MAAK;AAEtD,YAAI,MAAK,OAAO,YAAY,mBAAmB;AAC7C,cAAI,CAAC,MAAK,YAAY;AACpB,kBAAK,mBAAmB,KAAK,QAAA,WAAW;iBACnC;AAML,gBAAM,IAAI,MAAK;AACf,gBAAM,iBAAiB,MAAK,OAAO,YAAY,KAAK;AAGpD,gBAAI,EAAE,GAAG,eAAe,KAAK,QAAQ,EAAE,GAAG,eAAe,KAAK,MAAM;AAClE,oBAAK,mBAAmB,KAAK,QAAA,WAAW;;;;AAK9C,YAAM,SAAS,MAAA,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,YAAM,QAAA,OAAA,SAAA,KAAI;AAC/B,YAAI,QAAQ;AACV,iBAAO,OAAO;;;;AAzGJ,mBAAA,aAAd,SAAyB,QAAgB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACvC,eAAO,IAAI,aAAY,QAAQ;;AAQnB,mBAAA,mBAAd,SAA+B,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACjD,YAAM,SAAS,kBAAA,IAAI,OAAO;AAE1B,YAAI,CAAC,MAAM,QAAQ,SAAS;AAC1B,gBAAM,IAAI,MAAM;;AAGlB,eAAO,KAAK,gBAAgB,QAAQ;;AAUxB,mBAAA,sBAAd,SAAkC,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACpD,eAAO,aAAY,iBAAiB,YAAY;;AAQpC,mBAAA,kBAAd,SAA8B,QAAuB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AAGnD,YAAI,OAAO,WAAW,KAAK,OAAO,WAAW,GAAG;AAC9C,gBAAM,IAAI,MACR;;AAIE,YAAA,KAAA,OAAwD,QAAM,IAA7D,QAAK,GAAA,IAAE,WAAQ,GAAA,IAAE,WAAQ,GAAA,IAAE,KAAE,GAAA,IAAE,QAAK,GAAA,IAAE,OAAI,GAAA,IAAE,IAAC,GAAA,IAAE,IAAC,GAAA,IAAE,IAAC,GAAA;AAE1D,QAAA,IAAA,kBAAA,yBAAwB,EAAE,OAAO,UAAU,UAAU,OAAO,GAAG,GAAG;AAElE,eAAO,IAAI,aACT;UACE;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;WAEF;;AA8DJ,mBAAA,UAAA,MAAA,WAAA;AACE,eAAO;UACL,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,KAAK,OAAO,SAAY,KAAK,GAAG,MAAM,OAAO,KAAK;UAClD,IAAA,kBAAA,oBAAmB,KAAK;UACxB,KAAK;UACL,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;UAChE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;UAChE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;;;AAapE,mBAAA,UAAA,YAAA,WAAA;AACE,eAAO,kBAAA,IAAI,OAAO,KAAK;;AAGjB,mBAAA,UAAA,oBAAR,WAAA;AACE,YAAM,SAAS;UACb,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,KAAK,OAAO,SAAY,KAAK,GAAG,MAAM,OAAO,KAAK;UAClD,IAAA,kBAAA,oBAAmB,KAAK;UACxB,KAAK;;AAGP,YAAI,KAAK,SAAS,QAAA,WAAW,yBAAyB;AACpD,iBAAO,KAAK,IAAA,kBAAA,UAAS,KAAK,OAAO;AACjC,iBAAO,KAAK,IAAA,kBAAA,aAAY,IAAA,kBAAA,UAAS;AACjC,iBAAO,KAAK,IAAA,kBAAA,aAAY,IAAA,kBAAA,UAAS;;AAGnC,eAAO;;AAoBT,mBAAA,UAAA,mBAAA,SAAiB,aAAkB;AAAlB,YAAA,gBAAA,QAAA;AAAA,wBAAA;;AACf,YAAM,UAAU,KAAK;AACrB,YAAI,aAAa;AACf,iBAAO,IAAA,kBAAA,SAAQ;eACV;AACL,iBAAO;;;AAOX,mBAAA,UAAA,aAAA,WAAA;AACE,YAAI,KAAK,MAAM,WAAW,KAAK,MAAM,QAAQ,aAAa,KAAK,OAAO,YAAY;AAChF,iBAAO,KAAK,MAAM,QAAQ;;AAG5B,YAAI,OAAO,SAAS,OAAO;AACzB,eAAK,MAAM,UAAU;YACnB,OAAO,OAAA,UAAM,WAAU,KAAA;YACvB,UAAU,KAAK,OAAO;;;AAI1B,eAAO,OAAA,UAAM,WAAU,KAAA;;AAMzB,mBAAA,UAAA,iBAAA,WAAA;AACE,eAAO,KAAK,SAAS,IAAI,KAAK,UAAU,IAAI,KAAK;;AASnD,mBAAA,UAAA,OAAA,WAAA;AAgBE,YAAI,OAAO,SAAS,OAAO;AACzB,cAAI,CAAC,KAAK,MAAM,MAAM;AACpB,iBAAK,MAAM,OAAO,IAAA,kBAAA,SAAQ,KAAK;;AAEjC,iBAAO,KAAK,MAAM;;AAGpB,eAAO,IAAA,kBAAA,SAAQ,KAAK;;AAMtB,mBAAA,UAAA,8BAAA,WAAA;AACE,YAAI,CAAC,KAAK,YAAY;AACpB,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAElB,YAAM,UAAU,KAAK;AACrB,eAAO,IAAA,kBAAA,SAAQ;;AAMjB,mBAAA,UAAA,qBAAA,WAAA;;AACE,YAAM,UAAU,KAAK;AAIrB,YAAI,KAAK,OAAO,YAAY,gBAAgB,OAAA,KAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,WAAU;AAC/D,cAAM,MAAM,KAAK,UACf;AAEF,gBAAM,IAAI,MAAM;;AAGZ,YAAA,KAAc,MAAZ,IAAC,GAAA,GAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACf,YAAI;AACF,iBAAO,IAAA,kBAAA,WACL,SACA,GACA,IAAA,kBAAA,oBAAmB,IACnB,IAAA,kBAAA,oBAAmB,IACnB,KAAK,SAAS,QAAA,WAAW,0BAA0B,KAAK,OAAO,cAAc;iBAExE,GAAP;AACA,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;;AAOV,mBAAA,UAAA,oBAAV,SAA4B,GAAW,GAAW,GAAS;AACzD,YAAM,MAAM,IAAI,kBAAA,GAAG;AACnB,YAAI,KAAK,SAAS,QAAA,WAAW,yBAAyB;AACpD,cAAI,KAAK,KAAK,OAAO,YAAY,KAAK,GAAG,KAAK;;AAGhD,YAAM,OAAO;UACX,QAAQ,KAAK;;AAGf,eAAO,aAAY,WACjB;UACE,OAAO,KAAK;UACZ,UAAU,KAAK;UACf,UAAU,KAAK;UACf,IAAI,KAAK;UACT,OAAO,KAAK;UACZ,MAAM,KAAK;UACX,GAAG;UACH,GAAG,IAAI,kBAAA,GAAG;UACV,GAAG,IAAI,kBAAA,GAAG;WAEZ;;AAOJ,mBAAA,UAAA,SAAA,WAAA;AACE,eAAO;UACL,OAAO,IAAA,kBAAA,SAAQ,KAAK;UACpB,UAAU,IAAA,kBAAA,SAAQ,KAAK;UACvB,UAAU,IAAA,kBAAA,SAAQ,KAAK;UACvB,IAAI,KAAK,OAAO,SAAY,KAAK,GAAG,aAAa;UACjD,OAAO,IAAA,kBAAA,SAAQ,KAAK;UACpB,MAAM,OAAO,KAAK,KAAK,SAAS;UAChC,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;;;AAOxC,mBAAA,UAAA,eAAR,SAAqB,GAAQ,QAAe;AAC1C,YAAI;AAEJ,YACE,MAAM,UACN,CAAC,EAAE,IAAI,MACN,EAAC,UAAU,OAAO,YAAY,sBAC/B,CAAC,EAAE,IAAI,OACP,CAAC,EAAE,IAAI,KACP;AACA,cAAI,QAAQ;AACV,gBAAM,iBAAiB,OAAO,YAAY,KAAK;AAC/C,gBAAM,iBAAiB,EAAE,GAAG,eAAe,KAAK,QAAQ,EAAE,GAAG,eAAe,KAAK;AAEjF,gBAAI,CAAC,gBAAgB;AACnB,oBAAM,IAAI,MACR,+BAAA,OAA+B,GAAC,kBAAA,OAAiB,OAAO,aAAW;;iBAGlE;AAEL,gBAAI,SAAM;AACV,gBAAI,EAAE,KAAK,IAAI,UAAU;AACvB,uBAAS;mBACJ;AACL,uBAAS;;AAGX,wBAAY,EAAE,KAAK,QAAQ,KAAK;;;AAGpC,eAAO,KAAK,WAAW,QAAQ;;AAMzB,mBAAA,UAAA,8BAAR,WAAA;AACE,eAAO,KAAK,OAAO,YAAY;;AAMzB,mBAAA,UAAA,4BAAR,WAAA;AACE,YAAI,CAAC,KAAK,YAAY;AACpB,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAElB,YAAM,uBAAuB,KAAK,OAAO,YAAY;AAIrD,YAAM,IAAI,KAAK;AAEf,YAAM,iBAAiB,KAAK,OAAO,YAAY,KAAK;AAEpD,YAAM,kCACJ,EAAE,GAAG,eAAe,KAAK,QAAQ,EAAE,GAAG,eAAe,KAAK;AAE5D,eAAO,mCAAmC;;AAMrC,mBAAA,UAAA,WAAP,WAAA;AACE,YAAI,WAAW,KAAK;AACpB,oBAAY,aAAA,OAAa,KAAK;AAC9B,eAAO;;AASC,mBAAA,UAAA,YAAV,SAAoB,KAAW;AAC7B,eAAO,GAAA,OAAG,KAAG,MAAA,OAAK,KAAK,YAAU;;AAErC,aAAA;MApbyC,kBAAA;;;;;;;;;;;;ACpBzC,QAAA,oBAAA;AACA,QAAA,UAAA;AAEA,QAAA,cAAA,WAAA;AAAA,8BAAA;;AACgB,mBAAA,oBAAd,SAAgC,YAAyC;AACvE,YAAI;AACJ,YAAI;AACJ,YAAI,cAAc,IAAA,QAAA,cAAa,aAAa;AAC1C,2BAAiB;AACjB,cAAM,gBAAkC;AAExC,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,gBAAM,OAAuB,WAAW;AACxC,gBAAM,gBAAgB,IAAA,kBAAA,UAAS,KAAK;AACpC,gBAAM,eAAyB;AAC/B,qBAAS,QAAQ,GAAG,QAAQ,KAAK,YAAY,QAAQ,SAAS;AAC5D,2BAAa,KAAK,IAAA,kBAAA,UAAS,KAAK,YAAY;;AAE9C,0BAAc,KAAK,CAAC,eAAe;;AAErC,6BAAmB;eACd;AACL,6BAAmB,eAAU,QAAV,eAAU,SAAV,aAAc;AAEjC,cAAM,OAAmB;AACzB,mBAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,gBAAM,OAAO,iBAAiB;AAC9B,gBAAM,UAAU,IAAA,kBAAA,aAAY,KAAK;AACjC,gBAAM,cAAwB;AAC9B,qBAAS,OAAO,GAAG,OAAO,KAAK,GAAG,QAAQ,QAAQ;AAChD,0BAAY,KAAK,IAAA,kBAAA,aAAY,KAAK,GAAG;;AAEvC,gBAAM,WAA2B;cAC/B;cACA;;AAEF,iBAAK,KAAK;;AAEZ,2BAAiB;;AAGnB,eAAO;UACL;UACA,YAAY;;;AAIF,mBAAA,mBAAd,SAA+B,YAA4B;AACzD,iBAAS,MAAM,GAAG,MAAM,WAAW,QAAQ,OAAO;AAChD,cAAM,iBAAiB,WAAW;AAClC,cAAM,UAAkB,eAAe;AACvC,cAAM,eAAyB,eAAe;AAC9C,cAAU,eAAgB,OAAO,QAAW;AAC1C,kBAAM,IAAI,MACR;;AAGJ,cAAI,QAAQ,UAAU,IAAI;AACxB,kBAAM,IAAI,MAAM;;AAElB,mBAAS,cAAc,GAAG,cAAc,aAAa,QAAQ,eAAe;AAC1E,gBAAI,aAAa,aAAa,UAAU,IAAI;AAC1C,oBAAM,IAAI,MAAM;;;;;AAMV,mBAAA,oBAAd,SAAgC,YAA4B;AAC1D,YAAM,iBAAiB;AACvB,iBAAS,QAAQ,GAAG,QAAQ,WAAW,QAAQ,SAAS;AACtD,cAAM,OAAY,WAAW;AAC7B,cAAM,WAAgB;YACpB,SAAS,OAAO,IAAA,kBAAA,eAAsB,KAAK,IAAI,IAAI,SAAS;YAC5D,aAAa;;AAEf,cAAM,eAAyB,KAAK;AACpC,mBAAS,OAAO,GAAG,OAAO,aAAa,QAAQ,QAAQ;AACrD,gBAAM,cAAc,aAAa;AACjC,qBAAS,YAAY,KAAK,OAAO,IAAA,kBAAA,eAAc,aAAa,IAAI,SAAS;;AAE3E,yBAAe,KAAK;;AAEtB,eAAO;;AAGK,mBAAA,oBAAd,SAAgC,YAA8B,QAAc;AAC1E,YAAM,2BAA2B,OAAO,MAAM,aAAa;AAC3D,YAAM,wBAAwB,OAAO,MAAM,aAAa;AAExD,YAAI,QAAQ;AACZ,iBAAS,QAAQ,GAAG,QAAQ,WAAW,QAAQ,SAAS;AACtD,cAAM,OAAO,WAAW;AACxB,cAAM,eAAe,KAAK;AAC1B,mBAAS,aAAa;;AAGxB,YAAM,YAAY,WAAW;AAC7B,eAAO,YAAY,wBAAwB,QAAQ;;AAEvD,aAAA;;AAjGa,YAAA,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,QAAA,oBAAA;AAYA,QAAA,oBAAA;AACA,QAAA,UAAA;AAUA,QAAA,SAAA;AAEA,QAAM,mBAAmB;AACzB,QAAM,0BAA0B,OAAO,KAAK,iBAAiB,SAAS,IAAI,SAAS,GAAG,MAAM;AAQ5F,QAAA,+BAAA,SAAA,QAAA;AAA0D,gBAAA,+BAAA;AA0IxD,6CAAmB,QAAiC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;;AAApD,YAAA,QACE,OAAA,KAAA,MAAA,SAAA,SAAA,IAAW,SAAM,EAAE,MAAM,wBAAmB;AA7HpC,cAAA,mBAAmB;AA8HnB,YAAA,UAAkC,OAAM,SAA/B,aAAyB,OAAM,YAAnB,WAAa,OAAM;AAEhD,cAAK,SAAS,MAAK,WAAW,KAAK,QAAQ;AAC3C,cAAK,UAAU,MAAK,OAAO;AAG3B,YAAI,CAAC,MAAK,OAAO,eAAe,OAAO;AACrC,gBAAM,IAAI,MAAM;;AAElB,cAAK,qBAAqB,MAAK,mBAAmB,OAAO,CAAC,MAAM;AAGhE,YAAM,iBAAiB,OAAA,YAAY,kBAAkB,eAAU,QAAV,eAAU,SAAV,aAAc;AACnE,cAAK,aAAa,eAAe;AACjC,cAAK,iBAAiB,eAAe;AAErC,eAAA,YAAY,iBAAiB,MAAK;AAElC,cAAK,WAAW,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,aAAa,KAAK,OAAO;AAEzD,cAAK,gCAAgC;UACnC,UAAU,MAAK;;AAGjB,YAAI,MAAK,SAAS,IAAI,MAAK,UAAU,GAAG,kBAAA,cAAc;AACpD,cAAM,MAAM,MAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAElB,YAAI,MAAK,KAAK,CAAC,MAAK,EAAE,IAAI,MAAM,CAAC,MAAK,EAAE,IAAI,IAAI;AAC9C,cAAM,MAAM,MAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAGlB,YAAI,MAAK,OAAO,YAAY,gBAAgB,OAAA,MAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,WAAU;AAC/D,cAAM,MAAM,MAAK,UACf;AAEF,gBAAM,IAAI,MAAM;;AAGlB,YAAM,SAAS,MAAA,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,YAAM,QAAA,OAAA,SAAA,KAAI;AAC/B,YAAI,QAAQ;AACV,iBAAO,OAAO;;;;AAjKlB,aAAA,eAAI,8BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;;;;;AAQd,aAAA,eAAI,8BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;;;;;AAQd,aAAA,eAAI,8BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;;;;;AAaA,oCAAA,aAAd,SAAyB,QAAiC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACxD,eAAO,IAAI,8BAA6B,QAAQ;;AASpC,oCAAA,mBAAd,SAA+B,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACjD,YAAI,CAAC,WAAW,MAAM,GAAG,GAAG,OAAO,0BAA0B;AAC3D,gBAAM,IAAI,MACR,sFAAA,OAAsF,kBAAgB,gBAAA,OAAe,WAClH,MAAM,GAAG,GACT,SAAS;;AAIhB,YAAM,SAAS,kBAAA,IAAI,OAAO,WAAW,MAAM;AAE3C,YAAI,CAAC,MAAM,QAAQ,SAAS;AAC1B,gBAAM,IAAI,MAAM;;AAGlB,eAAO,8BAA6B,gBAAgB,QAAe;;AAYvD,oCAAA,sBAAd,SAAkC,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACpD,eAAO,8BAA6B,iBAAiB,YAAY;;AASrD,oCAAA,kBAAd,SAA8B,QAAsC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AAClE,YAAI,OAAO,WAAW,KAAK,OAAO,WAAW,IAAI;AAC/C,gBAAM,IAAI,MACR;;AAIE,YAAA,KAAA,OAA6E,QAAM,KAAlF,UAAO,GAAA,IAAE,QAAK,GAAA,IAAE,WAAQ,GAAA,IAAE,WAAQ,GAAA,IAAE,KAAE,GAAA,IAAE,QAAK,GAAA,IAAE,OAAI,GAAA,IAAE,aAAU,GAAA,IAAE,IAAC,GAAA,IAAE,IAAC,GAAA,IAAE,IAAC,GAAA;AAE/E,QAAA,IAAA,kBAAA,yBAAwB,EAAE,OAAO,UAAU,UAAU,OAAO,GAAG,GAAG;AAElE,YAAM,kBAA8B;AAEpC,eAAO,IAAI,8BACT;UACE,SAAS,IAAI,kBAAA,GAAG;UAChB;UACA;UACA;UACA;UACA;UACA;UACA,YAAY,eAAU,QAAV,eAAU,SAAV,aAAc;UAC1B,GAAG,MAAM,SAAY,IAAI,kBAAA,GAAG,KAAK;UACjC;UACA;WAEF;;AA8DJ,oCAAA,UAAA,aAAA,WAAA;AACE,YAAI,KAAK,MAAM,WAAW,KAAK,MAAM,QAAQ,aAAa,KAAK,OAAO,YAAY;AAChF,iBAAO,KAAK,MAAM,QAAQ;;AAG5B,YAAM,OAAO,OAAA,UAAM,WAAU,KAAA;AAC7B,aAAK,MAAM,OAAA,YAAY,kBAAkB,KAAK,YAAY,KAAK;AAE/D,YAAI,OAAO,SAAS,OAAO;AACzB,eAAK,MAAM,UAAU;YACnB,OAAO;YACP,UAAU,KAAK,OAAO;;;AAI1B,eAAO;;AAMT,oCAAA,UAAA,iBAAA,WAAA;AACE,eAAO,KAAK,SAAS,IAAI,KAAK,UAAU,IAAI,KAAK;;AAgBnD,oCAAA,UAAA,MAAA,WAAA;AACE,eAAO;UACL,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,KAAK,OAAO,SAAY,KAAK,GAAG,MAAM,OAAO,KAAK;UAClD,IAAA,kBAAA,oBAAmB,KAAK;UACxB,KAAK;UACL,KAAK;UACL,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;UAChE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;UAChE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;;;AAcpE,oCAAA,UAAA,YAAA,WAAA;AACE,YAAM,OAAO,KAAK;AAClB,eAAO,OAAO,OAAO,CAAC,yBAAyB,kBAAA,IAAI,OAAO;;AAgB5D,oCAAA,UAAA,mBAAA,SAAiB,aAAkB;AAAlB,YAAA,gBAAA,QAAA;AAAA,wBAAA;;AACf,YAAM,OAAO,KAAK,MAAM,MAAM,GAAG;AACjC,YAAM,UAAU,OAAO,OAAO,CAAC,yBAAyB,kBAAA,IAAI,OAAO;AACnE,YAAI,aAAa;AACf,iBAAO,IAAA,kBAAA,WAAU;eACZ;AACL,iBAAO;;;AAUJ,oCAAA,UAAA,OAAP,WAAA;AACE,YAAI,CAAC,KAAK,YAAY;AACpB,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAGlB,YAAI,OAAO,SAAS,OAAO;AACzB,cAAI,CAAC,KAAK,MAAM,MAAM;AACpB,iBAAK,MAAM,OAAO,IAAA,kBAAA,WAAU,KAAK;;AAEnC,iBAAO,KAAK,MAAM;;AAGpB,eAAO,IAAA,kBAAA,WAAU,KAAK;;AAMjB,oCAAA,UAAA,8BAAP,WAAA;AACE,eAAO,KAAK;;AAMP,oCAAA,UAAA,qBAAP,WAAA;;AACE,YAAI,CAAC,KAAK,YAAY;AACpB,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAGlB,YAAM,UAAU,KAAK;AAIrB,YAAI,KAAK,OAAO,YAAY,gBAAgB,OAAA,KAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,WAAU;AAC/D,cAAM,MAAM,KAAK,UACf;AAEF,gBAAM,IAAI,MAAM;;AAGZ,YAAA,KAAoB,MAAlB,UAAO,GAAA,SAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACrB,YAAI;AACF,iBAAO,IAAA,kBAAA,WACL,SACA,QAAS,KAAK,KACd,IAAA,kBAAA,oBAAmB,IACnB,IAAA,kBAAA,oBAAmB;iBAEd,GAAP;AACA,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;;AAIpB,oCAAA,UAAA,oBAAA,SAAkB,GAAW,GAAW,GAAS;AAC/C,YAAM,OAAO;UACX,QAAQ,KAAK;;AAGf,eAAO,8BAA6B,WAClC;UACE,SAAS,KAAK;UACd,OAAO,KAAK;UACZ,UAAU,KAAK;UACf,UAAU,KAAK;UACf,IAAI,KAAK;UACT,OAAO,KAAK;UACZ,MAAM,KAAK;UACX,YAAY,KAAK;UACjB,GAAG,IAAI,kBAAA,GAAG,IAAI;UACd,GAAG,IAAI,kBAAA,GAAG;UACV,GAAG,IAAI,kBAAA,GAAG;WAEZ;;AAOJ,oCAAA,UAAA,SAAA,WAAA;AACE,YAAM,iBAAiB,OAAA,YAAY,kBAAkB,KAAK;AAE1D,eAAO;UACL,SAAS,IAAA,kBAAA,SAAQ,KAAK;UACtB,OAAO,IAAA,kBAAA,SAAQ,KAAK;UACpB,UAAU,IAAA,kBAAA,SAAQ,KAAK;UACvB,UAAU,IAAA,kBAAA,SAAQ,KAAK;UACvB,IAAI,KAAK,OAAO,SAAY,KAAK,GAAG,aAAa;UACjD,OAAO,IAAA,kBAAA,SAAQ,KAAK;UACpB,MAAM,OAAO,KAAK,KAAK,SAAS;UAChC,YAAY;UACZ,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;;;AAOzC,oCAAA,UAAA,WAAP,WAAA;;AACE,YAAI,WAAW,KAAK;AAEpB,oBAAY,aAAA,OAAa,KAAK,UAAQ,qBAAA,OAAoB,MAAA,MAAA,KAAK,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAE,YAAM,QAAA,OAAA,SAAA,KAAI;AACrF,eAAO;;AASC,oCAAA,UAAA,YAAV,SAAoB,KAAW;AAC7B,eAAO,GAAA,OAAG,KAAG,MAAA,OAAK,KAAK,YAAU;;AAErC,aAAA;MAvZ0D,kBAAA;;;;;;;;;;;AClC1D,QAAA,oBAAA;AAQA,QAAA,KAAA;AAGA,QAAA,sBAAA,WAAA;AAEE,qCAAA;;AAQc,0BAAA,aAAd,SACE,QACA,WAAyB;AAAzB,YAAA,cAAA,QAAA;AAAA,sBAAA;;AAEA,YAAI,CAAE,WAAU,WAAW,OAAO,SAAS,QAAW;AAEpD,iBAAO,GAAA,YAAY,WAAmB,QAAQ;eACzC;AACL,cAAM,SAAS,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,OAAO,OAAO;AAC7C,cAAI,WAAW,GAAG;AAChB,mBAAO,GAAA,YAAY,WAAmB,QAAQ;qBACrC,WAAW,GAAG;AACvB,mBAAO,GAAA,6BAA6B,WAAoC,QAAQ;qBACvE,WAAW,GAAG;AACvB,mBAAO,GAAA,4BAA4B,WAAmC,QAAQ;iBACzE;AACL,kBAAM,IAAI,MAAM,8BAAA,OAA8B,QAAM;;;;AAW5C,0BAAA,qBAAd,SAAiC,MAAc,WAAyB;AAAzB,YAAA,cAAA,QAAA;AAAA,sBAAA;;AAC7C,YAAI,KAAK,MAAM,KAAM;AAEnB,cAAI,MAAG;AACP,kBAAQ,KAAK;iBACN;AACH,oBAAM;AACN;iBACG;AACH,oBAAM;AACN;;AAEA,oBAAM,IAAI,MAAM,4BAAA,OAA4B,KAAK,IAAE;;AAEvD,cAAI,QAAQ,MAAM;AAChB,mBAAO,GAAA,4BAA4B,iBAAiB,MAAM;iBACrD;AAEL,mBAAO,GAAA,6BAA6B,iBAAiB,MAAM;;eAExD;AACL,iBAAO,GAAA,YAAY,iBAAiB,MAAM;;;AAahC,0BAAA,oBAAd,SAAgC,MAAyB,WAAyB;AAAzB,YAAA,cAAA,QAAA;AAAA,sBAAA;;AACvD,YAAI,OAAO,SAAS,OAAO;AACzB,iBAAO,KAAK,mBAAmB,MAAM;mBAC5B,MAAM,QAAQ,OAAO;AAE9B,iBAAO,GAAA,YAAY,gBAAgB,MAAM;eACpC;AACL,gBAAM,IAAI,MAAM;;;AAWN,0BAAA,sBAAd,SAAkC,eAA2B,SAAgB;AAA3C,YAAA,kBAAA,QAAA;AAAA,0BAAA;;AAChC,YAAM,YAAY,iBAAiB,KAAM,iBAAiB,OAAQ,iBAAiB;AAEnF,YAAI,WAAW;AACb,iBAAO,GAAA;;AAGT,gBAAQ;eACD;AACH,mBAAO,GAAA;eACJ;AACH,mBAAO,GAAA;;AAEP,kBAAM,IAAI,MAAM,4BAAA,OAA4B,eAAa;;;AAGjE,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpHA,QAAA,oBAAA;AAYA,QAAA,oBAAA;AACA,QAAA,UAAA;AASA,QAAA,SAAA;AAEA,QAAM,mBAAmB;AACzB,QAAM,0BAA0B,OAAO,KAAK,iBAAiB,SAAS,IAAI,SAAS,GAAG,MAAM;AAQ5F,QAAA,8BAAA,SAAA,QAAA;AAAyD,gBAAA,8BAAA;AAuJvD,4CAAmB,QAAgC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;;AAAnD,YAAA,QACE,OAAA,KAAA,MAAA,SAAA,SAAA,IAAW,SAAM,EAAE,MAAM,wBAAmB;AAzIpC,cAAA,mBAAmB;AA0InB,YAAA,UAA4D,OAAM,SAAzD,aAAmD,OAAM,YAA7C,eAAuC,OAAM,cAA/B,uBAAyB,OAAM;AAE1E,cAAK,SAAS,MAAK,WAAW,KAAK,QAAQ;AAC3C,cAAK,UAAU,MAAK,OAAO;AAE3B,YAAI,CAAC,MAAK,OAAO,eAAe,OAAO;AACrC,gBAAM,IAAI,MAAM;;AAElB,cAAK,qBAAqB,MAAK,mBAAmB,OAAO,CAAC,MAAM,MAAM;AAGtE,YAAM,iBAAiB,OAAA,YAAY,kBAAkB,eAAU,QAAV,eAAU,SAAV,aAAc;AACnE,cAAK,aAAa,eAAe;AACjC,cAAK,iBAAiB,eAAe;AAErC,eAAA,YAAY,iBAAiB,MAAK;AAElC,cAAK,eAAe,IAAI,kBAAA,GAAG,IAAA,kBAAA,UAAS,iBAAiB,KAAK,OAAO;AACjE,cAAK,uBAAuB,IAAI,kBAAA,GAC9B,IAAA,kBAAA,UAAS,yBAAyB,KAAK,OAAO;AAGhD,cAAK,gCAAgC;UACnC,cAAc,MAAK;UACnB,sBAAsB,MAAK;;AAG7B,YAAI,MAAK,SAAS,IAAI,MAAK,cAAc,GAAG,kBAAA,cAAc;AACxD,cAAM,MAAM,MAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAGlB,YAAI,MAAK,aAAa,GAAG,MAAK,uBAAuB;AACnD,cAAM,MAAM,MAAK,UACf;AAEF,gBAAM,IAAI,MAAM;;AAGlB,YAAI,MAAK,KAAK,CAAC,MAAK,EAAE,IAAI,MAAM,CAAC,MAAK,EAAE,IAAI,IAAI;AAC9C,cAAM,MAAM,MAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAGlB,YAAI,MAAK,OAAO,YAAY,gBAAgB,OAAA,MAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,WAAU;AAC/D,cAAM,MAAM,MAAK,UACf;AAEF,gBAAM,IAAI,MAAM;;AAGlB,YAAM,SAAS,MAAA,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,YAAM,QAAA,OAAA,SAAA,KAAI;AAC/B,YAAI,QAAQ;AACV,iBAAO,OAAO;;;;AAxLlB,aAAA,eAAI,6BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;;;;;AAQd,aAAA,eAAI,6BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;;;;;AAQd,aAAA,eAAI,6BAAA,WAAA,WAAO;aAAX,WAAA;AACE,iBAAO,KAAK;;;;;AAaA,mCAAA,aAAd,SAAyB,QAAgC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACvD,eAAO,IAAI,6BAA4B,QAAQ;;AASnC,mCAAA,mBAAd,SAA+B,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACjD,YAAI,CAAC,WAAW,MAAM,GAAG,GAAG,OAAO,0BAA0B;AAC3D,gBAAM,IAAI,MACR,sFAAA,OAAsF,kBAAgB,gBAAA,OAAe,WAClH,MAAM,GAAG,GACT,SAAS;;AAIhB,YAAM,SAAS,kBAAA,IAAI,OAAO,WAAW,MAAM;AAE3C,YAAI,CAAC,MAAM,QAAQ,SAAS;AAC1B,gBAAM,IAAI,MAAM;;AAGlB,eAAO,6BAA4B,gBAAgB,QAAe;;AAYtD,mCAAA,sBAAd,SAAkC,YAAoB,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACpD,eAAO,6BAA4B,iBAAiB,YAAY;;AASpD,mCAAA,kBAAd,SAA8B,QAAqC,MAAoB;AAApB,YAAA,SAAA,QAAA;AAAA,iBAAA;;AACjE,YAAI,OAAO,WAAW,KAAK,OAAO,WAAW,IAAI;AAC/C,gBAAM,IAAI,MACR;;AAIE,YAAA,KAAA,OAaF,QAAM,KAZR,UAAO,GAAA,IACP,QAAK,GAAA,IACL,uBAAoB,GAAA,IACpB,eAAY,GAAA,IACZ,WAAQ,GAAA,IACR,KAAE,GAAA,IACF,QAAK,GAAA,IACL,OAAI,GAAA,IACJ,aAAU,GAAA,IACV,IAAC,GAAA,IACD,IAAC,GAAA,KACD,IAAC,GAAA;AAGH,QAAA,IAAA,kBAAA,yBAAwB,EAAE,OAAO,sBAAsB,cAAc,UAAU,OAAO,GAAG,GAAG;AAE5F,eAAO,IAAI,6BACT;UACE,SAAS,IAAI,kBAAA,GAAG;UAChB;UACA;UACA;UACA;UACA;UACA;UACA;UACA,YAAY,eAAU,QAAV,eAAU,SAAV,aAAc;UAC1B,GAAG,MAAM,SAAY,IAAI,kBAAA,GAAG,KAAK;UACjC;UACA;WAEF;;AAyEJ,mCAAA,UAAA,aAAA,WAAA;AACE,YAAI,KAAK,MAAM,WAAW,KAAK,MAAM,QAAQ,aAAa,KAAK,OAAO,YAAY;AAChF,iBAAO,KAAK,MAAM,QAAQ;;AAG5B,YAAM,OAAO,OAAA,UAAM,WAAU,KAAA;AAC7B,aAAK,MAAM,OAAA,YAAY,kBAAkB,KAAK,YAAY,KAAK;AAE/D,YAAI,OAAO,SAAS,OAAO;AACzB,eAAK,MAAM,UAAU;YACnB,OAAO;YACP,UAAU,KAAK,OAAO;;;AAI1B,eAAO;;AAOT,mCAAA,UAAA,iBAAA,SAAe,SAAuB;AAAvB,YAAA,YAAA,QAAA;AAAA,oBAAA,IAAkB,kBAAA,GAAG;;AAClC,YAAM,qBAAqB,kBAAA,GAAG,IAAI,KAAK,sBAAsB,KAAK,aAAa,IAAI;AACnF,YAAM,WAAW,mBAAmB,IAAI;AACxC,eAAO,KAAK,SAAS,IAAI,UAAU,IAAI,KAAK;;AAgB9C,mCAAA,UAAA,MAAA,WAAA;AACE,eAAO;UACL,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,IAAA,kBAAA,oBAAmB,KAAK;UACxB,KAAK,OAAO,SAAY,KAAK,GAAG,MAAM,OAAO,KAAK;UAClD,IAAA,kBAAA,oBAAmB,KAAK;UACxB,KAAK;UACL,KAAK;UACL,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;UAChE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;UAChE,KAAK,MAAM,SAAY,IAAA,kBAAA,oBAAmB,KAAK,KAAK,OAAO,KAAK;;;AAcpE,mCAAA,UAAA,YAAA,WAAA;AACE,YAAM,OAAO,KAAK;AAClB,eAAO,OAAO,OAAO,CAAC,yBAAyB,kBAAA,IAAI,OAAO;;AAgB5D,mCAAA,UAAA,mBAAA,SAAiB,aAAkB;AAAlB,YAAA,gBAAA,QAAA;AAAA,wBAAA;;AACf,YAAM,OAAO,KAAK,MAAM,MAAM,GAAG;AACjC,YAAM,UAAU,OAAO,OAAO,CAAC,yBAAyB,kBAAA,IAAI,OAAO;AACnE,YAAI,aAAa;AACf,iBAAO,IAAA,kBAAA,WAAU;eACZ;AACL,iBAAO;;;AAUJ,mCAAA,UAAA,OAAP,WAAA;AACE,YAAI,CAAC,KAAK,YAAY;AACpB,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAGlB,YAAI,OAAO,SAAS,OAAO;AACzB,cAAI,CAAC,KAAK,MAAM,MAAM;AACpB,iBAAK,MAAM,OAAO,IAAA,kBAAA,WAAU,KAAK;;AAEnC,iBAAO,KAAK,MAAM;;AAGpB,eAAO,IAAA,kBAAA,WAAU,KAAK;;AAMjB,mCAAA,UAAA,8BAAP,WAAA;AACE,eAAO,KAAK;;AAMP,mCAAA,UAAA,qBAAP,WAAA;;AACE,YAAI,CAAC,KAAK,YAAY;AACpB,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;AAGlB,YAAM,UAAU,KAAK;AAIrB,YAAI,KAAK,OAAO,YAAY,gBAAgB,OAAA,KAAK,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,QAAA,WAAU;AAC/D,cAAM,MAAM,KAAK,UACf;AAEF,gBAAM,IAAI,MAAM;;AAGZ,YAAA,KAAc,MAAZ,IAAC,GAAA,GAAE,IAAC,GAAA,GAAE,IAAC,GAAA;AACf,YAAI;AACF,iBAAO,IAAA,kBAAA,WACL,SACA,EAAG,KAAK,KACR,IAAA,kBAAA,oBAAmB,IACnB,IAAA,kBAAA,oBAAmB;iBAEd,GAAP;AACA,cAAM,MAAM,KAAK,UAAU;AAC3B,gBAAM,IAAI,MAAM;;;AAIpB,mCAAA,UAAA,oBAAA,SAAkB,GAAW,GAAW,GAAS;AAC/C,YAAM,OAAO;UACX,QAAQ,KAAK;;AAGf,eAAO,6BAA4B,WACjC;UACE,SAAS,KAAK;UACd,OAAO,KAAK;UACZ,sBAAsB,KAAK;UAC3B,cAAc,KAAK;UACnB,UAAU,KAAK;UACf,IAAI,KAAK;UACT,OAAO,KAAK;UACZ,MAAM,KAAK;UACX,YAAY,KAAK;UACjB,GAAG,IAAI,kBAAA,GAAG,IAAI;UACd,GAAG,IAAI,kBAAA,GAAG;UACV,GAAG,IAAI,kBAAA,GAAG;WAEZ;;AAOJ,mCAAA,UAAA,SAAA,WAAA;AACE,YAAM,iBAAiB,OAAA,YAAY,kBAAkB,KAAK;AAE1D,eAAO;UACL,SAAS,IAAA,kBAAA,SAAQ,KAAK;UACtB,OAAO,IAAA,kBAAA,SAAQ,KAAK;UACpB,sBAAsB,IAAA,kBAAA,SAAQ,KAAK;UACnC,cAAc,IAAA,kBAAA,SAAQ,KAAK;UAC3B,UAAU,IAAA,kBAAA,SAAQ,KAAK;UACvB,IAAI,KAAK,OAAO,SAAY,KAAK,GAAG,aAAa;UACjD,OAAO,IAAA,kBAAA,SAAQ,KAAK;UACpB,MAAM,OAAO,KAAK,KAAK,SAAS;UAChC,YAAY;UACZ,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;UAC5C,GAAG,KAAK,MAAM,SAAY,IAAA,kBAAA,SAAQ,KAAK,KAAK;;;AAOzC,mCAAA,UAAA,WAAP,WAAA;AACE,YAAI,WAAW,KAAK;AACpB,oBAAY,iBAAA,OAAiB,KAAK,cAAY,0BAAA,OAAyB,KAAK;AAC5E,eAAO;;AASC,mCAAA,UAAA,YAAV,SAAoB,KAAW;AAC7B,eAAO,GAAA,OAAG,KAAG,MAAA,OAAK,KAAK,YAAU;;AAErC,aAAA;MApbyD,kBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCzD,QAAA,sBAAA;AAAS,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,qBAAA;;AACT,QAAA,uBAAA;AAAS,WAAA,eAAA,SAAA,gCAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,sBAAA;;AACT,QAAA,uBAAA;AAAS,WAAA,eAAA,SAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,sBAAA;;AACT,QAAA,uBAAA;AAAS,WAAA,eAAA,SAAA,+BAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA,sBAAA;;AACT,iBAAA,iBAAA;;;;;ACJA;AAAA;AAAA;AAAA,IAAC,UAAU,SAAQ,UAAS;AAC1B;AAGA,sBAAiB,KAAK,KAAK;AACzB,YAAI,CAAC;AAAK,gBAAM,IAAI,MAAM,OAAO;AAAA;AAKnC,wBAAmB,MAAM,WAAW;AAClC,aAAK,SAAS;AACd,YAAI,WAAW,WAAY;AAAA;AAC3B,iBAAS,YAAY,UAAU;AAC/B,aAAK,YAAY,IAAI;AACrB,aAAK,UAAU,cAAc;AAAA;AAK/B,kBAAa,QAAQ,MAAM,QAAQ;AACjC,YAAI,GAAG,KAAK,SAAS;AACnB,iBAAO;AAAA;AAGT,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,aAAK,SAAS;AAGd,aAAK,MAAM;AAEX,YAAI,WAAW,MAAM;AACnB,cAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,qBAAS;AACT,mBAAO;AAAA;AAGT,eAAK,MAAM,UAAU,GAAG,QAAQ,IAAI,UAAU;AAAA;AAAA;AAGlD,UAAI,OAAO,YAAW,UAAU;AAC9B,gBAAO,UAAU;AAAA,aACZ;AACL,iBAAQ,KAAK;AAAA;AAGf,SAAG,KAAK;AACR,SAAG,WAAW;AAEd,UAAI;AACJ,UAAI;AACF,YAAI,OAAO,WAAW,eAAe,OAAO,OAAO,WAAW,aAAa;AACzE,oBAAS,OAAO;AAAA,eACX;AACL,oBAAS,iBAAkB;AAAA;AAAA,eAEtB,GAAP;AAAA;AAGF,SAAG,OAAO,cAAe,KAAK;AAC5B,YAAI,eAAe,IAAI;AACrB,iBAAO;AAAA;AAGT,eAAO,QAAQ,QAAQ,OAAO,QAAQ,YACpC,IAAI,YAAY,aAAa,GAAG,YAAY,MAAM,QAAQ,IAAI;AAAA;AAGlE,SAAG,MAAM,aAAc,MAAM,OAAO;AAClC,YAAI,KAAK,IAAI,SAAS;AAAG,iBAAO;AAChC,eAAO;AAAA;AAGT,SAAG,MAAM,aAAc,MAAM,OAAO;AAClC,YAAI,KAAK,IAAI,SAAS;AAAG,iBAAO;AAChC,eAAO;AAAA;AAGT,SAAG,UAAU,QAAQ,cAAe,QAAQ,MAAM,QAAQ;AACxD,YAAI,OAAO,WAAW,UAAU;AAC9B,iBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA;AAGxC,YAAI,OAAO,WAAW,UAAU;AAC9B,iBAAO,KAAK,WAAW,QAAQ,MAAM;AAAA;AAGvC,YAAI,SAAS,OAAO;AAClB,iBAAO;AAAA;AAET,eAAO,SAAU,QAAO,MAAM,QAAQ,KAAK,QAAQ;AAEnD,iBAAS,OAAO,WAAW,QAAQ,QAAQ;AAC3C,YAAI,QAAQ;AACZ,YAAI,OAAO,OAAO,KAAK;AACrB;AACA,eAAK,WAAW;AAAA;AAGlB,YAAI,QAAQ,OAAO,QAAQ;AACzB,cAAI,SAAS,IAAI;AACf,iBAAK,UAAU,QAAQ,OAAO;AAAA,iBACzB;AACL,iBAAK,WAAW,QAAQ,MAAM;AAC9B,gBAAI,WAAW,MAAM;AACnB,mBAAK,WAAW,KAAK,WAAW,MAAM;AAAA;AAAA;AAAA;AAAA;AAM9C,SAAG,UAAU,cAAc,qBAAsB,QAAQ,MAAM,QAAQ;AACrE,YAAI,SAAS,GAAG;AACd,eAAK,WAAW;AAChB,mBAAS,CAAC;AAAA;AAEZ,YAAI,SAAS,UAAW;AACtB,eAAK,QAAQ,CAAE,SAAS;AACxB,eAAK,SAAS;AAAA,mBACL,SAAS,kBAAkB;AACpC,eAAK,QAAQ;AAAA,YACX,SAAS;AAAA,YACR,SAAS,WAAa;AAAA;AAEzB,eAAK,SAAS;AAAA,eACT;AACL,iBAAO,SAAS;AAChB,eAAK,QAAQ;AAAA,YACX,SAAS;AAAA,YACR,SAAS,WAAa;AAAA,YACvB;AAAA;AAEF,eAAK,SAAS;AAAA;AAGhB,YAAI,WAAW;AAAM;AAGrB,aAAK,WAAW,KAAK,WAAW,MAAM;AAAA;AAGxC,SAAG,UAAU,aAAa,oBAAqB,QAAQ,MAAM,QAAQ;AAEnE,eAAO,OAAO,OAAO,WAAW;AAChC,YAAI,OAAO,UAAU,GAAG;AACtB,eAAK,QAAQ,CAAE;AACf,eAAK,SAAS;AACd,iBAAO;AAAA;AAGT,aAAK,SAAS,KAAK,KAAK,OAAO,SAAS;AACxC,aAAK,QAAQ,IAAI,MAAM,KAAK;AAC5B,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK;AAAA;AAGlB,YAAI,GAAG;AACP,YAAI,MAAM;AACV,YAAI,WAAW,MAAM;AACnB,eAAK,IAAI,OAAO,SAAS,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG;AACjD,gBAAI,OAAO,KAAM,OAAO,IAAI,MAAM,IAAM,OAAO,IAAI,MAAM;AACzD,iBAAK,MAAM,MAAO,KAAK,MAAO;AAC9B,iBAAK,MAAM,IAAI,KAAM,MAAO,KAAK,MAAQ;AACzC,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA;AAAA;AAAA,mBAGK,WAAW,MAAM;AAC1B,eAAK,IAAI,GAAG,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAG;AAC5C,gBAAI,OAAO,KAAM,OAAO,IAAI,MAAM,IAAM,OAAO,IAAI,MAAM;AACzD,iBAAK,MAAM,MAAO,KAAK,MAAO;AAC9B,iBAAK,MAAM,IAAI,KAAM,MAAO,KAAK,MAAQ;AACzC,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA;AAAA;AAAA;AAIN,eAAO,KAAK;AAAA;AAGd,6BAAwB,QAAQ,OAAO;AACrC,YAAI,IAAI,OAAO,WAAW;AAE1B,YAAI,KAAK,MAAM,KAAK,IAAI;AACtB,iBAAO,IAAI;AAAA,mBAEF,KAAK,MAAM,KAAK,KAAK;AAC9B,iBAAO,IAAI;AAAA,eAEN;AACL,iBAAQ,IAAI,KAAM;AAAA;AAAA;AAItB,4BAAuB,QAAQ,YAAY,OAAO;AAChD,YAAI,IAAI,cAAc,QAAQ;AAC9B,YAAI,QAAQ,KAAK,YAAY;AAC3B,eAAK,cAAc,QAAQ,QAAQ,MAAM;AAAA;AAE3C,eAAO;AAAA;AAGT,SAAG,UAAU,YAAY,mBAAoB,QAAQ,OAAO,QAAQ;AAElE,aAAK,SAAS,KAAK,KAAM,QAAO,SAAS,SAAS;AAClD,aAAK,QAAQ,IAAI,MAAM,KAAK;AAC5B,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK;AAAA;AAIlB,YAAI,MAAM;AACV,YAAI,IAAI;AAER,YAAI;AACJ,YAAI,WAAW,MAAM;AACnB,eAAK,IAAI,OAAO,SAAS,GAAG,KAAK,OAAO,KAAK,GAAG;AAC9C,gBAAI,aAAa,QAAQ,OAAO,MAAM;AACtC,iBAAK,MAAM,MAAM,IAAI;AACrB,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP,mBAAK;AACL,mBAAK,MAAM,MAAM,MAAM;AAAA,mBAClB;AACL,qBAAO;AAAA;AAAA;AAAA,eAGN;AACL,cAAI,cAAc,OAAO,SAAS;AAClC,eAAK,IAAI,cAAc,MAAM,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,QAAQ,KAAK,GAAG;AAC7E,gBAAI,aAAa,QAAQ,OAAO,MAAM;AACtC,iBAAK,MAAM,MAAM,IAAI;AACrB,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP,mBAAK;AACL,mBAAK,MAAM,MAAM,MAAM;AAAA,mBAClB;AACL,qBAAO;AAAA;AAAA;AAAA;AAKb,aAAK;AAAA;AAGP,yBAAoB,KAAK,OAAO,KAAK,KAAK;AACxC,YAAI,IAAI;AACR,YAAI,MAAM,KAAK,IAAI,IAAI,QAAQ;AAC/B,iBAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAChC,cAAI,IAAI,IAAI,WAAW,KAAK;AAE5B,eAAK;AAGL,cAAI,KAAK,IAAI;AACX,iBAAK,IAAI,KAAK;AAAA,qBAGL,KAAK,IAAI;AAClB,iBAAK,IAAI,KAAK;AAAA,iBAGT;AACL,iBAAK;AAAA;AAAA;AAGT,eAAO;AAAA;AAGT,SAAG,UAAU,aAAa,oBAAqB,QAAQ,MAAM,OAAO;AAElE,aAAK,QAAQ,CAAE;AACf,aAAK,SAAS;AAGd,iBAAS,UAAU,GAAG,UAAU,GAAG,WAAW,UAAW,WAAW,MAAM;AACxE;AAAA;AAEF;AACA,kBAAW,UAAU,OAAQ;AAE7B,YAAI,QAAQ,OAAO,SAAS;AAC5B,YAAI,MAAM,QAAQ;AAClB,YAAI,MAAM,KAAK,IAAI,OAAO,QAAQ,OAAO;AAEzC,YAAI,OAAO;AACX,iBAAS,IAAI,OAAO,IAAI,KAAK,KAAK,SAAS;AACzC,iBAAO,UAAU,QAAQ,GAAG,IAAI,SAAS;AAEzC,eAAK,MAAM;AACX,cAAI,KAAK,MAAM,KAAK,OAAO,UAAW;AACpC,iBAAK,MAAM,MAAM;AAAA,iBACZ;AACL,iBAAK,OAAO;AAAA;AAAA;AAIhB,YAAI,QAAQ,GAAG;AACb,cAAI,MAAM;AACV,iBAAO,UAAU,QAAQ,GAAG,OAAO,QAAQ;AAE3C,eAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACxB,mBAAO;AAAA;AAGT,eAAK,MAAM;AACX,cAAI,KAAK,MAAM,KAAK,OAAO,UAAW;AACpC,iBAAK,MAAM,MAAM;AAAA,iBACZ;AACL,iBAAK,OAAO;AAAA;AAAA;AAIhB,aAAK;AAAA;AAGP,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,aAAK,QAAQ,IAAI,MAAM,KAAK;AAC5B,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK,KAAK,MAAM;AAAA;AAE7B,aAAK,SAAS,KAAK;AACnB,aAAK,WAAW,KAAK;AACrB,aAAK,MAAM,KAAK;AAAA;AAGlB,SAAG,UAAU,QAAQ,iBAAkB;AACrC,YAAI,IAAI,IAAI,GAAG;AACf,aAAK,KAAK;AACV,eAAO;AAAA;AAGT,SAAG,UAAU,UAAU,iBAAkB,MAAM;AAC7C,eAAO,KAAK,SAAS,MAAM;AACzB,eAAK,MAAM,KAAK,YAAY;AAAA;AAE9B,eAAO;AAAA;AAIT,SAAG,UAAU,QAAQ,iBAAkB;AACrC,eAAO,KAAK,SAAS,KAAK,KAAK,MAAM,KAAK,SAAS,OAAO,GAAG;AAC3D,eAAK;AAAA;AAEP,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,YAAY,qBAAsB;AAE7C,YAAI,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO,GAAG;AAC5C,eAAK,WAAW;AAAA;AAElB,eAAO;AAAA;AAGT,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAQ,MAAK,MAAM,YAAY,WAAW,KAAK,SAAS,MAAM;AAAA;AAiChE,UAAI,QAAQ;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAGF,UAAI,aAAa;AAAA,QACf;AAAA,QAAG;AAAA,QACH;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QACvB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA;AAGpB,UAAI,aAAa;AAAA,QACf;AAAA,QAAG;AAAA,QACH;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAC5D;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAS;AAAA,QAC3D;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAS;AAAA,QAC3D;AAAA,QAAS;AAAA,QAAS;AAAA,QAAS;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QACzD;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA;AAG9D,SAAG,UAAU,WAAW,kBAAmB,MAAM,SAAS;AACxD,eAAO,QAAQ;AACf,kBAAU,UAAU,KAAK;AAEzB,YAAI;AACJ,YAAI,SAAS,MAAM,SAAS,OAAO;AACjC,gBAAM;AACN,cAAI,MAAM;AACV,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAI,IAAI,KAAK,MAAM;AACnB,gBAAI,OAAU,OAAK,MAAO,SAAS,UAAU,SAAS;AACtD,oBAAS,MAAO,KAAK,MAAQ;AAC7B,gBAAI,UAAU,KAAK,MAAM,KAAK,SAAS,GAAG;AACxC,oBAAM,MAAM,IAAI,KAAK,UAAU,OAAO;AAAA,mBACjC;AACL,oBAAM,OAAO;AAAA;AAEf,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA;AAAA;AAGJ,cAAI,UAAU,GAAG;AACf,kBAAM,MAAM,SAAS,MAAM;AAAA;AAE7B,iBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,kBAAM,MAAM;AAAA;AAEd,cAAI,KAAK,aAAa,GAAG;AACvB,kBAAM,MAAM;AAAA;AAEd,iBAAO;AAAA;AAGT,YAAI,SAAU,QAAO,MAAM,QAAQ,KAAK,QAAQ,IAAI;AAElD,cAAI,YAAY,WAAW;AAE3B,cAAI,YAAY,WAAW;AAC3B,gBAAM;AACN,cAAI,IAAI,KAAK;AACb,YAAE,WAAW;AACb,iBAAO,CAAC,EAAE,UAAU;AAClB,gBAAI,IAAI,EAAE,KAAK,WAAW,SAAS;AACnC,gBAAI,EAAE,MAAM;AAEZ,gBAAI,CAAC,EAAE,UAAU;AACf,oBAAM,MAAM,YAAY,EAAE,UAAU,IAAI;AAAA,mBACnC;AACL,oBAAM,IAAI;AAAA;AAAA;AAGd,cAAI,KAAK,UAAU;AACjB,kBAAM,MAAM;AAAA;AAEd,iBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,kBAAM,MAAM;AAAA;AAEd,cAAI,KAAK,aAAa,GAAG;AACvB,kBAAM,MAAM;AAAA;AAEd,iBAAO;AAAA;AAGT,eAAO,OAAO;AAAA;AAGhB,SAAG,UAAU,WAAW,oBAAqB;AAC3C,YAAI,MAAM,KAAK,MAAM;AACrB,YAAI,KAAK,WAAW,GAAG;AACrB,iBAAO,KAAK,MAAM,KAAK;AAAA,mBACd,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO,GAAM;AAEtD,iBAAO,mBAAoB,KAAK,MAAM,KAAK;AAAA,mBAClC,KAAK,SAAS,GAAG;AAC1B,iBAAO,OAAO;AAAA;AAEhB,eAAQ,KAAK,aAAa,IAAK,CAAC,MAAM;AAAA;AAGxC,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,SAAS;AAAA;AAGvB,SAAG,UAAU,WAAW,kBAAmB,QAAQ,QAAQ;AACzD,eAAO,OAAO,YAAW;AACzB,eAAO,KAAK,YAAY,SAAQ,QAAQ;AAAA;AAG1C,SAAG,UAAU,UAAU,iBAAkB,QAAQ,QAAQ;AACvD,eAAO,KAAK,YAAY,OAAO,QAAQ;AAAA;AAGzC,SAAG,UAAU,cAAc,qBAAsB,WAAW,QAAQ,QAAQ;AAC1E,YAAI,aAAa,KAAK;AACtB,YAAI,YAAY,UAAU,KAAK,IAAI,GAAG;AACtC,eAAO,cAAc,WAAW;AAChC,eAAO,YAAY,GAAG;AAEtB,aAAK;AACL,YAAI,eAAe,WAAW;AAC9B,YAAI,MAAM,IAAI,UAAU;AAExB,YAAI,GAAG;AACP,YAAI,IAAI,KAAK;AACb,YAAI,CAAC,cAAc;AAEjB,eAAK,IAAI,GAAG,IAAI,YAAY,YAAY,KAAK;AAC3C,gBAAI,KAAK;AAAA;AAGX,eAAK,IAAI,GAAG,CAAC,EAAE,UAAU,KAAK;AAC5B,gBAAI,EAAE,MAAM;AACZ,cAAE,OAAO;AAET,gBAAI,YAAY,IAAI,KAAK;AAAA;AAAA,eAEtB;AACL,eAAK,IAAI,GAAG,CAAC,EAAE,UAAU,KAAK;AAC5B,gBAAI,EAAE,MAAM;AACZ,cAAE,OAAO;AAET,gBAAI,KAAK;AAAA;AAGX,iBAAO,IAAI,WAAW,KAAK;AACzB,gBAAI,KAAK;AAAA;AAAA;AAIb,eAAO;AAAA;AAGT,UAAI,KAAK,OAAO;AACd,WAAG,UAAU,aAAa,oBAAqB,GAAG;AAChD,iBAAO,KAAK,KAAK,MAAM;AAAA;AAAA,aAEpB;AACL,WAAG,UAAU,aAAa,oBAAqB,GAAG;AAChD,cAAI,IAAI;AACR,cAAI,IAAI;AACR,cAAI,KAAK,MAAQ;AACf,iBAAK;AACL,mBAAO;AAAA;AAET,cAAI,KAAK,IAAM;AACb,iBAAK;AACL,mBAAO;AAAA;AAET,cAAI,KAAK,GAAK;AACZ,iBAAK;AACL,mBAAO;AAAA;AAET,cAAI,KAAK,GAAM;AACb,iBAAK;AACL,mBAAO;AAAA;AAET,iBAAO,IAAI;AAAA;AAAA;AAIf,SAAG,UAAU,YAAY,mBAAoB,GAAG;AAE9C,YAAI,MAAM;AAAG,iBAAO;AAEpB,YAAI,IAAI;AACR,YAAI,IAAI;AACR,YAAK,KAAI,UAAY,GAAG;AACtB,eAAK;AACL,iBAAO;AAAA;AAET,YAAK,KAAI,SAAU,GAAG;AACpB,eAAK;AACL,iBAAO;AAAA;AAET,YAAK,KAAI,QAAS,GAAG;AACnB,eAAK;AACL,iBAAO;AAAA;AAET,YAAK,KAAI,OAAS,GAAG;AACnB,eAAK;AACL,iBAAO;AAAA;AAET,YAAK,KAAI,OAAS,GAAG;AACnB;AAAA;AAEF,eAAO;AAAA;AAIT,SAAG,UAAU,YAAY,qBAAsB;AAC7C,YAAI,IAAI,KAAK,MAAM,KAAK,SAAS;AACjC,YAAI,KAAK,KAAK,WAAW;AACzB,eAAQ,MAAK,SAAS,KAAK,KAAK;AAAA;AAGlC,0BAAqB,KAAK;AACxB,YAAI,IAAI,IAAI,MAAM,IAAI;AAEtB,iBAAS,MAAM,GAAG,MAAM,EAAE,QAAQ,OAAO;AACvC,cAAI,MAAO,MAAM,KAAM;AACvB,cAAI,OAAO,MAAM;AAEjB,YAAE,OAAQ,KAAI,MAAM,OAAQ,KAAK,UAAW;AAAA;AAG9C,eAAO;AAAA;AAIT,SAAG,UAAU,WAAW,oBAAqB;AAC3C,YAAI,KAAK;AAAU,iBAAO;AAE1B,YAAI,IAAI;AACR,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,IAAI,KAAK,UAAU,KAAK,MAAM;AAClC,eAAK;AACL,cAAI,MAAM;AAAI;AAAA;AAEhB,eAAO;AAAA;AAGT,SAAG,UAAU,aAAa,sBAAuB;AAC/C,eAAO,KAAK,KAAK,KAAK,cAAc;AAAA;AAGtC,SAAG,UAAU,SAAS,gBAAiB,OAAO;AAC5C,YAAI,KAAK,aAAa,GAAG;AACvB,iBAAO,KAAK,MAAM,MAAM,OAAO,MAAM;AAAA;AAEvC,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,WAAW,kBAAmB,OAAO;AAChD,YAAI,KAAK,MAAM,QAAQ,IAAI;AACzB,iBAAO,KAAK,KAAK,OAAO,MAAM,GAAG;AAAA;AAEnC,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,QAAQ,iBAAkB;AACrC,eAAO,KAAK,aAAa;AAAA;AAI3B,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,QAAQ;AAAA;AAGtB,SAAG,UAAU,OAAO,gBAAiB;AACnC,YAAI,CAAC,KAAK,UAAU;AAClB,eAAK,YAAY;AAAA;AAGnB,eAAO;AAAA;AAIT,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,SAAS,IAAI,QAAQ;AAC/B,eAAK,MAAM,KAAK,YAAY;AAAA;AAG9B,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,eAAK,MAAM,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM;AAAA;AAG5C,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAQ,MAAK,WAAW,IAAI,cAAc;AAC1C,eAAO,KAAK,KAAK;AAAA;AAInB,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,IAAI;AACtD,eAAO,IAAI,QAAQ,IAAI;AAAA;AAGzB,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,KAAK;AACvD,eAAO,IAAI,QAAQ,KAAK;AAAA;AAI1B,SAAG,UAAU,QAAQ,eAAgB,KAAK;AAExC,YAAI;AACJ,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AAAA,eACC;AACL,cAAI;AAAA;AAGN,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,MAAM,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM;AAAA;AAG5C,aAAK,SAAS,EAAE;AAEhB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAQ,MAAK,WAAW,IAAI,cAAc;AAC1C,eAAO,KAAK,MAAM;AAAA;AAIpB,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,KAAK;AACvD,eAAO,IAAI,QAAQ,KAAK;AAAA;AAG1B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,MAAM;AACxD,eAAO,IAAI,QAAQ,MAAM;AAAA;AAI3B,SAAG,UAAU,QAAQ,eAAgB,KAAK;AAExC,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AACJ,cAAI;AAAA,eACC;AACL,cAAI;AACJ,cAAI;AAAA;AAGN,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,MAAM,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM;AAAA;AAGvC,YAAI,SAAS,GAAG;AACd,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA;AAAA;AAI5B,aAAK,SAAS,EAAE;AAEhB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAQ,MAAK,WAAW,IAAI,cAAc;AAC1C,eAAO,KAAK,MAAM;AAAA;AAIpB,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,KAAK;AACvD,eAAO,IAAI,QAAQ,KAAK;AAAA;AAG1B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,MAAM;AACxD,eAAO,IAAI,QAAQ,MAAM;AAAA;AAI3B,SAAG,UAAU,QAAQ,eAAgB,OAAO;AAC1C,eAAO,OAAO,UAAU,YAAY,SAAS;AAE7C,YAAI,cAAc,KAAK,KAAK,QAAQ,MAAM;AAC1C,YAAI,WAAW,QAAQ;AAGvB,aAAK,QAAQ;AAEb,YAAI,WAAW,GAAG;AAChB;AAAA;AAIF,iBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM,KAAK;AAAA;AAInC,YAAI,WAAW,GAAG;AAChB,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM,KAAM,YAAc,KAAK;AAAA;AAIvD,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,OAAO;AACxC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAI5B,SAAG,UAAU,OAAO,cAAe,KAAK,KAAK;AAC3C,eAAO,OAAO,QAAQ,YAAY,OAAO;AAEzC,YAAI,MAAO,MAAM,KAAM;AACvB,YAAI,OAAO,MAAM;AAEjB,aAAK,QAAQ,MAAM;AAEnB,YAAI,KAAK;AACP,eAAK,MAAM,OAAO,KAAK,MAAM,OAAQ,KAAK;AAAA,eACrC;AACL,eAAK,MAAM,OAAO,KAAK,MAAM,OAAO,CAAE,MAAK;AAAA;AAG7C,eAAO,KAAK;AAAA;AAId,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI;AAGJ,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,eAAK,WAAW;AAChB,cAAI,KAAK,KAAK;AACd,eAAK,YAAY;AACjB,iBAAO,KAAK;AAAA,mBAGH,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AACpD,cAAI,WAAW;AACf,cAAI,KAAK,KAAK;AACd,cAAI,WAAW;AACf,iBAAO,EAAE;AAAA;AAIX,YAAI,GAAG;AACP,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AACJ,cAAI;AAAA,eACC;AACL,cAAI;AACJ,cAAI;AAAA;AAGN,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAK,GAAE,MAAM,KAAK,KAAM,GAAE,MAAM,KAAK,KAAK;AAC1C,eAAK,MAAM,KAAK,IAAI;AACpB,kBAAQ,MAAM;AAAA;AAEhB,eAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,cAAK,GAAE,MAAM,KAAK,KAAK;AACvB,eAAK,MAAM,KAAK,IAAI;AACpB,kBAAQ,MAAM;AAAA;AAGhB,aAAK,SAAS,EAAE;AAChB,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK,UAAU;AAC1B,eAAK;AAAA,mBAEI,MAAM,MAAM;AACrB,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA;AAAA;AAI5B,eAAO;AAAA;AAIT,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI;AACJ,YAAI,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AAC7C,cAAI,WAAW;AACf,gBAAM,KAAK,IAAI;AACf,cAAI,YAAY;AAChB,iBAAO;AAAA,mBACE,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AACpD,eAAK,WAAW;AAChB,gBAAM,IAAI,IAAI;AACd,eAAK,WAAW;AAChB,iBAAO;AAAA;AAGT,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,KAAK;AAEvD,eAAO,IAAI,QAAQ,KAAK;AAAA;AAI1B,SAAG,UAAU,OAAO,cAAe,KAAK;AAEtC,YAAI,IAAI,aAAa,GAAG;AACtB,cAAI,WAAW;AACf,cAAI,IAAI,KAAK,KAAK;AAClB,cAAI,WAAW;AACf,iBAAO,EAAE;AAAA,mBAGA,KAAK,aAAa,GAAG;AAC9B,eAAK,WAAW;AAChB,eAAK,KAAK;AACV,eAAK,WAAW;AAChB,iBAAO,KAAK;AAAA;AAId,YAAI,MAAM,KAAK,IAAI;AAGnB,YAAI,QAAQ,GAAG;AACb,eAAK,WAAW;AAChB,eAAK,SAAS;AACd,eAAK,MAAM,KAAK;AAChB,iBAAO;AAAA;AAIT,YAAI,GAAG;AACP,YAAI,MAAM,GAAG;AACX,cAAI;AACJ,cAAI;AAAA,eACC;AACL,cAAI;AACJ,cAAI;AAAA;AAGN,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAK,GAAE,MAAM,KAAK,KAAM,GAAE,MAAM,KAAK,KAAK;AAC1C,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA;AAEtB,eAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,cAAK,GAAE,MAAM,KAAK,KAAK;AACvB,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA;AAItB,YAAI,UAAU,KAAK,IAAI,EAAE,UAAU,MAAM,MAAM;AAC7C,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA;AAAA;AAI5B,aAAK,SAAS,KAAK,IAAI,KAAK,QAAQ;AAEpC,YAAI,MAAM,MAAM;AACd,eAAK,WAAW;AAAA;AAGlB,eAAO,KAAK;AAAA;AAId,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,QAAQ,KAAK;AAAA;AAG3B,0BAAqB,MAAM,KAAK,KAAK;AACnC,YAAI,WAAW,IAAI,WAAW,KAAK;AACnC,YAAI,MAAO,KAAK,SAAS,IAAI,SAAU;AACvC,YAAI,SAAS;AACb,cAAO,MAAM,IAAK;AAGlB,YAAI,IAAI,KAAK,MAAM,KAAK;AACxB,YAAI,IAAI,IAAI,MAAM,KAAK;AACvB,YAAI,IAAI,IAAI;AAEZ,YAAI,KAAK,IAAI;AACb,YAAI,QAAS,IAAI,WAAa;AAC9B,YAAI,MAAM,KAAK;AAEf,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAG5B,cAAI,SAAS,UAAU;AACvB,cAAI,QAAQ,QAAQ;AACpB,cAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS;AACpC,mBAAS,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,SAAS,IAAI,KAAK,MAAM,KAAK;AAC7D,gBAAI,IAAK,IAAI,IAAK;AAClB,gBAAI,KAAK,MAAM,KAAK;AACpB,gBAAI,IAAI,MAAM,KAAK;AACnB,gBAAI,IAAI,IAAI;AACZ,sBAAW,IAAI,WAAa;AAC5B,oBAAQ,IAAI;AAAA;AAEd,cAAI,MAAM,KAAK,QAAQ;AACvB,kBAAQ,SAAS;AAAA;AAEnB,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,KAAK,QAAQ;AAAA,eAClB;AACL,cAAI;AAAA;AAGN,eAAO,IAAI;AAAA;AAMb,UAAI,cAAc,sBAAsB,MAAM,KAAK,KAAK;AACtD,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI;AACR,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AAEjB,YAAI,WAAW,KAAK,WAAW,IAAI;AACnC,YAAI,SAAS;AAEb,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,YAAI,MAAM,GAAG;AACX,YAAE,MAAM;AACR,cAAI;AAAA;AAEN,eAAO;AAAA;AAIT,UAAI,CAAC,KAAK,MAAM;AACd,sBAAc;AAAA;AAGhB,wBAAmB,MAAM,KAAK,KAAK;AACjC,YAAI,WAAW,IAAI,WAAW,KAAK;AACnC,YAAI,SAAS,KAAK,SAAS,IAAI;AAE/B,YAAI,QAAQ;AACZ,YAAI,UAAU;AACd,iBAAS,IAAI,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK;AAGvC,cAAI,SAAS;AACb,oBAAU;AACV,cAAI,QAAQ,QAAQ;AACpB,cAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS;AACpC,mBAAS,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,SAAS,IAAI,KAAK,MAAM,KAAK;AAC7D,gBAAI,IAAI,IAAI;AACZ,gBAAI,IAAI,KAAK,MAAM,KAAK;AACxB,gBAAI,IAAI,IAAI,MAAM,KAAK;AACvB,gBAAI,IAAI,IAAI;AAEZ,gBAAI,KAAK,IAAI;AACb,qBAAU,SAAW,KAAI,WAAa,KAAM;AAC5C,iBAAM,KAAK,QAAS;AACpB,oBAAQ,KAAK;AACb,qBAAU,SAAU,QAAO,MAAO;AAElC,uBAAW,WAAW;AACtB,sBAAU;AAAA;AAEZ,cAAI,MAAM,KAAK;AACf,kBAAQ;AACR,mBAAS;AAAA;AAEX,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,KAAK;AAAA,eACV;AACL,cAAI;AAAA;AAGN,eAAO,IAAI;AAAA;AAGb,0BAAqB,MAAM,KAAK,KAAK;AACnC,YAAI,OAAO,IAAI;AACf,eAAO,KAAK,KAAK,MAAM,KAAK;AAAA;AAG9B,SAAG,UAAU,QAAQ,eAAgB,KAAK,KAAK;AAC7C,YAAI;AACJ,YAAI,MAAM,KAAK,SAAS,IAAI;AAC5B,YAAI,KAAK,WAAW,MAAM,IAAI,WAAW,IAAI;AAC3C,gBAAM,YAAY,MAAM,KAAK;AAAA,mBACpB,MAAM,IAAI;AACnB,gBAAM,WAAW,MAAM,KAAK;AAAA,mBACnB,MAAM,MAAM;AACrB,gBAAM,SAAS,MAAM,KAAK;AAAA,eACrB;AACL,gBAAM,WAAW,MAAM,KAAK;AAAA;AAG9B,eAAO;AAAA;AAMT,oBAAe,GAAG,GAAG;AACnB,aAAK,IAAI;AACT,aAAK,IAAI;AAAA;AAGX,WAAK,UAAU,UAAU,iBAAkB,GAAG;AAC5C,YAAI,IAAI,IAAI,MAAM;AAClB,YAAI,IAAI,GAAG,UAAU,WAAW,KAAK;AACrC,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAE,KAAK,KAAK,OAAO,GAAG,GAAG;AAAA;AAG3B,eAAO;AAAA;AAIT,WAAK,UAAU,SAAS,gBAAiB,GAAG,GAAG,GAAG;AAChD,YAAI,MAAM,KAAK,MAAM,IAAI;AAAG,iBAAO;AAEnC,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,gBAAO,KAAI,MAAO,IAAI,IAAI;AAC1B,gBAAM;AAAA;AAGR,eAAO;AAAA;AAKT,WAAK,UAAU,UAAU,iBAAkB,KAAK,KAAK,KAAK,MAAM,MAAM,GAAG;AACvE,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAK,KAAK,IAAI,IAAI;AAClB,eAAK,KAAK,IAAI,IAAI;AAAA;AAAA;AAItB,WAAK,UAAU,YAAY,mBAAoB,KAAK,KAAK,MAAM,MAAM,GAAG,KAAK;AAC3E,aAAK,QAAQ,KAAK,KAAK,KAAK,MAAM,MAAM;AAExC,iBAAS,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG;AAC9B,cAAI,IAAI,KAAK;AAEb,cAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,KAAK;AACnC,cAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,KAAK;AAEnC,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,gBAAI,SAAS;AACb,gBAAI,SAAS;AAEb,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,kBAAI,KAAK,KAAK,IAAI;AAClB,kBAAI,KAAK,KAAK,IAAI;AAElB,kBAAI,KAAK,KAAK,IAAI,IAAI;AACtB,kBAAI,KAAK,KAAK,IAAI,IAAI;AAEtB,kBAAI,KAAK,SAAS,KAAK,SAAS;AAEhC,mBAAK,SAAS,KAAK,SAAS;AAC5B,mBAAK;AAEL,mBAAK,IAAI,KAAK,KAAK;AACnB,mBAAK,IAAI,KAAK,KAAK;AAEnB,mBAAK,IAAI,IAAI,KAAK,KAAK;AACvB,mBAAK,IAAI,IAAI,KAAK,KAAK;AAGvB,kBAAI,MAAM,GAAG;AACX,qBAAK,QAAQ,SAAS,QAAQ;AAE9B,yBAAS,QAAQ,SAAS,QAAQ;AAClC,yBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAOnB,WAAK,UAAU,cAAc,qBAAsB,GAAG,GAAG;AACvD,YAAI,IAAI,KAAK,IAAI,GAAG,KAAK;AACzB,YAAI,MAAM,IAAI;AACd,YAAI,IAAI;AACR,aAAK,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG;AAClC;AAAA;AAGF,eAAO,KAAK,IAAI,IAAI;AAAA;AAGtB,WAAK,UAAU,YAAY,mBAAoB,KAAK,KAAK,GAAG;AAC1D,YAAI,KAAK;AAAG;AAEZ,iBAAS,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK;AAC9B,cAAI,IAAI,IAAI;AAEZ,cAAI,KAAK,IAAI,IAAI,IAAI;AACrB,cAAI,IAAI,IAAI,KAAK;AAEjB,cAAI,IAAI;AAER,cAAI,KAAK,CAAC,IAAI,IAAI,IAAI;AACtB,cAAI,IAAI,IAAI,KAAK,CAAC;AAAA;AAAA;AAItB,WAAK,UAAU,eAAe,sBAAuB,IAAI,GAAG;AAC1D,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK;AAC9B,cAAI,IAAI,KAAK,MAAM,GAAG,IAAI,IAAI,KAAK,KAAK,OACtC,KAAK,MAAM,GAAG,IAAI,KAAK,KACvB;AAEF,aAAG,KAAK,IAAI;AAEZ,cAAI,IAAI,UAAW;AACjB,oBAAQ;AAAA,iBACH;AACL,oBAAQ,IAAI,WAAY;AAAA;AAAA;AAI5B,eAAO;AAAA;AAGT,WAAK,UAAU,aAAa,oBAAqB,IAAI,KAAK,KAAK,GAAG;AAChE,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,kBAAQ,QAAS,IAAG,KAAK;AAEzB,cAAI,IAAI,KAAK,QAAQ;AAAQ,kBAAQ,UAAU;AAC/C,cAAI,IAAI,IAAI,KAAK,QAAQ;AAAQ,kBAAQ,UAAU;AAAA;AAIrD,aAAK,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG;AAC5B,cAAI,KAAK;AAAA;AAGX,eAAO,UAAU;AACjB,eAAQ,SAAQ,CAAC,UAAY;AAAA;AAG/B,WAAK,UAAU,OAAO,cAAe,GAAG;AACtC,YAAI,KAAK,IAAI,MAAM;AACnB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAG,KAAK;AAAA;AAGV,eAAO;AAAA;AAGT,WAAK,UAAU,OAAO,cAAe,GAAG,GAAG,KAAK;AAC9C,YAAI,IAAI,IAAI,KAAK,YAAY,EAAE,QAAQ,EAAE;AAEzC,YAAI,MAAM,KAAK,QAAQ;AAEvB,YAAI,IAAI,KAAK,KAAK;AAElB,YAAI,MAAM,IAAI,MAAM;AACpB,YAAI,OAAO,IAAI,MAAM;AACrB,YAAI,OAAO,IAAI,MAAM;AAErB,YAAI,OAAO,IAAI,MAAM;AACrB,YAAI,QAAQ,IAAI,MAAM;AACtB,YAAI,QAAQ,IAAI,MAAM;AAEtB,YAAI,OAAO,IAAI;AACf,aAAK,SAAS;AAEd,aAAK,WAAW,EAAE,OAAO,EAAE,QAAQ,KAAK;AACxC,aAAK,WAAW,EAAE,OAAO,EAAE,QAAQ,MAAM;AAEzC,aAAK,UAAU,KAAK,GAAG,MAAM,MAAM,GAAG;AACtC,aAAK,UAAU,MAAM,GAAG,OAAO,OAAO,GAAG;AAEzC,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAI,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM;AAC9C,eAAK,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM;AAC/C,eAAK,KAAK;AAAA;AAGZ,aAAK,UAAU,MAAM,MAAM;AAC3B,aAAK,UAAU,MAAM,MAAM,MAAM,GAAG,GAAG;AACvC,aAAK,UAAU,MAAM,GAAG;AACxB,aAAK,aAAa,MAAM;AAExB,YAAI,WAAW,EAAE,WAAW,EAAE;AAC9B,YAAI,SAAS,EAAE,SAAS,EAAE;AAC1B,eAAO,IAAI;AAAA;AAIb,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,MAAM,IAAI,GAAG;AACjB,YAAI,QAAQ,IAAI,MAAM,KAAK,SAAS,IAAI;AACxC,eAAO,KAAK,MAAM,KAAK;AAAA;AAIzB,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,MAAM,IAAI,GAAG;AACjB,YAAI,QAAQ,IAAI,MAAM,KAAK,SAAS,IAAI;AACxC,eAAO,WAAW,MAAM,KAAK;AAAA;AAI/B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM,KAAK;AAAA;AAGjC,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ;AACtB,eAAO,MAAM;AAGb,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,IAAK,MAAK,MAAM,KAAK,KAAK;AAC9B,cAAI,KAAM,KAAI,YAAc,SAAQ;AACpC,oBAAU;AACV,mBAAU,IAAI,WAAa;AAE3B,mBAAS,OAAO;AAChB,eAAK,MAAM,KAAK,KAAK;AAAA;AAGvB,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK;AAChB,eAAK;AAAA;AAGP,eAAO;AAAA;AAGT,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAI5B,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,IAAI;AAAA;AAIlB,SAAG,UAAU,OAAO,gBAAiB;AACnC,eAAO,KAAK,KAAK,KAAK;AAAA;AAIxB,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,IAAI,WAAW;AACnB,YAAI,EAAE,WAAW;AAAG,iBAAO,IAAI,GAAG;AAGlC,YAAI,MAAM;AACV,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,MAAM,IAAI,OAAO;AAClD,cAAI,EAAE,OAAO;AAAG;AAAA;AAGlB,YAAI,EAAE,IAAI,EAAE,QAAQ;AAClB,mBAAS,IAAI,IAAI,OAAO,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,OAAO;AACtD,gBAAI,EAAE,OAAO;AAAG;AAEhB,kBAAM,IAAI,IAAI;AAAA;AAAA;AAIlB,eAAO;AAAA;AAIT,SAAG,UAAU,SAAS,gBAAiB,MAAM;AAC3C,eAAO,OAAO,SAAS,YAAY,QAAQ;AAC3C,YAAI,IAAI,OAAO;AACf,YAAI,IAAK,QAAO,KAAK;AACrB,YAAI,YAAa,aAAe,KAAK,KAAQ,KAAK;AAClD,YAAI;AAEJ,YAAI,MAAM,GAAG;AACX,cAAI,QAAQ;AAEZ,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,gBAAI,WAAW,KAAK,MAAM,KAAK;AAC/B,gBAAI,IAAM,MAAK,MAAM,KAAK,KAAK,YAAa;AAC5C,iBAAK,MAAM,KAAK,IAAI;AACpB,oBAAQ,aAAc,KAAK;AAAA;AAG7B,cAAI,OAAO;AACT,iBAAK,MAAM,KAAK;AAChB,iBAAK;AAAA;AAAA;AAIT,YAAI,MAAM,GAAG;AACX,eAAK,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACrC,iBAAK,MAAM,IAAI,KAAK,KAAK,MAAM;AAAA;AAGjC,eAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,iBAAK,MAAM,KAAK;AAAA;AAGlB,eAAK,UAAU;AAAA;AAGjB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,QAAQ,eAAgB,MAAM;AAEzC,eAAO,KAAK,aAAa;AACzB,eAAO,KAAK,OAAO;AAAA;AAMrB,SAAG,UAAU,SAAS,gBAAiB,MAAM,MAAM,UAAU;AAC3D,eAAO,OAAO,SAAS,YAAY,QAAQ;AAC3C,YAAI;AACJ,YAAI,MAAM;AACR,cAAK,QAAQ,OAAO,MAAO;AAAA,eACtB;AACL,cAAI;AAAA;AAGN,YAAI,IAAI,OAAO;AACf,YAAI,IAAI,KAAK,IAAK,QAAO,KAAK,IAAI,KAAK;AACvC,YAAI,OAAO,WAAc,aAAc,KAAM;AAC7C,YAAI,cAAc;AAElB,aAAK;AACL,YAAI,KAAK,IAAI,GAAG;AAGhB,YAAI,aAAa;AACf,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,wBAAY,MAAM,KAAK,KAAK,MAAM;AAAA;AAEpC,sBAAY,SAAS;AAAA;AAGvB,YAAI,MAAM,GAAG;AAAA,mBAEF,KAAK,SAAS,GAAG;AAC1B,eAAK,UAAU;AACf,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,iBAAK,MAAM,KAAK,KAAK,MAAM,IAAI;AAAA;AAAA,eAE5B;AACL,eAAK,MAAM,KAAK;AAChB,eAAK,SAAS;AAAA;AAGhB,YAAI,QAAQ;AACZ,aAAK,IAAI,KAAK,SAAS,GAAG,KAAK,KAAM,WAAU,KAAK,KAAK,IAAI,KAAK;AAChE,cAAI,OAAO,KAAK,MAAM,KAAK;AAC3B,eAAK,MAAM,KAAM,SAAU,KAAK,IAAO,SAAS;AAChD,kBAAQ,OAAO;AAAA;AAIjB,YAAI,eAAe,UAAU,GAAG;AAC9B,sBAAY,MAAM,YAAY,YAAY;AAAA;AAG5C,YAAI,KAAK,WAAW,GAAG;AACrB,eAAK,MAAM,KAAK;AAChB,eAAK,SAAS;AAAA;AAGhB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,QAAQ,eAAgB,MAAM,MAAM,UAAU;AAEzD,eAAO,KAAK,aAAa;AACzB,eAAO,KAAK,OAAO,MAAM,MAAM;AAAA;AAIjC,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,QAAQ,OAAO;AAAA;AAI7B,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,QAAQ,OAAO;AAAA;AAI7B,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ,YAAY,OAAO;AACzC,YAAI,IAAI,MAAM;AACd,YAAI,IAAK,OAAM,KAAK;AACpB,YAAI,IAAI,KAAK;AAGb,YAAI,KAAK,UAAU;AAAG,iBAAO;AAG7B,YAAI,IAAI,KAAK,MAAM;AAEnB,eAAO,CAAC,CAAE,KAAI;AAAA;AAIhB,SAAG,UAAU,SAAS,gBAAiB,MAAM;AAC3C,eAAO,OAAO,SAAS,YAAY,QAAQ;AAC3C,YAAI,IAAI,OAAO;AACf,YAAI,IAAK,QAAO,KAAK;AAErB,eAAO,KAAK,aAAa,GAAG;AAE5B,YAAI,KAAK,UAAU,GAAG;AACpB,iBAAO;AAAA;AAGT,YAAI,MAAM,GAAG;AACX;AAAA;AAEF,aAAK,SAAS,KAAK,IAAI,GAAG,KAAK;AAE/B,YAAI,MAAM,GAAG;AACX,cAAI,OAAO,WAAc,aAAc,KAAM;AAC7C,eAAK,MAAM,KAAK,SAAS,MAAM;AAAA;AAGjC,eAAO,KAAK;AAAA;AAId,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,QAAQ,OAAO;AAAA;AAI7B,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ;AACtB,eAAO,MAAM;AACb,YAAI,MAAM;AAAG,iBAAO,KAAK,MAAM,CAAC;AAGhC,YAAI,KAAK,aAAa,GAAG;AACvB,cAAI,KAAK,WAAW,KAAM,MAAK,MAAM,KAAK,KAAK,KAAK;AAClD,iBAAK,MAAM,KAAK,MAAO,MAAK,MAAM,KAAK;AACvC,iBAAK,WAAW;AAChB,mBAAO;AAAA;AAGT,eAAK,WAAW;AAChB,eAAK,MAAM;AACX,eAAK,WAAW;AAChB,iBAAO;AAAA;AAIT,eAAO,KAAK,OAAO;AAAA;AAGrB,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,aAAK,MAAM,MAAM;AAGjB,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,KAAK,MAAM,MAAM,UAAW,KAAK;AAClE,eAAK,MAAM,MAAM;AACjB,cAAI,MAAM,KAAK,SAAS,GAAG;AACzB,iBAAK,MAAM,IAAI,KAAK;AAAA,iBACf;AACL,iBAAK,MAAM,IAAI;AAAA;AAAA;AAGnB,aAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,IAAI;AAExC,eAAO;AAAA;AAIT,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ;AACtB,eAAO,MAAM;AACb,YAAI,MAAM;AAAG,iBAAO,KAAK,MAAM,CAAC;AAEhC,YAAI,KAAK,aAAa,GAAG;AACvB,eAAK,WAAW;AAChB,eAAK,MAAM;AACX,eAAK,WAAW;AAChB,iBAAO;AAAA;AAGT,aAAK,MAAM,MAAM;AAEjB,YAAI,KAAK,WAAW,KAAK,KAAK,MAAM,KAAK,GAAG;AAC1C,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM;AAC5B,eAAK,WAAW;AAAA,eACX;AAEL,mBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,KAAK,MAAM,KAAK,GAAG,KAAK;AACzD,iBAAK,MAAM,MAAM;AACjB,iBAAK,MAAM,IAAI,MAAM;AAAA;AAAA;AAIzB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,OAAO,gBAAiB;AACnC,aAAK,WAAW;AAEhB,eAAO;AAAA;AAGT,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,QAAQ;AAAA;AAGtB,SAAG,UAAU,eAAe,sBAAuB,KAAK,KAAK,OAAO;AAClE,YAAI,MAAM,IAAI,SAAS;AACvB,YAAI;AAEJ,aAAK,QAAQ;AAEb,YAAI;AACJ,YAAI,QAAQ;AACZ,aAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AAC/B,cAAK,MAAK,MAAM,IAAI,SAAS,KAAK;AAClC,cAAI,QAAS,KAAI,MAAM,KAAK,KAAK;AACjC,eAAK,QAAQ;AACb,kBAAS,MAAK,MAAQ,SAAQ,WAAa;AAC3C,eAAK,MAAM,IAAI,SAAS,IAAI;AAAA;AAE9B,eAAO,IAAI,KAAK,SAAS,OAAO,KAAK;AACnC,cAAK,MAAK,MAAM,IAAI,SAAS,KAAK;AAClC,kBAAQ,KAAK;AACb,eAAK,MAAM,IAAI,SAAS,IAAI;AAAA;AAG9B,YAAI,UAAU;AAAG,iBAAO,KAAK;AAG7B,eAAO,UAAU;AACjB,gBAAQ;AACR,aAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,cAAI,CAAE,MAAK,MAAM,KAAK,KAAK;AAC3B,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA;AAEtB,aAAK,WAAW;AAEhB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,WAAW,kBAAmB,KAAK,MAAM;AACpD,YAAI,QAAQ,KAAK,SAAS,IAAI;AAE9B,YAAI,IAAI,KAAK;AACb,YAAI,IAAI;AAGR,YAAI,MAAM,EAAE,MAAM,EAAE,SAAS,KAAK;AAClC,YAAI,UAAU,KAAK,WAAW;AAC9B,gBAAQ,KAAK;AACb,YAAI,UAAU,GAAG;AACf,cAAI,EAAE,MAAM;AACZ,YAAE,OAAO;AACT,gBAAM,EAAE,MAAM,EAAE,SAAS,KAAK;AAAA;AAIhC,YAAI,IAAI,EAAE,SAAS,EAAE;AACrB,YAAI;AAEJ,YAAI,SAAS,OAAO;AAClB,cAAI,IAAI,GAAG;AACX,YAAE,SAAS,IAAI;AACf,YAAE,QAAQ,IAAI,MAAM,EAAE;AACtB,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAE,MAAM,KAAK;AAAA;AAAA;AAIjB,YAAI,OAAO,EAAE,QAAQ,aAAa,GAAG,GAAG;AACxC,YAAI,KAAK,aAAa,GAAG;AACvB,cAAI;AACJ,cAAI,GAAG;AACL,cAAE,MAAM,KAAK;AAAA;AAAA;AAIjB,iBAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC/B,cAAI,KAAM,GAAE,MAAM,EAAE,SAAS,KAAK,KAAK,WACpC,GAAE,MAAM,EAAE,SAAS,IAAI,KAAK;AAI/B,eAAK,KAAK,IAAK,KAAK,MAAO,GAAG;AAE9B,YAAE,aAAa,GAAG,IAAI;AACtB,iBAAO,EAAE,aAAa,GAAG;AACvB;AACA,cAAE,WAAW;AACb,cAAE,aAAa,GAAG,GAAG;AACrB,gBAAI,CAAC,EAAE,UAAU;AACf,gBAAE,YAAY;AAAA;AAAA;AAGlB,cAAI,GAAG;AACL,cAAE,MAAM,KAAK;AAAA;AAAA;AAGjB,YAAI,GAAG;AACL,YAAE;AAAA;AAEJ,UAAE;AAGF,YAAI,SAAS,SAAS,UAAU,GAAG;AACjC,YAAE,OAAO;AAAA;AAGX,eAAO;AAAA,UACL,KAAK,KAAK;AAAA,UACV,KAAK;AAAA;AAAA;AAQT,SAAG,UAAU,SAAS,gBAAiB,KAAK,MAAM,UAAU;AAC1D,eAAO,CAAC,IAAI;AAEZ,YAAI,KAAK,UAAU;AACjB,iBAAO;AAAA,YACL,KAAK,IAAI,GAAG;AAAA,YACZ,KAAK,IAAI,GAAG;AAAA;AAAA;AAIhB,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,gBAAM,KAAK,MAAM,OAAO,KAAK;AAE7B,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI;AAAA;AAGhB,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI;AACd,gBAAI,YAAY,IAAI,aAAa,GAAG;AAClC,kBAAI,KAAK;AAAA;AAAA;AAIb,iBAAO;AAAA,YACL;AAAA,YACA;AAAA;AAAA;AAIJ,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,gBAAM,KAAK,OAAO,IAAI,OAAO;AAE7B,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI;AAAA;AAGhB,iBAAO;AAAA,YACL;AAAA,YACA,KAAK,IAAI;AAAA;AAAA;AAIb,YAAK,MAAK,WAAW,IAAI,cAAc,GAAG;AACxC,gBAAM,KAAK,MAAM,OAAO,IAAI,OAAO;AAEnC,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI;AACd,gBAAI,YAAY,IAAI,aAAa,GAAG;AAClC,kBAAI,KAAK;AAAA;AAAA;AAIb,iBAAO;AAAA,YACL,KAAK,IAAI;AAAA,YACT;AAAA;AAAA;AAOJ,YAAI,IAAI,SAAS,KAAK,UAAU,KAAK,IAAI,OAAO,GAAG;AACjD,iBAAO;AAAA,YACL,KAAK,IAAI,GAAG;AAAA,YACZ,KAAK;AAAA;AAAA;AAKT,YAAI,IAAI,WAAW,GAAG;AACpB,cAAI,SAAS,OAAO;AAClB,mBAAO;AAAA,cACL,KAAK,KAAK,KAAK,IAAI,MAAM;AAAA,cACzB,KAAK;AAAA;AAAA;AAIT,cAAI,SAAS,OAAO;AAClB,mBAAO;AAAA,cACL,KAAK;AAAA,cACL,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,MAAM;AAAA;AAAA;AAIpC,iBAAO;AAAA,YACL,KAAK,KAAK,KAAK,IAAI,MAAM;AAAA,YACzB,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,MAAM;AAAA;AAAA;AAIpC,eAAO,KAAK,SAAS,KAAK;AAAA;AAI5B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,OAAO,KAAK,OAAO,OAAO;AAAA;AAIxC,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,OAAO,KAAK,OAAO,OAAO;AAAA;AAGxC,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,OAAO,KAAK,OAAO,MAAM;AAAA;AAIvC,SAAG,UAAU,WAAW,kBAAmB,KAAK;AAC9C,YAAI,KAAK,KAAK,OAAO;AAGrB,YAAI,GAAG,IAAI;AAAU,iBAAO,GAAG;AAE/B,YAAI,MAAM,GAAG,IAAI,aAAa,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG;AAExD,YAAI,OAAO,IAAI,MAAM;AACrB,YAAI,KAAK,IAAI,MAAM;AACnB,YAAI,MAAM,IAAI,IAAI;AAGlB,YAAI,MAAM,KAAK,OAAO,KAAK,QAAQ;AAAG,iBAAO,GAAG;AAGhD,eAAO,GAAG,IAAI,aAAa,IAAI,GAAG,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM;AAAA;AAGhE,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,OAAO;AACd,YAAI,IAAK,MAAK,MAAM;AAEpB,YAAI,MAAM;AACV,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,gBAAO,KAAI,MAAO,MAAK,MAAM,KAAK,MAAM;AAAA;AAG1C,eAAO;AAAA;AAIT,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO;AAEd,YAAI,QAAQ;AACZ,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,cAAI,IAAK,MAAK,MAAM,KAAK,KAAK,QAAQ;AACtC,eAAK,MAAM,KAAM,IAAI,MAAO;AAC5B,kBAAQ,IAAI;AAAA;AAGd,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,OAAO,cAAe,GAAG;AACpC,eAAO,EAAE,aAAa;AACtB,eAAO,CAAC,EAAE;AAEV,YAAI,IAAI;AACR,YAAI,IAAI,EAAE;AAEV,YAAI,EAAE,aAAa,GAAG;AACpB,cAAI,EAAE,KAAK;AAAA,eACN;AACL,cAAI,EAAE;AAAA;AAIR,YAAI,IAAI,IAAI,GAAG;AACf,YAAI,IAAI,IAAI,GAAG;AAGf,YAAI,IAAI,IAAI,GAAG;AACf,YAAI,IAAI,IAAI,GAAG;AAEf,YAAI,IAAI;AAER,eAAO,EAAE,YAAY,EAAE,UAAU;AAC/B,YAAE,OAAO;AACT,YAAE,OAAO;AACT,YAAE;AAAA;AAGJ,YAAI,KAAK,EAAE;AACX,YAAI,KAAK,EAAE;AAEX,eAAO,CAAC,EAAE,UAAU;AAClB,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO;AACT,mBAAO,MAAM,GAAG;AACd,kBAAI,EAAE,WAAW,EAAE,SAAS;AAC1B,kBAAE,KAAK;AACP,kBAAE,KAAK;AAAA;AAGT,gBAAE,OAAO;AACT,gBAAE,OAAO;AAAA;AAAA;AAIb,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO;AACT,mBAAO,MAAM,GAAG;AACd,kBAAI,EAAE,WAAW,EAAE,SAAS;AAC1B,kBAAE,KAAK;AACP,kBAAE,KAAK;AAAA;AAGT,gBAAE,OAAO;AACT,gBAAE,OAAO;AAAA;AAAA;AAIb,cAAI,EAAE,IAAI,MAAM,GAAG;AACjB,cAAE,KAAK;AACP,cAAE,KAAK;AACP,cAAE,KAAK;AAAA,iBACF;AACL,cAAE,KAAK;AACP,cAAE,KAAK;AACP,cAAE,KAAK;AAAA;AAAA;AAIX,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,KAAK,EAAE,OAAO;AAAA;AAAA;AAOlB,SAAG,UAAU,SAAS,gBAAiB,GAAG;AACxC,eAAO,EAAE,aAAa;AACtB,eAAO,CAAC,EAAE;AAEV,YAAI,IAAI;AACR,YAAI,IAAI,EAAE;AAEV,YAAI,EAAE,aAAa,GAAG;AACpB,cAAI,EAAE,KAAK;AAAA,eACN;AACL,cAAI,EAAE;AAAA;AAGR,YAAI,KAAK,IAAI,GAAG;AAChB,YAAI,KAAK,IAAI,GAAG;AAEhB,YAAI,QAAQ,EAAE;AAEd,eAAO,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,GAAG;AACrC,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO;AACT,mBAAO,MAAM,GAAG;AACd,kBAAI,GAAG,SAAS;AACd,mBAAG,KAAK;AAAA;AAGV,iBAAG,OAAO;AAAA;AAAA;AAId,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO;AACT,mBAAO,MAAM,GAAG;AACd,kBAAI,GAAG,SAAS;AACd,mBAAG,KAAK;AAAA;AAGV,iBAAG,OAAO;AAAA;AAAA;AAId,cAAI,EAAE,IAAI,MAAM,GAAG;AACjB,cAAE,KAAK;AACP,eAAG,KAAK;AAAA,iBACH;AACL,cAAE,KAAK;AACP,eAAG,KAAK;AAAA;AAAA;AAIZ,YAAI;AACJ,YAAI,EAAE,KAAK,OAAO,GAAG;AACnB,gBAAM;AAAA,eACD;AACL,gBAAM;AAAA;AAGR,YAAI,IAAI,KAAK,KAAK,GAAG;AACnB,cAAI,KAAK;AAAA;AAGX,eAAO;AAAA;AAGT,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK;AAAU,iBAAO,IAAI;AAC9B,YAAI,IAAI;AAAU,iBAAO,KAAK;AAE9B,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,IAAI;AACZ,UAAE,WAAW;AACb,UAAE,WAAW;AAGb,iBAAS,QAAQ,GAAG,EAAE,YAAY,EAAE,UAAU,SAAS;AACrD,YAAE,OAAO;AACT,YAAE,OAAO;AAAA;AAGX,WAAG;AACD,iBAAO,EAAE,UAAU;AACjB,cAAE,OAAO;AAAA;AAEX,iBAAO,EAAE,UAAU;AACjB,cAAE,OAAO;AAAA;AAGX,cAAI,IAAI,EAAE,IAAI;AACd,cAAI,IAAI,GAAG;AAET,gBAAI,IAAI;AACR,gBAAI;AACJ,gBAAI;AAAA,qBACK,MAAM,KAAK,EAAE,KAAK,OAAO,GAAG;AACrC;AAAA;AAGF,YAAE,KAAK;AAAA,iBACA;AAET,eAAO,EAAE,OAAO;AAAA;AAIlB,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,KAAK,EAAE,KAAK;AAAA;AAG/B,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAQ,MAAK,MAAM,KAAK,OAAO;AAAA;AAGjC,SAAG,UAAU,QAAQ,iBAAkB;AACrC,eAAQ,MAAK,MAAM,KAAK,OAAO;AAAA;AAIjC,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,KAAK,MAAM,KAAK;AAAA;AAIzB,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ;AACtB,YAAI,IAAI,MAAM;AACd,YAAI,IAAK,OAAM,KAAK;AACpB,YAAI,IAAI,KAAK;AAGb,YAAI,KAAK,UAAU,GAAG;AACpB,eAAK,QAAQ,IAAI;AACjB,eAAK,MAAM,MAAM;AACjB,iBAAO;AAAA;AAIT,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,UAAU,KAAK,IAAI,KAAK,QAAQ,KAAK;AACnD,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,eAAK;AACL,kBAAQ,MAAM;AACd,eAAK;AACL,eAAK,MAAM,KAAK;AAAA;AAElB,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK;AAChB,eAAK;AAAA;AAEP,eAAO;AAAA;AAGT,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO;AAAA;AAGhD,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,WAAW,MAAM;AAErB,YAAI,KAAK,aAAa,KAAK,CAAC;AAAU,iBAAO;AAC7C,YAAI,KAAK,aAAa,KAAK;AAAU,iBAAO;AAE5C,aAAK;AAEL,YAAI;AACJ,YAAI,KAAK,SAAS,GAAG;AACnB,gBAAM;AAAA,eACD;AACL,cAAI,UAAU;AACZ,kBAAM,CAAC;AAAA;AAGT,iBAAO,OAAO,UAAW;AAEzB,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,gBAAM,MAAM,MAAM,IAAI,IAAI,MAAM,KAAK;AAAA;AAEvC,YAAI,KAAK,aAAa;AAAG,iBAAO,CAAC,MAAM;AACvC,eAAO;AAAA;AAOT,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa;AAAG,iBAAO;AACtD,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa;AAAG,iBAAO;AAEtD,YAAI,MAAM,KAAK,KAAK;AACpB,YAAI,KAAK,aAAa;AAAG,iBAAO,CAAC,MAAM;AACvC,eAAO;AAAA;AAIT,SAAG,UAAU,OAAO,cAAe,KAAK;AAEtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO;AACrC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO;AAErC,YAAI,MAAM;AACV,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,cAAI,IAAI,IAAI,MAAM,KAAK;AAEvB,cAAI,MAAM;AAAG;AACb,cAAI,IAAI,GAAG;AACT,kBAAM;AAAA,qBACG,IAAI,GAAG;AAChB,kBAAM;AAAA;AAER;AAAA;AAEF,eAAO;AAAA;AAGT,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,SAAS;AAAA;AAG5B,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,SAAS;AAAA;AAG3B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,QAAQ;AAAA;AAG3B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,IAAI,QAAQ;AAAA;AAG1B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,SAAS;AAAA;AAG5B,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,SAAS;AAAA;AAG3B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,QAAQ;AAAA;AAG3B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,IAAI,QAAQ;AAAA;AAG1B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,SAAS;AAAA;AAG5B,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,SAAS;AAAA;AAO3B,SAAG,MAAM,aAAc,KAAK;AAC1B,eAAO,IAAI,IAAI;AAAA;AAGjB,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,CAAC,KAAK,KAAK;AAClB,eAAO,KAAK,aAAa,GAAG;AAC5B,eAAO,IAAI,UAAU,MAAM,UAAU;AAAA;AAGvC,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,YAAY;AAAA;AAG9B,SAAG,UAAU,YAAY,mBAAoB,KAAK;AAChD,aAAK,MAAM;AACX,eAAO;AAAA;AAGT,SAAG,UAAU,WAAW,kBAAmB,KAAK;AAC9C,eAAO,CAAC,KAAK,KAAK;AAClB,eAAO,KAAK,UAAU;AAAA;AAGxB,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAG5B,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,KAAK,MAAM;AAAA;AAG7B,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAG5B,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,KAAK,MAAM;AAAA;AAG7B,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAG5B,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS,MAAM;AACxB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAG5B,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS,MAAM;AACxB,eAAO,KAAK,IAAI,KAAK,MAAM;AAAA;AAG7B,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,IAAI;AAAA;AAGtB,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,KAAK;AAAA;AAIvB,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,KAAK;AAAA;AAGvB,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,KAAK;AAAA;AAIvB,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,IAAI;AAAA;AAGtB,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,OAAO,CAAC,IAAI,KAAK;AAC7B,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAI5B,UAAI,SAAS;AAAA,QACX,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA;AAIV,sBAAiB,MAAM,GAAG;AAExB,aAAK,OAAO;AACZ,aAAK,IAAI,IAAI,GAAG,GAAG;AACnB,aAAK,IAAI,KAAK,EAAE;AAChB,aAAK,IAAI,IAAI,GAAG,GAAG,OAAO,KAAK,GAAG,KAAK,KAAK;AAE5C,aAAK,MAAM,KAAK;AAAA;AAGlB,aAAO,UAAU,OAAO,gBAAiB;AACvC,YAAI,MAAM,IAAI,GAAG;AACjB,YAAI,QAAQ,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI;AACzC,eAAO;AAAA;AAGT,aAAO,UAAU,UAAU,iBAAkB,KAAK;AAGhD,YAAI,IAAI;AACR,YAAI;AAEJ,WAAG;AACD,eAAK,MAAM,GAAG,KAAK;AACnB,cAAI,KAAK,MAAM;AACf,cAAI,EAAE,KAAK,KAAK;AAChB,iBAAO,EAAE;AAAA,iBACF,OAAO,KAAK;AAErB,YAAI,MAAM,OAAO,KAAK,IAAI,KAAK,EAAE,KAAK,KAAK;AAC3C,YAAI,QAAQ,GAAG;AACb,YAAE,MAAM,KAAK;AACb,YAAE,SAAS;AAAA,mBACF,MAAM,GAAG;AAClB,YAAE,KAAK,KAAK;AAAA,eACP;AACL,cAAI,EAAE,UAAU,QAAW;AAEzB,cAAE;AAAA,iBACG;AAEL,cAAE;AAAA;AAAA;AAIN,eAAO;AAAA;AAGT,aAAO,UAAU,QAAQ,eAAgB,OAAO,KAAK;AACnD,cAAM,OAAO,KAAK,GAAG,GAAG;AAAA;AAG1B,aAAO,UAAU,QAAQ,eAAgB,KAAK;AAC5C,eAAO,IAAI,KAAK,KAAK;AAAA;AAGvB,sBAAiB;AACf,eAAO,KACL,MACA,QACA;AAAA;AAEJ,eAAS,MAAM;AAEf,WAAK,UAAU,QAAQ,eAAgB,OAAO,QAAQ;AAEpD,YAAI,OAAO;AAEX,YAAI,SAAS,KAAK,IAAI,MAAM,QAAQ;AACpC,iBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,iBAAO,MAAM,KAAK,MAAM,MAAM;AAAA;AAEhC,eAAO,SAAS;AAEhB,YAAI,MAAM,UAAU,GAAG;AACrB,gBAAM,MAAM,KAAK;AACjB,gBAAM,SAAS;AACf;AAAA;AAIF,YAAI,OAAO,MAAM,MAAM;AACvB,eAAO,MAAM,OAAO,YAAY,OAAO;AAEvC,aAAK,IAAI,IAAI,IAAI,MAAM,QAAQ,KAAK;AAClC,cAAI,OAAO,MAAM,MAAM,KAAK;AAC5B,gBAAM,MAAM,IAAI,MAAQ,QAAO,SAAS,IAAM,SAAS;AACvD,iBAAO;AAAA;AAET,kBAAU;AACV,cAAM,MAAM,IAAI,MAAM;AACtB,YAAI,SAAS,KAAK,MAAM,SAAS,IAAI;AACnC,gBAAM,UAAU;AAAA,eACX;AACL,gBAAM,UAAU;AAAA;AAAA;AAIpB,WAAK,UAAU,QAAQ,eAAgB,KAAK;AAE1C,YAAI,MAAM,IAAI,UAAU;AACxB,YAAI,MAAM,IAAI,SAAS,KAAK;AAC5B,YAAI,UAAU;AAGd,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,IAAI,IAAI,MAAM,KAAK;AACvB,gBAAM,IAAI;AACV,cAAI,MAAM,KAAK,KAAK;AACpB,eAAK,IAAI,KAAS,MAAK,WAAa;AAAA;AAItC,YAAI,IAAI,MAAM,IAAI,SAAS,OAAO,GAAG;AACnC,cAAI;AACJ,cAAI,IAAI,MAAM,IAAI,SAAS,OAAO,GAAG;AACnC,gBAAI;AAAA;AAAA;AAGR,eAAO;AAAA;AAGT,sBAAiB;AACf,eAAO,KACL,MACA,QACA;AAAA;AAEJ,eAAS,MAAM;AAEf,sBAAiB;AACf,eAAO,KACL,MACA,QACA;AAAA;AAEJ,eAAS,MAAM;AAEf,wBAAmB;AAEjB,eAAO,KACL,MACA,SACA;AAAA;AAEJ,eAAS,QAAQ;AAEjB,aAAO,UAAU,QAAQ,eAAgB,KAAK;AAE5C,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,KAAM,KAAI,MAAM,KAAK,KAAK,KAAO;AACrC,cAAI,KAAK,KAAK;AACd,kBAAQ;AAER,cAAI,MAAM,KAAK;AACf,kBAAQ;AAAA;AAEV,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,IAAI,YAAY;AAAA;AAE5B,eAAO;AAAA;AAIT,SAAG,SAAS,eAAgB,MAAM;AAEhC,YAAI,OAAO;AAAO,iBAAO,OAAO;AAEhC,YAAI;AACJ,YAAI,SAAS,QAAQ;AACnB,mBAAQ,IAAI;AAAA,mBACH,SAAS,QAAQ;AAC1B,mBAAQ,IAAI;AAAA,mBACH,SAAS,QAAQ;AAC1B,mBAAQ,IAAI;AAAA,mBACH,SAAS,UAAU;AAC5B,mBAAQ,IAAI;AAAA,eACP;AACL,gBAAM,IAAI,MAAM,mBAAmB;AAAA;AAErC,eAAO,QAAQ;AAEf,eAAO;AAAA;AAMT,mBAAc,GAAG;AACf,YAAI,OAAO,MAAM,UAAU;AACzB,cAAI,QAAQ,GAAG,OAAO;AACtB,eAAK,IAAI,MAAM;AACf,eAAK,QAAQ;AAAA,eACR;AACL,iBAAO,EAAE,IAAI,IAAI;AACjB,eAAK,IAAI;AACT,eAAK,QAAQ;AAAA;AAAA;AAIjB,UAAI,UAAU,WAAW,kBAAmB,GAAG;AAC7C,eAAO,EAAE,aAAa,GAAG;AACzB,eAAO,EAAE,KAAK;AAAA;AAGhB,UAAI,UAAU,WAAW,kBAAmB,GAAG,GAAG;AAChD,eAAQ,GAAE,WAAW,EAAE,cAAc,GAAG;AACxC,eAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAC1B;AAAA;AAGJ,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,KAAK;AAAO,iBAAO,KAAK,MAAM,QAAQ,GAAG,UAAU;AACvD,eAAO,EAAE,KAAK,KAAK,GAAG,UAAU;AAAA;AAGlC,UAAI,UAAU,MAAM,aAAc,GAAG;AACnC,YAAI,EAAE,UAAU;AACd,iBAAO,EAAE;AAAA;AAGX,eAAO,KAAK,EAAE,IAAI,GAAG,UAAU;AAAA;AAGjC,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG;AAEjB,YAAI,MAAM,EAAE,IAAI;AAChB,YAAI,IAAI,IAAI,KAAK,MAAM,GAAG;AACxB,cAAI,KAAK,KAAK;AAAA;AAEhB,eAAO,IAAI,UAAU;AAAA;AAGvB,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG;AAEjB,YAAI,MAAM,EAAE,KAAK;AACjB,YAAI,IAAI,IAAI,KAAK,MAAM,GAAG;AACxB,cAAI,KAAK,KAAK;AAAA;AAEhB,eAAO;AAAA;AAGT,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG;AAEjB,YAAI,MAAM,EAAE,IAAI;AAChB,YAAI,IAAI,KAAK,KAAK,GAAG;AACnB,cAAI,KAAK,KAAK;AAAA;AAEhB,eAAO,IAAI,UAAU;AAAA;AAGvB,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG;AAEjB,YAAI,MAAM,EAAE,KAAK;AACjB,YAAI,IAAI,KAAK,KAAK,GAAG;AACnB,cAAI,KAAK,KAAK;AAAA;AAEhB,eAAO;AAAA;AAGT,UAAI,UAAU,MAAM,aAAc,GAAG,KAAK;AACxC,aAAK,SAAS;AACd,eAAO,KAAK,KAAK,EAAE,MAAM;AAAA;AAG3B,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,EAAE,KAAK;AAAA;AAG1B,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,EAAE,IAAI;AAAA;AAGzB,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,eAAO,KAAK,KAAK,GAAG,EAAE;AAAA;AAGxB,UAAI,UAAU,MAAM,aAAc,GAAG;AACnC,eAAO,KAAK,IAAI,GAAG;AAAA;AAGrB,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,EAAE;AAAU,iBAAO,EAAE;AAEzB,YAAI,OAAO,KAAK,EAAE,MAAM;AACxB,eAAO,OAAO,MAAM;AAGpB,YAAI,SAAS,GAAG;AACd,cAAI,MAAM,KAAK,EAAE,IAAI,IAAI,GAAG,IAAI,OAAO;AACvC,iBAAO,KAAK,IAAI,GAAG;AAAA;AAMrB,YAAI,IAAI,KAAK,EAAE,KAAK;AACpB,YAAI,IAAI;AACR,eAAO,CAAC,EAAE,YAAY,EAAE,MAAM,OAAO,GAAG;AACtC;AACA,YAAE,OAAO;AAAA;AAEX,eAAO,CAAC,EAAE;AAEV,YAAI,MAAM,IAAI,GAAG,GAAG,MAAM;AAC1B,YAAI,OAAO,IAAI;AAIf,YAAI,OAAO,KAAK,EAAE,KAAK,GAAG,OAAO;AACjC,YAAI,IAAI,KAAK,EAAE;AACf,YAAI,IAAI,GAAG,IAAI,IAAI,GAAG,MAAM;AAE5B,eAAO,KAAK,IAAI,GAAG,MAAM,IAAI,UAAU,GAAG;AACxC,YAAE,QAAQ;AAAA;AAGZ,YAAI,IAAI,KAAK,IAAI,GAAG;AACpB,YAAI,IAAI,KAAK,IAAI,GAAG,EAAE,KAAK,GAAG,OAAO;AACrC,YAAI,IAAI,KAAK,IAAI,GAAG;AACpB,YAAI,IAAI;AACR,eAAO,EAAE,IAAI,SAAS,GAAG;AACvB,cAAI,MAAM;AACV,mBAAS,IAAI,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK;AACvC,kBAAM,IAAI;AAAA;AAEZ,iBAAO,IAAI;AACX,cAAI,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,OAAO,IAAI,IAAI;AAE7C,cAAI,EAAE,OAAO;AACb,cAAI,EAAE;AACN,cAAI,EAAE,OAAO;AACb,cAAI;AAAA;AAGN,eAAO;AAAA;AAGT,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,MAAM,EAAE,OAAO,KAAK;AACxB,YAAI,IAAI,aAAa,GAAG;AACtB,cAAI,WAAW;AACf,iBAAO,KAAK,KAAK,KAAK;AAAA,eACjB;AACL,iBAAO,KAAK,KAAK;AAAA;AAAA;AAIrB,UAAI,UAAU,MAAM,aAAc,GAAG,KAAK;AACxC,YAAI,IAAI;AAAU,iBAAO,IAAI,GAAG,GAAG,MAAM;AACzC,YAAI,IAAI,KAAK,OAAO;AAAG,iBAAO,EAAE;AAEhC,YAAI,aAAa;AACjB,YAAI,MAAM,IAAI,MAAM,KAAK;AACzB,YAAI,KAAK,IAAI,GAAG,GAAG,MAAM;AACzB,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI;AAAA;AAGhC,YAAI,MAAM,IAAI;AACd,YAAI,UAAU;AACd,YAAI,aAAa;AACjB,YAAI,QAAQ,IAAI,cAAc;AAC9B,YAAI,UAAU,GAAG;AACf,kBAAQ;AAAA;AAGV,aAAK,IAAI,IAAI,SAAS,GAAG,KAAK,GAAG,KAAK;AACpC,cAAI,OAAO,IAAI,MAAM;AACrB,mBAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK;AACnC,gBAAI,MAAO,QAAQ,IAAK;AACxB,gBAAI,QAAQ,IAAI,IAAI;AAClB,oBAAM,KAAK,IAAI;AAAA;AAGjB,gBAAI,QAAQ,KAAK,YAAY,GAAG;AAC9B,2BAAa;AACb;AAAA;AAGF,wBAAY;AACZ,uBAAW;AACX;AACA,gBAAI,eAAe,cAAe,OAAM,KAAK,MAAM;AAAI;AAEvD,kBAAM,KAAK,IAAI,KAAK,IAAI;AACxB,yBAAa;AACb,sBAAU;AAAA;AAEZ,kBAAQ;AAAA;AAGV,eAAO;AAAA;AAGT,UAAI,UAAU,YAAY,mBAAoB,KAAK;AACjD,YAAI,IAAI,IAAI,KAAK,KAAK;AAEtB,eAAO,MAAM,MAAM,EAAE,UAAU;AAAA;AAGjC,UAAI,UAAU,cAAc,qBAAsB,KAAK;AACrD,YAAI,MAAM,IAAI;AACd,YAAI,MAAM;AACV,eAAO;AAAA;AAOT,SAAG,OAAO,cAAe,KAAK;AAC5B,eAAO,IAAI,KAAK;AAAA;AAGlB,oBAAe,GAAG;AAChB,YAAI,KAAK,MAAM;AAEf,aAAK,QAAQ,KAAK,EAAE;AACpB,YAAI,KAAK,QAAQ,OAAO,GAAG;AACzB,eAAK,SAAS,KAAM,KAAK,QAAQ;AAAA;AAGnC,aAAK,IAAI,IAAI,GAAG,GAAG,OAAO,KAAK;AAC/B,aAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AAC3B,aAAK,OAAO,KAAK,EAAE,OAAO,KAAK;AAE/B,aAAK,OAAO,KAAK,KAAK,IAAI,KAAK,GAAG,MAAM,GAAG,IAAI,KAAK;AACpD,aAAK,OAAO,KAAK,KAAK,KAAK,KAAK;AAChC,aAAK,OAAO,KAAK,EAAE,IAAI,KAAK;AAAA;AAE9B,eAAS,MAAM;AAEf,WAAK,UAAU,YAAY,mBAAoB,KAAK;AAClD,eAAO,KAAK,KAAK,IAAI,MAAM,KAAK;AAAA;AAGlC,WAAK,UAAU,cAAc,qBAAsB,KAAK;AACtD,YAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK;AAC/B,UAAE,MAAM;AACR,eAAO;AAAA;AAGT,WAAK,UAAU,OAAO,cAAe,GAAG,GAAG;AACzC,YAAI,EAAE,YAAY,EAAE,UAAU;AAC5B,YAAE,MAAM,KAAK;AACb,YAAE,SAAS;AACX,iBAAO;AAAA;AAGT,YAAI,IAAI,EAAE,KAAK;AACf,YAAI,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,KAAK,MAAM,OAAO,KAAK,OAAO,IAAI,KAAK;AACvE,YAAI,IAAI,EAAE,KAAK,GAAG,OAAO,KAAK;AAC9B,YAAI,MAAM;AAEV,YAAI,EAAE,IAAI,KAAK,MAAM,GAAG;AACtB,gBAAM,EAAE,KAAK,KAAK;AAAA,mBACT,EAAE,KAAK,KAAK,GAAG;AACxB,gBAAM,EAAE,KAAK,KAAK;AAAA;AAGpB,eAAO,IAAI,UAAU;AAAA;AAGvB,WAAK,UAAU,MAAM,aAAc,GAAG,GAAG;AACvC,YAAI,EAAE,YAAY,EAAE;AAAU,iBAAO,IAAI,GAAG,GAAG,UAAU;AAEzD,YAAI,IAAI,EAAE,IAAI;AACd,YAAI,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,KAAK,MAAM,OAAO,KAAK,OAAO,IAAI,KAAK;AACvE,YAAI,IAAI,EAAE,KAAK,GAAG,OAAO,KAAK;AAC9B,YAAI,MAAM;AACV,YAAI,EAAE,IAAI,KAAK,MAAM,GAAG;AACtB,gBAAM,EAAE,KAAK,KAAK;AAAA,mBACT,EAAE,KAAK,KAAK,GAAG;AACxB,gBAAM,EAAE,KAAK,KAAK;AAAA;AAGpB,eAAO,IAAI,UAAU;AAAA;AAGvB,WAAK,UAAU,OAAO,cAAe,GAAG;AAEtC,YAAI,MAAM,KAAK,KAAK,EAAE,OAAO,KAAK,GAAG,IAAI,KAAK;AAC9C,eAAO,IAAI,UAAU;AAAA;AAAA,OAEtB,OAAO,WAAW,eAAe,QAAQ;AAAA;AAAA;;;;;;;;ACl3G5C,QAAA,KAAA;AACA,QAAM,KAAK,mBAAoB;AAE/B,QAAM,KAAK,IAAI,GAAG;AAClB,QAAM,WAAW,GAAG;AAOpB,YAAQ,mBAAmB,SAAS,YAAoB,YAA0B;AAA1B,UAAA,eAAA,QAAA;AAAA,qBAAA;;AACtD,UAAM,IAAI,IAAI,GAAG;AACjB,UAAI,EAAE,KAAK,SAAS,MAAM,GAAG;AAC3B,cAAM,IAAI,MAAM;;AAGlB,UAAM,QAAQ,GAAG,EAAE,IAAI;AACvB,aAAO,YAAY,MAAM,QAAQ,MAAM,QAAQ;;AAGjD,YAAQ,uBAAuB,SAAS,YAAkB;AACxD,UAAM,KAAK,IAAI,GAAG;AAClB,UAAI,GAAG,KAAK,SAAS,MAAM,KAAK,GAAG,UAAU;AAC3C,cAAM,IAAI,MAAM;;AAGlB,aAAO,GAAG,KAAK,SAAS,GAAG,YAAY,QAAQ,MAAM;;AAGvD,YAAQ,kBAAkB,SAAS,QAAc;AAC/C,UAAI,IAAI,IAAI,GAAG,OAAO;AACtB,UAAI,EAAE,KAAK,SAAS,MAAM,GAAG;AAC3B,YAAI,IAAI,GAAG;;AAGb,UAAI,IAAI,IAAI,GAAG,OAAO;AACtB,UAAI,EAAE,KAAK,SAAS,MAAM,GAAG;AAC3B,YAAI,IAAI,GAAG;;AAGb,aAAO,OAAO,OAAO,CAAC,EAAE,YAAY,QAAQ,MAAM,KAAK,EAAE,YAAY,QAAQ,MAAM;;AAGrF,YAAQ,aAAa,SACnB,WACA,YACA,YAA0B;AAA1B,UAAA,eAAA,QAAA;AAAA,qBAAA;;AAEA,UAAM,QAAQ,GAAG,cAAc;AAE/B,UAAM,SAAS,IAAI,GAAG;AACtB,UAAI,OAAO,KAAK,SAAS,MAAM,KAAK,OAAO,UAAU;AACnD,cAAM,IAAI,MAAM;;AAGlB,UAAM,SAAS,MAAM,IAAI,IAAI;AAC7B,aAAO,YAAY,OAAO,QAAQ,OAAO,QAAQ;;AAGnD,QAAM,cAAc,SAAS,GAAO,GAAO,YAAmB;AAC5D,UAAI;AAEJ,UAAI,YAAY;AACd,oBAAY,OAAO,MAAM;AACzB,kBAAU,KAAK,EAAE,UAAU,IAAO;AAClC,UAAE,YAAY,QAAQ,MAAM,IAAI,KAAK,WAAW;aAC3C;AACL,oBAAY,OAAO,MAAM;AACzB,kBAAU,KAAK;AACf,UAAE,YAAY,QAAQ,MAAM,IAAI,KAAK,WAAW;AAChD,UAAE,YAAY,QAAQ,MAAM,IAAI,KAAK,WAAW;;AAGlD,aAAO;;;;;;;;;;;ACxET,QAAM,mCAAmC,OAAO,KAAK;MAEnqCAAqC,OAAO,KAAK;MAErmBAAmB,SACzB,YACA,WACA,YAA0B;AAA1B,UAAA,eAAA,QAAA;AAAA,qBAAA;;AAEA,UAAM,SAAS,OAAO,KACpB,aAAa,mCAAmC;AAElD,iBAAW,KAAK,QAAQ,aAAa,IAAI;AACzC,gBAAU,KAAK,QAAQ,aAAa,MAAM;AAC1C,aAAO;;AAGT,YAAQ,mBAAmB,SAAS,YAAkB;AACpD,UAAM,SAAS,WAAW;AAG1B,UAAI,QAAQ;AACZ,UAAI,SAAS,QAAQ,KAAK,WAAW,WAAW;AAAM,eAAO;AAC7D,eAAS;AAGT,UAAI,SAAS,QAAQ,KAAK,CAAE,YAAW,SAAS;AAAO,eAAO;AAE9D,UAAM,OAAO,WAAW,SAAS;AACjC,eAAS;AACT,UAAI,OAAO,KAAK,OAAO;AAAG,eAAO;AACjC,UAAI,SAAS,QAAQ;AAAM,eAAO;AAGlC,UAAM,MAAM,WAAW,QAAQ,OAAO,KAAM,QAAO,IAAI,WAAW,QAAQ,OAAO,MAAM,IAAI;AAC3F,eAAS;AACT,UAAI,SAAS,QAAQ;AAAK,eAAO;AAGjC,UACE,SAAS,QAAQ,KACjB,WAAW,WAAW,KACtB,WAAW,QAAQ,OAAO,KAC1B,WAAW,QAAQ,OAAO,GAC1B;AACA,eAAO;;AAET,eAAS;AAGT,UACE,SAAS,QAAQ,KACjB,WAAW,WAAW,KACtB,WAAW,QAAQ,KAAK,MACxB,SAAS,QAAQ,IAAI,WAAW,QAAQ,IACxC;AACA,eAAO;;AAGT,aAAO,WAAW,MAAM,QAAQ,GAAG,QAAQ,IAAI,WAAW,QAAQ;;AAGpE,YAAQ,qBAAqB,SAAS,WAAiB;AACrD,UAAM,IAAI,OAAO,MAAM,IAAI;AAC3B,UAAM,IAAI,OAAO,MAAM,IAAI;AAE3B,UAAM,SAAS,UAAU;AACzB,UAAI,QAAQ;AAGZ,UAAI,UAAU,aAAa,IAAM;AAC/B,eAAO;;AAIT,UAAI,UAAU,UAAU;AACxB,UAAI,UAAU,KAAM;AAClB,iBAAS,UAAU;AACnB,YAAI,QAAQ,QAAQ;AAClB,iBAAO;;;AAKX,UAAI,UAAU,aAAa,GAAM;AAC/B,eAAO;;AAIT,UAAI,OAAO,UAAU;AACrB,UAAI,OAAO,KAAM;AACf,kBAAU,OAAO;AACjB,YAAI,QAAQ,UAAU,QAAQ;AAC5B,iBAAO;;AAET,eAAO,UAAU,KAAK,UAAU,WAAW,GAAM,SAAS,GAAG,WAAW;AAAE;AAC1E,aAAK,OAAO,GAAG,UAAU,GAAG,SAAS,GAAG,WAAW;AAAG,iBAAQ,SAAQ,KAAK,UAAU;;AAEvF,UAAI,OAAO,SAAS,OAAO;AACzB,eAAO;;AAET,UAAI,SAAS;AACb,eAAS;AAGT,UAAI,UAAU,aAAa,GAAM;AAC/B,eAAO;;AAIT,UAAI,OAAO,UAAU;AACrB,UAAI,OAAO,KAAM;AACf,kBAAU,OAAO;AACjB,YAAI,QAAQ,UAAU,QAAQ;AAC5B,iBAAO;;AAET,eAAO,UAAU,KAAK,UAAU,WAAW,GAAM,SAAS,GAAG,WAAW;AAAE;AAC1E,aAAK,OAAO,GAAG,UAAU,GAAG,SAAS,GAAG,WAAW;AAAG,iBAAQ,SAAQ,KAAK,UAAU;;AAEvF,UAAI,OAAO,SAAS,OAAO;AACzB,eAAO;;AAET,UAAI,SAAS;AACb,eAAS;AAGT,aAAO,OAAO,KAAK,UAAU,YAAY,GAAM,QAAQ,GAAG,UAAU;AAAE;AAEtE,UAAI,OAAO,IAAI;AACb,eAAO;;AAET,UAAM,SAAS,UAAU,MAAM,QAAQ,SAAS;AAChD,aAAO,KAAK,GAAG,KAAK,OAAO;AAG3B,aAAO,OAAO,KAAK,UAAU,YAAY,GAAM,QAAQ,GAAG,UAAU;AAAE;AAEtE,UAAI,OAAO,IAAI;AACb,eAAO;;AAET,UAAM,SAAS,UAAU,MAAM,QAAQ,SAAS;AAChD,aAAO,KAAK,GAAG,KAAK,OAAO;AAE3B,aAAO,EAAE,GAAM;;;;;;;;;;;;AC3oBjB,QAAM,YAAY;AAClB,QAAM,cAAc;AACpB,QAAM,MAAM;AA8BC,YAAA,mBAAmB,SAAS,YAAkB;AAEzD,UAAI,WAAW,WAAW,IAAI;AAC5B,eAAO;;AAGT,aAAO,UAAU,iBAAiB,WAAW,KAAK;;AAUvC,YAAA,mBAAmB,SAAS,YAAoB,YAAoB;AAE/E,UAAI,WAAW,WAAW,IAAI;AAC5B,cAAM,IAAI,WAAW;;AAGvB,UAAM,YAAY,YAAY,iBAAiB,YAAY;AAE3D,aAAO,IAAI,iBAAiB,YAAY,WAAW;;AASxC,YAAA,mBAAmB,SAAS,YAAkB;AAGzD,mBAAa,IAAI,iBAAiB;AAClC,UAAI,eAAe,QAAQ,WAAW,WAAW,MAAM,QAAA,iBAAiB,aAAa;AACnF,eAAO;;AAGT,YAAM,IAAI,MAAM;;AASL,YAAA,mBAAmB,SAAS,YAAkB;AACzD,aAAO,OAAO,KAAK,UAAU,iBAAiB,WAAW,KAAK;;AASnD,YAAA,uBAAuB,SAAS,YAAkB;AAC7D,UAAI,WAAW,WAAW,IAAI;AAC5B,cAAM,IAAI,MAAM;;AAGlB,aAAO,OAAO,KAAK,YAAY,qBAAqB,WAAW,KAAK;;AAUzD,YAAA,qBAAqB,SAAS,YAAoB,OAAa;AAC1E,aAAO,OAAO,KAAK,UAAU,mBAAmB,WAAW,KAAK,aAAa;;AAUlE,YAAA,qBAAqB,SAAS,YAAoB,OAAa;AAC1E,aAAO,OAAO,KACZ,UAAU,mBAAmB,WAAW,KAAK,aAAa,WAAW,KAAK;;AAWjE,YAAA,kBAAkB,SAAS,YAAoB,YAAoB;AAC9E,aAAO,OAAO,KAAK,UAAU,gBAAgB,WAAW,KAAK,aAAa;;AAU/D,YAAA,mBAAmB,SAAS,WAAmB,YAAoB;AAC9E,aAAO,OAAO,KAAK,UAAU,iBAAiB,WAAW,KAAK,YAAY;;AAS/D,YAAA,kBAAkB,SAAS,WAAiB;AAEvD,UAAI,UAAU,WAAW,MAAM,UAAU,WAAW,IAAI;AACtD,eAAO;;AAGT,aAAO,UAAU,gBAAgB,WAAW,KAAK;;AAWtC,YAAA,oBAAoB,SAC/B,WACA,OACA,YAAoB;AAEpB,aAAO,OAAO,KACZ,UAAU,kBAAkB,WAAW,KAAK,YAAY,WAAW,KAAK,QAAQ;;AAYvE,YAAA,oBAAoB,SAC/B,WACA,OACA,YAAoB;AAEpB,aAAO,OAAO,KACZ,UAAU,kBAAkB,WAAW,KAAK,YAAY,WAAW,KAAK,QAAQ;;AAWvE,YAAA,mBAAmB,SAAS,YAAsB,YAAoB;AACjF,UAAM,OAAqB;AAC3B,iBAAW,QAAQ,SAAC,WAAiB;AACnC,aAAK,KAAK,WAAW,KAAK;;AAG5B,aAAO,OAAO,KAAK,UAAU,iBAAiB,MAAM;;AASzC,YAAA,qBAAqB,SAAS,WAAiB;AAC1D,aAAO,OAAO,KAAK,UAAU,mBAAmB,WAAW,KAAK;;AASrD,YAAA,kBAAkB,SAAS,WAAiB;AACvD,aAAO,OAAO,KAAK,UAAU,gBAAgB,WAAW,KAAK;;AASlD,YAAA,kBAAkB,SAAS,WAAiB;AACvD,aAAO,OAAO,KAAK,UAAU,gBAAgB,WAAW,KAAK;;AASlD,YAAA,qBAAqB,SAAS,WAAiB;AAI1D,UAAI,UAAU,WAAW,GAAG;AAC1B,cAAM,IAAI,WAAW;;AAGvB,UAAM,SAAS,IAAI,mBAAmB;AACtC,UAAI,WAAW,MAAM;AACnB,cAAM,IAAI,MAAM;;AAGlB,aAAO,YAAY,gBAAgB;;AAWxB,YAAA,OAAO,SAClB,SACA,YACA,SAAqB;AAErB,UAAI,YAAY,MAAM;AACpB,cAAM,IAAI,UAAU;;AAGtB,UAAI,cAAyC;AAE7C,UAAI,SAAS;AACX,sBAAc;AAEd,YAAI,QAAQ,SAAS,MAAM;AAEzB,gBAAM,IAAI,UAAU;;AAGtB,YAAI,QAAQ,MAAM;AAChB,cAAI,QAAQ,KAAK,UAAU,IAAI;AAC7B,kBAAM,IAAI,WAAW;;AAGvB,sBAAY,OAAO,IAAI,WAAW,QAAQ;;AAG5C,YAAI,QAAQ,YAAY,MAAM;AAC5B,gBAAM,IAAI,UAAU;;AAGtB,YAAI,QAAQ,SAAS;AAEnB,sBAAY,UAAU,SACpB,UACA,aACA,MACA,MACA,SAAe;AAEf,gBAAM,aAA4B,QAAQ,OAAO,OAAO,KAAK,QAAQ;AACrE,gBAAM,aAA4B,QAAQ,OAAO,OAAO,KAAK,QAAQ;AAErE,gBAAI,SAAiB,OAAO,KAAK;AAEjC,gBAAI,QAAQ,SAAS;AACnB,uBAAS,QAAQ,QACf,OAAO,KAAK,WACZ,OAAO,KAAK,cACZ,YACA,YACA;;AAIJ,mBAAO,IAAI,WAAW;;;;AAK5B,UAAM,MAAM,UAAU,UACpB,WAAW,KAAK,UAChB,WAAW,KAAK,aAChB;AAGF,aAAO;QACL,WAAW,OAAO,KAAK,IAAI;QAC3B,UAAU,IAAI;;;AAYL,YAAA,SAAS,SAAS,SAAiB,WAAmB,WAAiB;AAClF,aAAO,UAAU,YAAY,WAAW,KAAK,YAAY,WAAW,KAAK,UAAU;;AAYxE,YAAA,UAAU,SACrB,SACA,WACA,OACA,YAAoB;AAEpB,aAAO,OAAO,KACZ,UAAU,aAAa,WAAW,KAAK,YAAY,OAAO,WAAW,KAAK,UAAU;;AAW3E,YAAA,OAAO,SAAS,WAAmB,YAAkB;AAEhE,aAAO,OAAO,KAAK,UAAU,KAAK,WAAW,KAAK,YAAY,WAAW,KAAK,aAAa;;AAGhF,YAAA,aAAa,SACxB,WACA,YACA,YAAoB;AAKpB,UAAI,UAAU,WAAW,MAAM,UAAU,WAAW,IAAI;AACtD,cAAM,IAAI,WAAW;;AAIvB,UAAI,WAAW,WAAW,IAAI;AAC5B,cAAM,IAAI,WAAW;;AAGvB,aAAO,OAAO,KACZ,YAAY,WAAW,WAAW,KAAK,YAAY,WAAW,KAAK,aAAa;;;;;;ACvZpF;AAAA;AAAA;AAAA;AAEA,QAAI,gBAAgB;AACpB,QAAI,kBAAiB;AAOrB,uBAAmB,OAAO;AACxB,UAAI,IAAI;AAER,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,IAAI,MAAM,4EAA4E,OAAO,IAAI;AAAA;AAGzG,UAAI,EAAE,SAAS,GAAG;AAChB,YAAI,MAAM;AAAA;AAGZ,aAAO;AAAA;AAQT,sBAAkB,GAAG;AACnB,UAAI,MAAM,EAAE,SAAS;AAErB,aAAO,OAAO;AAAA;AAQhB,yBAAqB,GAAG;AACtB,UAAI,MAAM,SAAS;AAEnB,aAAO,IAAI,OAAO,UAAU,IAAI,MAAM,KAAK;AAAA;AAQ7C,2BAAuB,KAAK;AAC1B,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,+GAAkH,OAAO,MAAM;AAAA;AAGjJ,aAAO,OAAO,WAAW,KAAK;AAAA;AAYhC,gCAA4B,UAAU,QAAQ,MAAM;AAClD,UAAI,MAAM,QAAQ,cAAc,MAAM;AACpC,cAAM,IAAI,MAAM,+FAAkG,OAAO,WAAW;AAAA;AAEtI,UAAI,MAAM,QAAQ,YAAY,MAAM;AAClC,cAAM,IAAI,MAAM,6FAAgG,OAAO,SAAS;AAAA;AAGlI,aAAO,OAAO,QAAQ,SAAS,UAAU,SAAS,SAAU,OAAO;AACjE,eAAO,SAAS,QAAQ,UAAU;AAAA;AAAA;AAWtC,oBAAgB,KAAK;AACnB,UAAI,cAAc,IAAI,OAAO,UAAU,gBAAe,KAAK,QAAQ,YAAY,MAAM;AAErF,aAAO,YAAY,SAAS;AAAA;AAU9B,qBAAiB,KAAK;AACpB,UAAI,MAAM;AACV,UAAI,IAAI,GACJ,IAAI,IAAI;AAEZ,UAAI,IAAI,UAAU,GAAG,OAAO,MAAM;AAChC,YAAI;AAAA;AAGN,aAAO,IAAI,GAAG,KAAK,GAAG;AACpB,YAAI,OAAO,SAAS,IAAI,OAAO,GAAG,IAAI;AACtC,eAAO,OAAO,aAAa;AAAA;AAG7B,aAAO;AAAA;AAWT,sBAAkB,aAAa;AAC7B,UAAI,MAAM,IAAI,OAAO,aAAa;AAElC,aAAO,OAAO,UAAU,IAAI,SAAS,QAAQ,QAAQ,YAAY;AAAA;AAWnE,uBAAmB,aAAa;AAC9B,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAE3C,YAAI,OAAO,YAAY,WAAW;AAClC,YAAI,IAAI,KAAK,SAAS;AACtB,eAAO,EAAE,SAAS,IAAI,MAAM,IAAI;AAAA;AAGlC,aAAO,OAAO;AAAA;AAYhB,qBAAiB,QAAQ,KAAK,YAAY;AACxC,UAAI,CAAC,MAAM,QAAQ,SAAS;AAC1B,cAAM,IAAI,MAAM,8EAAiF,OAAO,SAAS;AAAA;AAEnH,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,4EAA+E,OAAO,MAAM;AAAA;AAG9G,UAAI,SAAS;AAEb,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAEtC,YAAI,QAAQ,OAAO,GAAG;AACtB,YAAI,cAAc,CAAC,OAAO;AACxB,kBAAQ;AAAA,mBACC,OAAO,UAAU,UAAU;AACpC,gBAAM,IAAI,MAAM;AAAA;AAElB,eAAO,KAAK;AAAA;AAGd,aAAO;AAAA;AAWT,yBAAqB,OAAO,QAAQ;AAClC,UAAI,OAAO,UAAU,YAAY,CAAC,MAAM,MAAM,qBAAqB;AACjE,eAAO;AAAA;AAGT,UAAI,UAAU,MAAM,WAAW,IAAI,IAAI,QAAQ;AAC7C,eAAO;AAAA;AAGT,aAAO;AAAA;AAGT,WAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,gBAAgB;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;;;;;;;;;AC1NF,QAAA,KAAA;AAKa,YAAA,cAAkB,IAAI,GACjC,oEACA;AAMW,YAAA,aAAiB,IAAI,GAChC,qEACA;AAMW,YAAA,mBACX;AAKW,YAAA,iBAAyB,OAAO,KAAK,QAAA,kBAAkB;AAKvD,YAAA,wBACX;AAKW,YAAA,sBAA8B,OAAO,KAAK,QAAA,uBAAuB;AAKjE,YAAA,kBACX;AAKW,YAAA,gBAAwB,OAAO,KAAK,QAAA,iBAAiB;;;;;;;;;;;ACjDlE,QAAM,YAAY;AAClB,QAAA,KAAA;AAMa,YAAA,QAAQ,SAAS,OAAa;AACzC,aAAO,OAAO,YAAY,OAAO,KAAK;;AAW3B,YAAA,gBAAgB,SAAS,KAAU,QAAgB,OAAsB;AAAtB,UAAA,UAAA,QAAA;AAAA,gBAAA;;AAC9D,UAAM,MAAM,QAAA,MAAM;AAClB,YAAM,QAAA,SAAS;AACf,UAAI,OAAO;AACT,YAAI,IAAI,SAAS,QAAQ;AACvB,cAAI,KAAK;AACT,iBAAO;;AAET,eAAO,IAAI,MAAM,GAAG;aACf;AACL,YAAI,IAAI,SAAS,QAAQ;AACvB,cAAI,KAAK,KAAK,SAAS,IAAI;AAC3B,iBAAO;;AAET,eAAO,IAAI,MAAM,CAAC;;;AAGT,YAAA,YAAY,QAAA;AASZ,YAAA,iBAAiB,SAAS,KAAU,QAAc;AAC7D,aAAO,QAAA,UAAU,KAAK,QAAQ;;AAQnB,YAAA,QAAQ,SAAS,GAAM;AAClC,UAAI,UAAU,eAAe;AAC7B,UAAI,QAAQ,EAAE;AACd,aAAO,EAAE,SAAS,KAAK,MAAM,eAAe,KAAK;AAC/C,YAAI,EAAE,MAAM;AACZ,gBAAQ,EAAE;;AAEZ,aAAO;;AAEI,YAAA,aAAa,QAAA;AAMb,YAAA,WAAW,SAAS,GAAM;AACrC,UAAI,CAAC,OAAO,SAAS,IAAI;AACvB,YAAI,MAAM,QAAQ,IAAI;AACpB,cAAI,OAAO,KAAK;mBACP,OAAO,MAAM,UAAU;AAChC,cAAI,UAAU,YAAY,IAAI;AAC5B,gBAAI,OAAO,KAAK,UAAU,UAAU,UAAU,eAAe,KAAK;iBAC7D;AACL,kBAAM,IAAI,MACR,gHAA8G;;mBAGzG,OAAO,MAAM,UAAU;AAChC,cAAI,UAAU,YAAY;mBACjB,MAAM,QAAQ,MAAM,QAAW;AACxC,cAAI,OAAO,YAAY;mBACd,GAAG,KAAK,IAAI;AACrB,cAAI,EAAE,YAAY;mBACT,EAAE,SAAS;AAEpB,cAAI,OAAO,KAAK,EAAE;eACb;AACL,gBAAM,IAAI,MAAM;;;AAGpB,aAAO;;AAQI,YAAA,cAAc,SAAS,KAAW;AAC7C,aAAO,IAAI,GAAG,QAAA,SAAS,MAAM;;AAOlB,YAAA,cAAc,SAAS,KAAW;AAC7C,YAAM,QAAA,SAAS;AACf,aAAO,OAAO,IAAI,SAAS;;AAOhB,YAAA,aAAa,SAAS,KAAW;AAC5C,aAAO,IAAI,GAAG,KAAK,SAAS;;AAOjB,YAAA,aAAa,SAAS,KAAO;AACxC,aAAO,OAAO,KAAK,IAAI,OAAO,KAAK;;AAMxB,YAAA,eAAe,SAAS,KAAW;AAC9C,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO;;AAGT,aAAO,UAAU,cAAc,OAAO,MAAM,OAAO;;AAQxC,YAAA,WAAW,SAAS,IAAO;AACtC,UAAI,OAAO,SAAS,KAAK;AACvB,eAAO,OAAK,GAAG,SAAS;iBACf,cAAc,OAAO;AAC9B,YAAM,QAAQ;AACd,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,gBAAM,KAAK,QAAA,SAAS,GAAG;;AAEzB,eAAO;;;;;;;;;;;;;AC3JL,QAAA,KAAuD;AAAvD,QAAE,YAAS,GAAA;AAAX,QAAa,YAAS,GAAA;AAAtB,QAAmC,OAAI,GAAA;AAAvC,QAAyC,YAAS,GAAA;AACxD,QAAM,aAAa;AACnB,QAAM,YAAY;AAClB,QAAA,MAAA;AACA,QAAA,UAAA;AAQa,YAAA,SAAS,SAAS,GAAQ,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;;AACrC,UAAI,OAAO,MAAM,YAAY,CAAC,UAAU,YAAY,IAAI;AACtD,YAAI,OAAO,KAAK,GAAG;aACd;AACL,YAAI,QAAA,SAAS;;AAGf,UAAI,CAAC;AAAM,eAAO;AAElB,cAAQ;aACD,KAAK;AACR,iBAAO,UAAU;;aAEd,KAAK;AACR,iBAAO,KAAK;;aAET,KAAK;AACR,iBAAO,UAAU;;aAEd,KAAK;AACR,iBAAO,UAAU;;iBAEV;AACP,gBAAM,IAAI,MAAM,6BAA2B;;;;AASpC,YAAA,YAAY,SAAS,GAAM;AACtC,aAAO,QAAA,OAAO;;AAOH,YAAA,SAAS,SAAS,GAAM;AACnC,UAAI,QAAA,SAAS;AACb,aAAO,WAAW,UACf,OAAO,GACP;;AAQQ,YAAA,YAAY,SAAS,GAAQ,QAAe;AACvD,UAAI,QAAA,SAAS;AACb,UAAM,OAAO,WAAW,UACrB,OAAO,GACP;AACH,UAAI,WAAW,MAAM;AACnB,eAAO,QAAA,UAAU,MAAM;aAClB;AACL,eAAO;;;AAQE,YAAA,UAAU,SAAS,GAAY;AAC1C,aAAO,QAAA,OAAO,IAAI,OAAO;;;;;;;;;;;;ACjF3B,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAM,YAAY;AAClB,QAAA,KAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AAKa,YAAA,cAAc,WAAA;AACzB,UAAM,gBAAgB;AACtB,UAAM,OAAO,QAAA,MAAM;AACnB,aAAO,QAAA,YAAY;;AAMR,YAAA,iBAAiB,SAAS,SAAe;AACpD,aAAO,sBAAsB,KAAK;;AAMvB,YAAA,gBAAgB,SAAS,SAAe;AACnD,UAAM,WAAW,QAAA;AACjB,aAAO,aAAa,QAAA,aAAa;;AAatB,YAAA,oBAAoB,SAAS,SAAiB,gBAAuB;AAChF,gBAAU,UAAU,eAAe,SAAS;AAE5C,UAAM,SAAS,mBAAmB,SAAY,eAAe,aAAa,OAAO;AAEjF,UAAM,OAAO,OAAA,OAAO,SAAS,SAAS,SAAS;AAC/C,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,SAAS,KAAK,IAAI,OAAO,GAAG;AAC9B,iBAAO,QAAQ,GAAG;eACb;AACL,iBAAO,QAAQ;;;AAInB,aAAO;;AAQI,YAAA,yBAAyB,SAAS,SAAiB,gBAAuB;AACrF,aAAO,QAAA,eAAe,YAAY,QAAA,kBAAkB,SAAS,oBAAoB;;AAQtE,YAAA,kBAAkB,SAAS,MAAc,OAAa;AACjE,aAAO,QAAA,SAAS;AAChB,UAAM,UAAU,IAAI,GAAG;AAEvB,UAAI,QAAQ,UAAU;AAGpB,eAAO,OAAA,QAAQ,CAAC,MAAM,OAAO,MAAM;;AAIrC,aAAO,OAAA,QAAQ,CAAC,MAAM,OAAO,KAAK,QAAQ,aAAa,MAAM;;AASlD,YAAA,mBAAmB,SAC9B,MACA,MACA,UAAyB;AAEzB,UAAM,UAAU,QAAA,SAAS;AACzB,UAAM,UAAU,QAAA,SAAS;AACzB,UAAM,cAAc,QAAA,SAAS;AAE7B,aAAO,QAAQ,WAAW;AAC1B,aAAO,QAAQ,WAAW;AAE1B,UAAM,UAAU,OAAA,UACd,OAAO,OAAO,CAAC,OAAO,KAAK,MAAM,QAAQ,SAAS,SAAS,OAAA,UAAU;AAGvE,aAAO,QAAQ,MAAM;;AAMV,YAAA,gBAAgB,SAAS,SAAwB;AAC5D,UAAM,IAAI,QAAA,MAAM;AAChB,aAAO,EAAE,WAAW,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM;;AAMnC,YAAA,iBAAiB,SAAS,YAAkB;AACvD,aAAO,UAAU,iBAAiB;;AASvB,YAAA,gBAAgB,SAAS,WAAmB,UAAyB;AAAzB,UAAA,aAAA,QAAA;AAAA,mBAAA;;AACvD,UAAI,UAAU,WAAW,IAAI;AAE3B,eAAO,UAAU,gBAAgB,OAAO,OAAO,CAAC,OAAO,KAAK,CAAC,KAAK;;AAGpE,UAAI,CAAC,UAAU;AACb,eAAO;;AAGT,aAAO,UAAU,gBAAgB;;AAStB,YAAA,eAAe,SAAS,QAAgB,UAAyB;AAAzB,UAAA,aAAA,QAAA;AAAA,mBAAA;;AACnD,eAAS,QAAA,SAAS;AAClB,UAAI,YAAY,OAAO,WAAW,IAAI;AACpC,iBAAS,UAAU,iBAAiB,QAAQ,OAAO,MAAM;;AAE3D,aAAO,OAAO,WAAW;AAEzB,aAAO,OAAA,OAAO,QAAQ,MAAM;;AAEjB,YAAA,kBAAkB,QAAA;AAMlB,YAAA,mBAAmB,SAAS,YAAkB;AACzD,aAAO,QAAA,gBAAgB,QAAA,gBAAgB;;AAO5B,YAAA,kBAAkB,SAAS,YAAkB;AACxD,mBAAa,QAAA,SAAS;AAEtB,aAAO,UAAU,gBAAgB,YAAY,OAAO,MAAM;;AAM/C,YAAA,eAAe,SAAS,WAAiB;AACpD,kBAAY,QAAA,SAAS;AACrB,UAAI,UAAU,WAAW,IAAI;AAC3B,oBAAY,UAAU,iBAAiB,WAAW,OAAO,MAAM;;AAEjE,aAAO;;;;;;;;;;;;AC9LT,QAAM,YAAY;AAClB,QAAA,KAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AAWa,YAAA,SAAS,SACpB,SACA,YACA,SAAgB;AAEhB,UAAM,MAAM,UAAU,KAAK,SAAS;AACpC,UAAM,WAAmB,IAAI;AAE7B,UAAM,MAAM;QACV,GAAG,IAAI,UAAU,MAAM,GAAG;QAC1B,GAAG,IAAI,UAAU,MAAM,IAAI;QAC3B,GAAG,UAAU,WAAY,WAAU,IAAI,MAAM,WAAW;;AAG1D,aAAO;;AAOI,YAAA,YAAY,SACvB,SACA,GACA,GACA,GACA,SAAgB;AAEhB,UAAM,YAAY,OAAO,OAAO,CAAC,QAAA,UAAU,GAAG,KAAK,QAAA,UAAU,GAAG,MAAM;AACtE,UAAM,WAAW,qBAAqB,GAAG;AACzC,UAAI,CAAC,mBAAmB,WAAW;AACjC,cAAM,IAAI,MAAM;;AAElB,UAAM,eAAe,UAAU,QAAQ,SAAS,WAAW;AAC3D,aAAO,UAAU,iBAAiB,cAAc,OAAO,MAAM;;AAOlD,YAAA,WAAW,SAAS,GAAW,GAAW,GAAW,SAAgB;AAChF,UAAM,WAAW,qBAAqB,GAAG;AACzC,UAAI,CAAC,mBAAmB,WAAW;AACjC,cAAM,IAAI,MAAM;;AAIlB,aAAO,QAAA,YAAY,OAAO,OAAO,CAAC,QAAA,cAAc,GAAG,KAAK,QAAA,cAAc,GAAG,KAAK,QAAA,SAAS;;AAO5E,YAAA,aAAa,SAAS,KAAW;AAC5C,UAAM,MAAc,QAAA,SAAS;AAG7B,UAAI,IAAI,WAAW,IAAI;AACrB,cAAM,IAAI,MAAM;;AAGlB,UAAI,IAAI,IAAI;AAEZ,UAAI,IAAI,IAAI;AACV,aAAK;;AAGP,aAAO;QACL;QACA,GAAG,IAAI,MAAM,GAAG;QAChB,GAAG,IAAI,MAAM,IAAI;;;AAQR,YAAA,mBAAmB,SAC9B,GACA,GACA,GACA,kBACA,SAAgB;AADhB,UAAA,qBAAA,QAAA;AAAA,2BAAA;;AAGA,UAAM,oBAAoB,IAAI,GAC5B,oEACA;AAEF,UAAM,cAAc,IAAI,GAAG,oEAAoE;AAE/F,UAAI,EAAE,WAAW,MAAM,EAAE,WAAW,IAAI;AACtC,eAAO;;AAGT,UAAI,CAAC,mBAAmB,qBAAqB,GAAG,WAAW;AACzD,eAAO;;AAGT,UAAM,MAAU,IAAI,GAAG;AACvB,UAAM,MAAU,IAAI,GAAG;AAEvB,UAAI,IAAI,YAAY,IAAI,GAAG,gBAAgB,IAAI,YAAY,IAAI,GAAG,cAAc;AAC9E,eAAO;;AAGT,UAAI,oBAAoB,IAAI,IAAI,uBAAuB,GAAG;AACxD,eAAO;;AAGT,aAAO;;AASI,YAAA,sBAAsB,SAAS,SAAe;AACzD,UAAM,SAAS,OAAO,KACpB,gCAAmC,QAAQ,OAAO,YAClD;AAEF,aAAO,OAAA,OAAO,OAAO,OAAO,CAAC,QAAQ;;AAGvC,kCAA8B,GAAW,SAAgB;AACvD,aAAO,UAAU,IAAK,KAAI,UAAU,MAAM,IAAI;;AAGhD,gCAA4B,UAAgB;AAC1C,aAAO,aAAa,KAAK,aAAa;;;;;;;;;;;;ACpJxC,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAA,MAAA;AACA,QAAA,UAAA;AAaa,YAAA,mBAAmB,SAAS,MAAW,QAAa,MAAS;AACxE,WAAK,MAAM;AACX,WAAK,UAAU;AAGf,WAAK,SAAS,SAAS,OAAsB;AAAtB,YAAA,UAAA,QAAA;AAAA,kBAAA;;AACrB,YAAI,OAAO;AAET,cAAM,QAAY;AAClB,eAAK,QAAQ,QAAQ,SAAC,OAAa;AACjC,kBAAI,SAAS,OAAK,KAAK,OAAO,SAAS;;AAEzC,iBAAO;;AAET,eAAO,QAAA,SAAS,KAAK;;AAGvB,WAAK,YAAY,qBAAkB;AACjC,eAAO,IAAI,OAAO,KAAK;;AAGzB,aAAO,QAAQ,SAAC,OAAY,GAAS;AACnC,aAAK,QAAQ,KAAK,MAAM;AACxB,0BAAe;AACb,iBAAO,KAAK,IAAI;;AAElB,wBAAgB,GAAM;AACpB,cAAI,QAAA,SAAS;AAEb,cAAI,EAAE,SAAS,WAAW,QAAQ,CAAC,MAAM,WAAW;AAClD,gBAAI,OAAO,YAAY;;AAGzB,cAAI,MAAM,aAAa,MAAM,QAAQ;AACnC,gBAAI,QAAA,WAAW;AACf,mBACE,MAAM,UAAU,EAAE,QAClB,eAAa,MAAM,OAAI,yBAAuB,MAAM,SAAM;qBAEnD,CAAE,OAAM,aAAa,EAAE,WAAW,MAAM,MAAM,QAAQ;AAC/D,mBACE,MAAM,WAAW,EAAE,QACnB,eAAa,MAAM,OAAI,+BAA6B,MAAM;;AAI9D,eAAK,IAAI,KAAK;;AAGhB,eAAO,eAAe,MAAM,MAAM,MAAM;UACtC,YAAY;UACZ,cAAc;UACd,KAAK;UACL,KAAK;;AAGP,YAAI,MAAM,SAAS;AACjB,eAAK,MAAM,QAAQ,MAAM;;AAI3B,YAAI,MAAM,OAAO;AACf,iBAAO,eAAe,MAAM,MAAM,OAAO;YACvC,YAAY;YACZ,cAAc;YACd,KAAK;YACL,KAAK;;;;AAMX,UAAI,MAAM;AACR,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO,OAAO,KAAK,UAAU,eAAe,OAAO;;AAGrD,YAAI,OAAO,SAAS,OAAO;AACzB,iBAAO,IAAI,OAAO;;AAGpB,YAAI,MAAM,QAAQ,OAAO;AACvB,cAAI,KAAK,SAAS,KAAK,QAAQ,QAAQ;AACrC,kBAAM,IAAI,MAAM;;AAIlB,eAAK,QAAQ,SAAC,GAAG,GAAC;AAChB,iBAAK,KAAK,QAAQ,MAAM,QAAA,SAAS;;mBAE1B,OAAO,SAAS,UAAU;AACnC,cAAM,SAAO,OAAO,KAAK;AACzB,iBAAO,QAAQ,SAAC,OAAU;AACxB,gBAAI,OAAK,QAAQ,MAAM,UAAU;AAAI,mBAAK,MAAM,QAAQ,KAAK,MAAM;AACnE,gBAAI,OAAK,QAAQ,MAAM,WAAW;AAAI,mBAAK,MAAM,SAAS,KAAK,MAAM;;eAElE;AACL,gBAAM,IAAI,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHtB,QAAM,YAAY;AAmBT,YAAA,YAAA;AAlBT,QAAM,YAAY;AAClB,QAAA,KAAA;AAOS,YAAA,KAAA;AANT,QAAA,MAAA;AAWS,YAAA,MAAA;AAVT,WAAO,OAAO,SAAS;AAoBvB,iBAAA,qBAAA;AAKA,iBAAA,mBAAA;AAKA,iBAAA,gBAAA;AAKA,iBAAA,qBAAA;AAKA,iBAAA,iBAAA;AAKA,iBAAA,kBAAA;;;;;;;;;;;ACjDA,QAAA,oBAAA;AAUA,QAAA,eAAA;AAeA,2BAA8B,WAAmB,cAAoB;AACnE,UAAI,cAAc,MAAM,CAAC,gBAAgB,KAAK,YAAY;AACxD,cAAM,IAAI,MACR,gDAAgD;;AAIpD,UAAI,eAAe,GAAG;AACpB,cAAM,IAAI,MACR,4DAA4D;;AAIhE,aAAO,OAAO,UAAU,SAAS,KAAK,WAAW,cAAc;;AAbjE,YAAA,gBAAA;AAsBA,uBAA0B,OAAK;AAC7B,aAAO,UAAU,QAAQ,UAAU;;AADrC,YAAA,YAAA;AAWA,4BAA+B,OAAc;AAC3C,aAAO,OAAO,UAAU,YAAY,CAAC,aAAA,YAAY,SAC7C,OAAO,KAAK,SACZ,kBAAA,SAAS;;AAHf,YAAA,iBAAA;AAcA,uBAA0B,GAAW,GAAW,GAAS;AACvD,YAAM,OAAO,kBAAA,WAAW;AACxB,YAAM,OAAO,kBAAA,WAAW;AACxB,YAAM,OAAO,kBAAA,YAAY;AACzB,YAAM,OAAO,cAAc,kBAAA,WAAW,MAAM,SAAS,QAAQ;AAC7D,YAAM,OAAO,cAAc,kBAAA,WAAW,MAAM,SAAS,QAAQ;AAC7D,YAAM,OAAO,aAAA,eAAe,aAAA,SAAS;AACrC,aAAO,kBAAA,aAAa,KAAK,OAAO,MAAM;;AAPxC,YAAA,YAAA;AAiBA,8BACE,aACA,WAAiB;AAEjB,YAAM,YAAY,kBAAA,WAAW;AAC7B,aAAO,kBAAA,UAAU,aAAa,UAAU,GAAG,UAAU,GAAG,UAAU;;AALpE,YAAA,mBAAA;AAcA,uBAA0B,OAAsB;AAC9C,UAAI,CAAC,OAAO;AACV,eAAO;;AAGT,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,SAAS,kBAAA,SAAS;AACxB,gBAAQ,kBAAA,YAAY;;AAGtB,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAI,MAAM;AACV,eAAO,aAAa,OAAO,UAAU;AACrC,cAAM,IAAI,MAAM;;AAGlB,aAAO,kBAAA,aAAa,MAAM;;AAhB5B,YAAA,YAAA;;;;;;;;;;;ACvGA,QAAA,oBAAA;AAQA,QAAA,UAAA;AAkBA,2BAA6B,EAC3B,YACA,QAID;AACC,UAAI,QAAA,UAAU,OAAO;AACnB,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,aAAa;AAChC,cAAM,IAAI,MAAM;;AAGlB,YAAM,UAAU,QAAA,eAAe;AAC/B,YAAM,UAAU,kBAAA,oBAAoB;AACpC,YAAM,MAAM,kBAAA,OAAO,SAAS;AAC5B,YAAM,aAAa,QAAA,UAAU,kBAAA,SAAS,IAAI,IAAI,IAAI,GAAG,IAAI;AACzD,aAAO;;AAjBT,YAAA,eAAA;AA6BA,sCAAyC,EACvC,MACA,aAID;AACC,UAAI,QAAA,UAAU,OAAO;AACnB,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,YAAY;AAC/B,cAAM,IAAI,MAAM;;AAGlB,YAAM,YAAY,gBAAgB,MAAM;AACxC,YAAM,SAAS,kBAAA,gBAAgB;AAC/B,YAAM,YAAY,kBAAA,YAAY;AAC9B,aAAO;;AAhBT,YAAA,2BAAA;AA4BA,8BAAiC,EAC/B,MACA,aAID;AACC,UAAI,QAAA,UAAU,OAAO;AACnB,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,YAAY;AAC/B,cAAM,IAAI,MAAM;;AAGlB,YAAM,YAAY,gBAAgB,MAAM;AACxC,aAAO,KAAK,UAAU,SAAS;;AAdjC,YAAA,mBAAA;AAwBA,6BAAyB,SAAkB,WAAiB;AAC1D,YAAM,cAAc,kBAAA,oBAAoB,QAAA,eAAe;AACvD,aAAO,QAAA,iBAAiB,aAAa;;;;;;AC7GvC;AAAA;AAAA;AAAA,IAAC,UAAU,SAAQ,UAAS;AAC1B;AAGA,sBAAiB,KAAK,KAAK;AACzB,YAAI,CAAC;AAAK,gBAAM,IAAI,MAAM,OAAO;AAAA;AAKnC,wBAAmB,MAAM,WAAW;AAClC,aAAK,SAAS;AACd,YAAI,WAAW,WAAY;AAAA;AAC3B,iBAAS,YAAY,UAAU;AAC/B,aAAK,YAAY,IAAI;AACrB,aAAK,UAAU,cAAc;AAAA;AAK/B,kBAAa,QAAQ,MAAM,QAAQ;AACjC,YAAI,GAAG,KAAK,SAAS;AACnB,iBAAO;AAAA;AAGT,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,aAAK,SAAS;AAGd,aAAK,MAAM;AAEX,YAAI,WAAW,MAAM;AACnB,cAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,qBAAS;AACT,mBAAO;AAAA;AAGT,eAAK,MAAM,UAAU,GAAG,QAAQ,IAAI,UAAU;AAAA;AAAA;AAGlD,UAAI,OAAO,YAAW,UAAU;AAC9B,gBAAO,UAAU;AAAA,aACZ;AACL,iBAAQ,KAAK;AAAA;AAGf,SAAG,KAAK;AACR,SAAG,WAAW;AAEd,UAAI;AACJ,UAAI;AACF,YAAI,OAAO,WAAW,eAAe,OAAO,OAAO,WAAW,aAAa;AACzE,oBAAS,OAAO;AAAA,eACX;AACL,oBAAS,iBAAkB;AAAA;AAAA,eAEtB,GAAP;AAAA;AAGF,SAAG,OAAO,cAAe,KAAK;AAC5B,YAAI,eAAe,IAAI;AACrB,iBAAO;AAAA;AAGT,eAAO,QAAQ,QAAQ,OAAO,QAAQ,YACpC,IAAI,YAAY,aAAa,GAAG,YAAY,MAAM,QAAQ,IAAI;AAAA;AAGlE,SAAG,MAAM,aAAc,MAAM,OAAO;AAClC,YAAI,KAAK,IAAI,SAAS;AAAG,iBAAO;AAChC,eAAO;AAAA;AAGT,SAAG,MAAM,aAAc,MAAM,OAAO;AAClC,YAAI,KAAK,IAAI,SAAS;AAAG,iBAAO;AAChC,eAAO;AAAA;AAGT,SAAG,UAAU,QAAQ,cAAe,QAAQ,MAAM,QAAQ;AACxD,YAAI,OAAO,WAAW,UAAU;AAC9B,iBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA;AAGxC,YAAI,OAAO,WAAW,UAAU;AAC9B,iBAAO,KAAK,WAAW,QAAQ,MAAM;AAAA;AAGvC,YAAI,SAAS,OAAO;AAClB,iBAAO;AAAA;AAET,eAAO,SAAU,QAAO,MAAM,QAAQ,KAAK,QAAQ;AAEnD,iBAAS,OAAO,WAAW,QAAQ,QAAQ;AAC3C,YAAI,QAAQ;AACZ,YAAI,OAAO,OAAO,KAAK;AACrB;AACA,eAAK,WAAW;AAAA;AAGlB,YAAI,QAAQ,OAAO,QAAQ;AACzB,cAAI,SAAS,IAAI;AACf,iBAAK,UAAU,QAAQ,OAAO;AAAA,iBACzB;AACL,iBAAK,WAAW,QAAQ,MAAM;AAC9B,gBAAI,WAAW,MAAM;AACnB,mBAAK,WAAW,KAAK,WAAW,MAAM;AAAA;AAAA;AAAA;AAAA;AAM9C,SAAG,UAAU,cAAc,qBAAsB,QAAQ,MAAM,QAAQ;AACrE,YAAI,SAAS,GAAG;AACd,eAAK,WAAW;AAChB,mBAAS,CAAC;AAAA;AAEZ,YAAI,SAAS,UAAW;AACtB,eAAK,QAAQ,CAAE,SAAS;AACxB,eAAK,SAAS;AAAA,mBACL,SAAS,kBAAkB;AACpC,eAAK,QAAQ;AAAA,YACX,SAAS;AAAA,YACR,SAAS,WAAa;AAAA;AAEzB,eAAK,SAAS;AAAA,eACT;AACL,iBAAO,SAAS;AAChB,eAAK,QAAQ;AAAA,YACX,SAAS;AAAA,YACR,SAAS,WAAa;AAAA,YACvB;AAAA;AAEF,eAAK,SAAS;AAAA;AAGhB,YAAI,WAAW;AAAM;AAGrB,aAAK,WAAW,KAAK,WAAW,MAAM;AAAA;AAGxC,SAAG,UAAU,aAAa,oBAAqB,QAAQ,MAAM,QAAQ;AAEnE,eAAO,OAAO,OAAO,WAAW;AAChC,YAAI,OAAO,UAAU,GAAG;AACtB,eAAK,QAAQ,CAAE;AACf,eAAK,SAAS;AACd,iBAAO;AAAA;AAGT,aAAK,SAAS,KAAK,KAAK,OAAO,SAAS;AACxC,aAAK,QAAQ,IAAI,MAAM,KAAK;AAC5B,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK;AAAA;AAGlB,YAAI,GAAG;AACP,YAAI,MAAM;AACV,YAAI,WAAW,MAAM;AACnB,eAAK,IAAI,OAAO,SAAS,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG;AACjD,gBAAI,OAAO,KAAM,OAAO,IAAI,MAAM,IAAM,OAAO,IAAI,MAAM;AACzD,iBAAK,MAAM,MAAO,KAAK,MAAO;AAC9B,iBAAK,MAAM,IAAI,KAAM,MAAO,KAAK,MAAQ;AACzC,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA;AAAA;AAAA,mBAGK,WAAW,MAAM;AAC1B,eAAK,IAAI,GAAG,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAG;AAC5C,gBAAI,OAAO,KAAM,OAAO,IAAI,MAAM,IAAM,OAAO,IAAI,MAAM;AACzD,iBAAK,MAAM,MAAO,KAAK,MAAO;AAC9B,iBAAK,MAAM,IAAI,KAAM,MAAO,KAAK,MAAQ;AACzC,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA;AAAA;AAAA;AAIN,eAAO,KAAK;AAAA;AAGd,6BAAwB,QAAQ,OAAO;AACrC,YAAI,IAAI,OAAO,WAAW;AAE1B,YAAI,KAAK,MAAM,KAAK,IAAI;AACtB,iBAAO,IAAI;AAAA,mBAEF,KAAK,MAAM,KAAK,KAAK;AAC9B,iBAAO,IAAI;AAAA,eAEN;AACL,iBAAQ,IAAI,KAAM;AAAA;AAAA;AAItB,4BAAuB,QAAQ,YAAY,OAAO;AAChD,YAAI,IAAI,cAAc,QAAQ;AAC9B,YAAI,QAAQ,KAAK,YAAY;AAC3B,eAAK,cAAc,QAAQ,QAAQ,MAAM;AAAA;AAE3C,eAAO;AAAA;AAGT,SAAG,UAAU,YAAY,mBAAoB,QAAQ,OAAO,QAAQ;AAElE,aAAK,SAAS,KAAK,KAAM,QAAO,SAAS,SAAS;AAClD,aAAK,QAAQ,IAAI,MAAM,KAAK;AAC5B,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK;AAAA;AAIlB,YAAI,MAAM;AACV,YAAI,IAAI;AAER,YAAI;AACJ,YAAI,WAAW,MAAM;AACnB,eAAK,IAAI,OAAO,SAAS,GAAG,KAAK,OAAO,KAAK,GAAG;AAC9C,gBAAI,aAAa,QAAQ,OAAO,MAAM;AACtC,iBAAK,MAAM,MAAM,IAAI;AACrB,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP,mBAAK;AACL,mBAAK,MAAM,MAAM,MAAM;AAAA,mBAClB;AACL,qBAAO;AAAA;AAAA;AAAA,eAGN;AACL,cAAI,cAAc,OAAO,SAAS;AAClC,eAAK,IAAI,cAAc,MAAM,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,QAAQ,KAAK,GAAG;AAC7E,gBAAI,aAAa,QAAQ,OAAO,MAAM;AACtC,iBAAK,MAAM,MAAM,IAAI;AACrB,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP,mBAAK;AACL,mBAAK,MAAM,MAAM,MAAM;AAAA,mBAClB;AACL,qBAAO;AAAA;AAAA;AAAA;AAKb,aAAK;AAAA;AAGP,yBAAoB,KAAK,OAAO,KAAK,KAAK;AACxC,YAAI,IAAI;AACR,YAAI,MAAM,KAAK,IAAI,IAAI,QAAQ;AAC/B,iBAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAChC,cAAI,IAAI,IAAI,WAAW,KAAK;AAE5B,eAAK;AAGL,cAAI,KAAK,IAAI;AACX,iBAAK,IAAI,KAAK;AAAA,qBAGL,KAAK,IAAI;AAClB,iBAAK,IAAI,KAAK;AAAA,iBAGT;AACL,iBAAK;AAAA;AAAA;AAGT,eAAO;AAAA;AAGT,SAAG,UAAU,aAAa,oBAAqB,QAAQ,MAAM,OAAO;AAElE,aAAK,QAAQ,CAAE;AACf,aAAK,SAAS;AAGd,iBAAS,UAAU,GAAG,UAAU,GAAG,WAAW,UAAW,WAAW,MAAM;AACxE;AAAA;AAEF;AACA,kBAAW,UAAU,OAAQ;AAE7B,YAAI,QAAQ,OAAO,SAAS;AAC5B,YAAI,MAAM,QAAQ;AAClB,YAAI,MAAM,KAAK,IAAI,OAAO,QAAQ,OAAO;AAEzC,YAAI,OAAO;AACX,iBAAS,IAAI,OAAO,IAAI,KAAK,KAAK,SAAS;AACzC,iBAAO,UAAU,QAAQ,GAAG,IAAI,SAAS;AAEzC,eAAK,MAAM;AACX,cAAI,KAAK,MAAM,KAAK,OAAO,UAAW;AACpC,iBAAK,MAAM,MAAM;AAAA,iBACZ;AACL,iBAAK,OAAO;AAAA;AAAA;AAIhB,YAAI,QAAQ,GAAG;AACb,cAAI,MAAM;AACV,iBAAO,UAAU,QAAQ,GAAG,OAAO,QAAQ;AAE3C,eAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACxB,mBAAO;AAAA;AAGT,eAAK,MAAM;AACX,cAAI,KAAK,MAAM,KAAK,OAAO,UAAW;AACpC,iBAAK,MAAM,MAAM;AAAA,iBACZ;AACL,iBAAK,OAAO;AAAA;AAAA;AAIhB,aAAK;AAAA;AAGP,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,aAAK,QAAQ,IAAI,MAAM,KAAK;AAC5B,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,eAAK,MAAM,KAAK,KAAK,MAAM;AAAA;AAE7B,aAAK,SAAS,KAAK;AACnB,aAAK,WAAW,KAAK;AACrB,aAAK,MAAM,KAAK;AAAA;AAGlB,SAAG,UAAU,QAAQ,iBAAkB;AACrC,YAAI,IAAI,IAAI,GAAG;AACf,aAAK,KAAK;AACV,eAAO;AAAA;AAGT,SAAG,UAAU,UAAU,iBAAkB,MAAM;AAC7C,eAAO,KAAK,SAAS,MAAM;AACzB,eAAK,MAAM,KAAK,YAAY;AAAA;AAE9B,eAAO;AAAA;AAIT,SAAG,UAAU,QAAQ,iBAAkB;AACrC,eAAO,KAAK,SAAS,KAAK,KAAK,MAAM,KAAK,SAAS,OAAO,GAAG;AAC3D,eAAK;AAAA;AAEP,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,YAAY,qBAAsB;AAE7C,YAAI,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO,GAAG;AAC5C,eAAK,WAAW;AAAA;AAElB,eAAO;AAAA;AAGT,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAQ,MAAK,MAAM,YAAY,WAAW,KAAK,SAAS,MAAM;AAAA;AAiChE,UAAI,QAAQ;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAGF,UAAI,aAAa;AAAA,QACf;AAAA,QAAG;AAAA,QACH;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAI;AAAA,QAAG;AAAA,QACvB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAClB;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA,QAAG;AAAA;AAGpB,UAAI,aAAa;AAAA,QACf;AAAA,QAAG;AAAA,QACH;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAC5D;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAS;AAAA,QAC3D;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAS;AAAA,QAC3D;AAAA,QAAS;AAAA,QAAS;AAAA,QAAS;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QACzD;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA,QAAU;AAAA;AAG9D,SAAG,UAAU,WAAW,kBAAmB,MAAM,SAAS;AACxD,eAAO,QAAQ;AACf,kBAAU,UAAU,KAAK;AAEzB,YAAI;AACJ,YAAI,SAAS,MAAM,SAAS,OAAO;AACjC,gBAAM;AACN,cAAI,MAAM;AACV,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAI,IAAI,KAAK,MAAM;AACnB,gBAAI,OAAU,OAAK,MAAO,SAAS,UAAU,SAAS;AACtD,oBAAS,MAAO,KAAK,MAAQ;AAC7B,gBAAI,UAAU,KAAK,MAAM,KAAK,SAAS,GAAG;AACxC,oBAAM,MAAM,IAAI,KAAK,UAAU,OAAO;AAAA,mBACjC;AACL,oBAAM,OAAO;AAAA;AAEf,mBAAO;AACP,gBAAI,OAAO,IAAI;AACb,qBAAO;AACP;AAAA;AAAA;AAGJ,cAAI,UAAU,GAAG;AACf,kBAAM,MAAM,SAAS,MAAM;AAAA;AAE7B,iBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,kBAAM,MAAM;AAAA;AAEd,cAAI,KAAK,aAAa,GAAG;AACvB,kBAAM,MAAM;AAAA;AAEd,iBAAO;AAAA;AAGT,YAAI,SAAU,QAAO,MAAM,QAAQ,KAAK,QAAQ,IAAI;AAElD,cAAI,YAAY,WAAW;AAE3B,cAAI,YAAY,WAAW;AAC3B,gBAAM;AACN,cAAI,IAAI,KAAK;AACb,YAAE,WAAW;AACb,iBAAO,CAAC,EAAE,UAAU;AAClB,gBAAI,IAAI,EAAE,KAAK,WAAW,SAAS;AACnC,gBAAI,EAAE,MAAM;AAEZ,gBAAI,CAAC,EAAE,UAAU;AACf,oBAAM,MAAM,YAAY,EAAE,UAAU,IAAI;AAAA,mBACnC;AACL,oBAAM,IAAI;AAAA;AAAA;AAGd,cAAI,KAAK,UAAU;AACjB,kBAAM,MAAM;AAAA;AAEd,iBAAO,IAAI,SAAS,YAAY,GAAG;AACjC,kBAAM,MAAM;AAAA;AAEd,cAAI,KAAK,aAAa,GAAG;AACvB,kBAAM,MAAM;AAAA;AAEd,iBAAO;AAAA;AAGT,eAAO,OAAO;AAAA;AAGhB,SAAG,UAAU,WAAW,oBAAqB;AAC3C,YAAI,MAAM,KAAK,MAAM;AACrB,YAAI,KAAK,WAAW,GAAG;AACrB,iBAAO,KAAK,MAAM,KAAK;AAAA,mBACd,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO,GAAM;AAEtD,iBAAO,mBAAoB,KAAK,MAAM,KAAK;AAAA,mBAClC,KAAK,SAAS,GAAG;AAC1B,iBAAO,OAAO;AAAA;AAEhB,eAAQ,KAAK,aAAa,IAAK,CAAC,MAAM;AAAA;AAGxC,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,SAAS;AAAA;AAGvB,SAAG,UAAU,WAAW,kBAAmB,QAAQ,QAAQ;AACzD,eAAO,OAAO,YAAW;AACzB,eAAO,KAAK,YAAY,SAAQ,QAAQ;AAAA;AAG1C,SAAG,UAAU,UAAU,iBAAkB,QAAQ,QAAQ;AACvD,eAAO,KAAK,YAAY,OAAO,QAAQ;AAAA;AAGzC,SAAG,UAAU,cAAc,qBAAsB,WAAW,QAAQ,QAAQ;AAC1E,YAAI,aAAa,KAAK;AACtB,YAAI,YAAY,UAAU,KAAK,IAAI,GAAG;AACtC,eAAO,cAAc,WAAW;AAChC,eAAO,YAAY,GAAG;AAEtB,aAAK;AACL,YAAI,eAAe,WAAW;AAC9B,YAAI,MAAM,IAAI,UAAU;AAExB,YAAI,GAAG;AACP,YAAI,IAAI,KAAK;AACb,YAAI,CAAC,cAAc;AAEjB,eAAK,IAAI,GAAG,IAAI,YAAY,YAAY,KAAK;AAC3C,gBAAI,KAAK;AAAA;AAGX,eAAK,IAAI,GAAG,CAAC,EAAE,UAAU,KAAK;AAC5B,gBAAI,EAAE,MAAM;AACZ,cAAE,OAAO;AAET,gBAAI,YAAY,IAAI,KAAK;AAAA;AAAA,eAEtB;AACL,eAAK,IAAI,GAAG,CAAC,EAAE,UAAU,KAAK;AAC5B,gBAAI,EAAE,MAAM;AACZ,cAAE,OAAO;AAET,gBAAI,KAAK;AAAA;AAGX,iBAAO,IAAI,WAAW,KAAK;AACzB,gBAAI,KAAK;AAAA;AAAA;AAIb,eAAO;AAAA;AAGT,UAAI,KAAK,OAAO;AACd,WAAG,UAAU,aAAa,oBAAqB,GAAG;AAChD,iBAAO,KAAK,KAAK,MAAM;AAAA;AAAA,aAEpB;AACL,WAAG,UAAU,aAAa,oBAAqB,GAAG;AAChD,cAAI,IAAI;AACR,cAAI,IAAI;AACR,cAAI,KAAK,MAAQ;AACf,iBAAK;AACL,mBAAO;AAAA;AAET,cAAI,KAAK,IAAM;AACb,iBAAK;AACL,mBAAO;AAAA;AAET,cAAI,KAAK,GAAK;AACZ,iBAAK;AACL,mBAAO;AAAA;AAET,cAAI,KAAK,GAAM;AACb,iBAAK;AACL,mBAAO;AAAA;AAET,iBAAO,IAAI;AAAA;AAAA;AAIf,SAAG,UAAU,YAAY,mBAAoB,GAAG;AAE9C,YAAI,MAAM;AAAG,iBAAO;AAEpB,YAAI,IAAI;AACR,YAAI,IAAI;AACR,YAAK,KAAI,UAAY,GAAG;AACtB,eAAK;AACL,iBAAO;AAAA;AAET,YAAK,KAAI,SAAU,GAAG;AACpB,eAAK;AACL,iBAAO;AAAA;AAET,YAAK,KAAI,QAAS,GAAG;AACnB,eAAK;AACL,iBAAO;AAAA;AAET,YAAK,KAAI,OAAS,GAAG;AACnB,eAAK;AACL,iBAAO;AAAA;AAET,YAAK,KAAI,OAAS,GAAG;AACnB;AAAA;AAEF,eAAO;AAAA;AAIT,SAAG,UAAU,YAAY,qBAAsB;AAC7C,YAAI,IAAI,KAAK,MAAM,KAAK,SAAS;AACjC,YAAI,KAAK,KAAK,WAAW;AACzB,eAAQ,MAAK,SAAS,KAAK,KAAK;AAAA;AAGlC,0BAAqB,KAAK;AACxB,YAAI,IAAI,IAAI,MAAM,IAAI;AAEtB,iBAAS,MAAM,GAAG,MAAM,EAAE,QAAQ,OAAO;AACvC,cAAI,MAAO,MAAM,KAAM;AACvB,cAAI,OAAO,MAAM;AAEjB,YAAE,OAAQ,KAAI,MAAM,OAAQ,KAAK,UAAW;AAAA;AAG9C,eAAO;AAAA;AAIT,SAAG,UAAU,WAAW,oBAAqB;AAC3C,YAAI,KAAK;AAAU,iBAAO;AAE1B,YAAI,IAAI;AACR,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,IAAI,KAAK,UAAU,KAAK,MAAM;AAClC,eAAK;AACL,cAAI,MAAM;AAAI;AAAA;AAEhB,eAAO;AAAA;AAGT,SAAG,UAAU,aAAa,sBAAuB;AAC/C,eAAO,KAAK,KAAK,KAAK,cAAc;AAAA;AAGtC,SAAG,UAAU,SAAS,gBAAiB,OAAO;AAC5C,YAAI,KAAK,aAAa,GAAG;AACvB,iBAAO,KAAK,MAAM,MAAM,OAAO,MAAM;AAAA;AAEvC,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,WAAW,kBAAmB,OAAO;AAChD,YAAI,KAAK,MAAM,QAAQ,IAAI;AACzB,iBAAO,KAAK,KAAK,OAAO,MAAM,GAAG;AAAA;AAEnC,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,QAAQ,iBAAkB;AACrC,eAAO,KAAK,aAAa;AAAA;AAI3B,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,QAAQ;AAAA;AAGtB,SAAG,UAAU,OAAO,gBAAiB;AACnC,YAAI,CAAC,KAAK,UAAU;AAClB,eAAK,YAAY;AAAA;AAGnB,eAAO;AAAA;AAIT,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,SAAS,IAAI,QAAQ;AAC/B,eAAK,MAAM,KAAK,YAAY;AAAA;AAG9B,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,eAAK,MAAM,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM;AAAA;AAG5C,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAQ,MAAK,WAAW,IAAI,cAAc;AAC1C,eAAO,KAAK,KAAK;AAAA;AAInB,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,IAAI;AACtD,eAAO,IAAI,QAAQ,IAAI;AAAA;AAGzB,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,KAAK;AACvD,eAAO,IAAI,QAAQ,KAAK;AAAA;AAI1B,SAAG,UAAU,QAAQ,eAAgB,KAAK;AAExC,YAAI;AACJ,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AAAA,eACC;AACL,cAAI;AAAA;AAGN,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,MAAM,KAAK,KAAK,MAAM,KAAK,IAAI,MAAM;AAAA;AAG5C,aAAK,SAAS,EAAE;AAEhB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAQ,MAAK,WAAW,IAAI,cAAc;AAC1C,eAAO,KAAK,MAAM;AAAA;AAIpB,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,KAAK;AACvD,eAAO,IAAI,QAAQ,KAAK;AAAA;AAG1B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,MAAM;AACxD,eAAO,IAAI,QAAQ,MAAM;AAAA;AAI3B,SAAG,UAAU,QAAQ,eAAgB,KAAK;AAExC,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AACJ,cAAI;AAAA,eACC;AACL,cAAI;AACJ,cAAI;AAAA;AAGN,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,eAAK,MAAM,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM;AAAA;AAGvC,YAAI,SAAS,GAAG;AACd,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA;AAAA;AAI5B,aAAK,SAAS,EAAE;AAEhB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAQ,MAAK,WAAW,IAAI,cAAc;AAC1C,eAAO,KAAK,MAAM;AAAA;AAIpB,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,KAAK;AACvD,eAAO,IAAI,QAAQ,KAAK;AAAA;AAG1B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,MAAM;AACxD,eAAO,IAAI,QAAQ,MAAM;AAAA;AAI3B,SAAG,UAAU,QAAQ,eAAgB,OAAO;AAC1C,eAAO,OAAO,UAAU,YAAY,SAAS;AAE7C,YAAI,cAAc,KAAK,KAAK,QAAQ,MAAM;AAC1C,YAAI,WAAW,QAAQ;AAGvB,aAAK,QAAQ;AAEb,YAAI,WAAW,GAAG;AAChB;AAAA;AAIF,iBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM,KAAK;AAAA;AAInC,YAAI,WAAW,GAAG;AAChB,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM,KAAM,YAAc,KAAK;AAAA;AAIvD,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,OAAO;AACxC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAI5B,SAAG,UAAU,OAAO,cAAe,KAAK,KAAK;AAC3C,eAAO,OAAO,QAAQ,YAAY,OAAO;AAEzC,YAAI,MAAO,MAAM,KAAM;AACvB,YAAI,OAAO,MAAM;AAEjB,aAAK,QAAQ,MAAM;AAEnB,YAAI,KAAK;AACP,eAAK,MAAM,OAAO,KAAK,MAAM,OAAQ,KAAK;AAAA,eACrC;AACL,eAAK,MAAM,OAAO,KAAK,MAAM,OAAO,CAAE,MAAK;AAAA;AAG7C,eAAO,KAAK;AAAA;AAId,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI;AAGJ,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,eAAK,WAAW;AAChB,cAAI,KAAK,KAAK;AACd,eAAK,YAAY;AACjB,iBAAO,KAAK;AAAA,mBAGH,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AACpD,cAAI,WAAW;AACf,cAAI,KAAK,KAAK;AACd,cAAI,WAAW;AACf,iBAAO,EAAE;AAAA;AAIX,YAAI,GAAG;AACP,YAAI,KAAK,SAAS,IAAI,QAAQ;AAC5B,cAAI;AACJ,cAAI;AAAA,eACC;AACL,cAAI;AACJ,cAAI;AAAA;AAGN,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAK,GAAE,MAAM,KAAK,KAAM,GAAE,MAAM,KAAK,KAAK;AAC1C,eAAK,MAAM,KAAK,IAAI;AACpB,kBAAQ,MAAM;AAAA;AAEhB,eAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,cAAK,GAAE,MAAM,KAAK,KAAK;AACvB,eAAK,MAAM,KAAK,IAAI;AACpB,kBAAQ,MAAM;AAAA;AAGhB,aAAK,SAAS,EAAE;AAChB,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK,UAAU;AAC1B,eAAK;AAAA,mBAEI,MAAM,MAAM;AACrB,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA;AAAA;AAI5B,eAAO;AAAA;AAIT,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI;AACJ,YAAI,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AAC7C,cAAI,WAAW;AACf,gBAAM,KAAK,IAAI;AACf,cAAI,YAAY;AAChB,iBAAO;AAAA,mBACE,IAAI,aAAa,KAAK,KAAK,aAAa,GAAG;AACpD,eAAK,WAAW;AAChB,gBAAM,IAAI,IAAI;AACd,eAAK,WAAW;AAChB,iBAAO;AAAA;AAGT,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO,KAAK,QAAQ,KAAK;AAEvD,eAAO,IAAI,QAAQ,KAAK;AAAA;AAI1B,SAAG,UAAU,OAAO,cAAe,KAAK;AAEtC,YAAI,IAAI,aAAa,GAAG;AACtB,cAAI,WAAW;AACf,cAAI,IAAI,KAAK,KAAK;AAClB,cAAI,WAAW;AACf,iBAAO,EAAE;AAAA,mBAGA,KAAK,aAAa,GAAG;AAC9B,eAAK,WAAW;AAChB,eAAK,KAAK;AACV,eAAK,WAAW;AAChB,iBAAO,KAAK;AAAA;AAId,YAAI,MAAM,KAAK,IAAI;AAGnB,YAAI,QAAQ,GAAG;AACb,eAAK,WAAW;AAChB,eAAK,SAAS;AACd,eAAK,MAAM,KAAK;AAChB,iBAAO;AAAA;AAIT,YAAI,GAAG;AACP,YAAI,MAAM,GAAG;AACX,cAAI;AACJ,cAAI;AAAA,eACC;AACL,cAAI;AACJ,cAAI;AAAA;AAGN,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAK,GAAE,MAAM,KAAK,KAAM,GAAE,MAAM,KAAK,KAAK;AAC1C,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA;AAEtB,eAAO,UAAU,KAAK,IAAI,EAAE,QAAQ,KAAK;AACvC,cAAK,GAAE,MAAM,KAAK,KAAK;AACvB,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA;AAItB,YAAI,UAAU,KAAK,IAAI,EAAE,UAAU,MAAM,MAAM;AAC7C,iBAAO,IAAI,EAAE,QAAQ,KAAK;AACxB,iBAAK,MAAM,KAAK,EAAE,MAAM;AAAA;AAAA;AAI5B,aAAK,SAAS,KAAK,IAAI,KAAK,QAAQ;AAEpC,YAAI,MAAM,MAAM;AACd,eAAK,WAAW;AAAA;AAGlB,eAAO,KAAK;AAAA;AAId,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,QAAQ,KAAK;AAAA;AAG3B,0BAAqB,MAAM,KAAK,KAAK;AACnC,YAAI,WAAW,IAAI,WAAW,KAAK;AACnC,YAAI,MAAO,KAAK,SAAS,IAAI,SAAU;AACvC,YAAI,SAAS;AACb,cAAO,MAAM,IAAK;AAGlB,YAAI,IAAI,KAAK,MAAM,KAAK;AACxB,YAAI,IAAI,IAAI,MAAM,KAAK;AACvB,YAAI,IAAI,IAAI;AAEZ,YAAI,KAAK,IAAI;AACb,YAAI,QAAS,IAAI,WAAa;AAC9B,YAAI,MAAM,KAAK;AAEf,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAG5B,cAAI,SAAS,UAAU;AACvB,cAAI,QAAQ,QAAQ;AACpB,cAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS;AACpC,mBAAS,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,SAAS,IAAI,KAAK,MAAM,KAAK;AAC7D,gBAAI,IAAK,IAAI,IAAK;AAClB,gBAAI,KAAK,MAAM,KAAK;AACpB,gBAAI,IAAI,MAAM,KAAK;AACnB,gBAAI,IAAI,IAAI;AACZ,sBAAW,IAAI,WAAa;AAC5B,oBAAQ,IAAI;AAAA;AAEd,cAAI,MAAM,KAAK,QAAQ;AACvB,kBAAQ,SAAS;AAAA;AAEnB,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,KAAK,QAAQ;AAAA,eAClB;AACL,cAAI;AAAA;AAGN,eAAO,IAAI;AAAA;AAMb,UAAI,cAAc,sBAAsB,MAAM,KAAK,KAAK;AACtD,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI;AACR,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AACjB,YAAI,KAAK,EAAE,KAAK;AAChB,YAAI,MAAM,KAAK;AACf,YAAI,MAAM,OAAO;AAEjB,YAAI,WAAW,KAAK,WAAW,IAAI;AACnC,YAAI,SAAS;AAEb,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,KAAQ,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACrD,YAAO,MAAM,SAAQ,MAAO,KAAM,QAAO,MAAO;AAChD,cAAM;AAEN,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,OAAQ;AAClC,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AAEP,aAAK,KAAK,KAAK,KAAK;AACpB,cAAM,KAAK,KAAK,KAAK;AACrB,cAAO,MAAM,KAAK,KAAK,KAAK,OAAQ;AACpC,aAAK,KAAK,KAAK,KAAK;AACpB,YAAI,MAAS,KAAI,KAAM,KAAO,QAAM,SAAW,MAAO;AACtD,YAAO,MAAM,SAAQ,MAAO,KAAM,SAAQ,MAAO;AACjD,eAAO;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,KAAK;AACP,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,UAAE,MAAM;AACR,YAAI,MAAM,GAAG;AACX,YAAE,MAAM;AACR,cAAI;AAAA;AAEN,eAAO;AAAA;AAIT,UAAI,CAAC,KAAK,MAAM;AACd,sBAAc;AAAA;AAGhB,wBAAmB,MAAM,KAAK,KAAK;AACjC,YAAI,WAAW,IAAI,WAAW,KAAK;AACnC,YAAI,SAAS,KAAK,SAAS,IAAI;AAE/B,YAAI,QAAQ;AACZ,YAAI,UAAU;AACd,iBAAS,IAAI,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK;AAGvC,cAAI,SAAS;AACb,oBAAU;AACV,cAAI,QAAQ,QAAQ;AACpB,cAAI,OAAO,KAAK,IAAI,GAAG,IAAI,SAAS;AACpC,mBAAS,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,SAAS,IAAI,KAAK,MAAM,KAAK;AAC7D,gBAAI,IAAI,IAAI;AACZ,gBAAI,IAAI,KAAK,MAAM,KAAK;AACxB,gBAAI,IAAI,IAAI,MAAM,KAAK;AACvB,gBAAI,IAAI,IAAI;AAEZ,gBAAI,KAAK,IAAI;AACb,qBAAU,SAAW,KAAI,WAAa,KAAM;AAC5C,iBAAM,KAAK,QAAS;AACpB,oBAAQ,KAAK;AACb,qBAAU,SAAU,QAAO,MAAO;AAElC,uBAAW,WAAW;AACtB,sBAAU;AAAA;AAEZ,cAAI,MAAM,KAAK;AACf,kBAAQ;AACR,mBAAS;AAAA;AAEX,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,KAAK;AAAA,eACV;AACL,cAAI;AAAA;AAGN,eAAO,IAAI;AAAA;AAGb,0BAAqB,MAAM,KAAK,KAAK;AACnC,YAAI,OAAO,IAAI;AACf,eAAO,KAAK,KAAK,MAAM,KAAK;AAAA;AAG9B,SAAG,UAAU,QAAQ,eAAgB,KAAK,KAAK;AAC7C,YAAI;AACJ,YAAI,MAAM,KAAK,SAAS,IAAI;AAC5B,YAAI,KAAK,WAAW,MAAM,IAAI,WAAW,IAAI;AAC3C,gBAAM,YAAY,MAAM,KAAK;AAAA,mBACpB,MAAM,IAAI;AACnB,gBAAM,WAAW,MAAM,KAAK;AAAA,mBACnB,MAAM,MAAM;AACrB,gBAAM,SAAS,MAAM,KAAK;AAAA,eACrB;AACL,gBAAM,WAAW,MAAM,KAAK;AAAA;AAG9B,eAAO;AAAA;AAMT,oBAAe,GAAG,GAAG;AACnB,aAAK,IAAI;AACT,aAAK,IAAI;AAAA;AAGX,WAAK,UAAU,UAAU,iBAAkB,GAAG;AAC5C,YAAI,IAAI,IAAI,MAAM;AAClB,YAAI,IAAI,GAAG,UAAU,WAAW,KAAK;AACrC,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAE,KAAK,KAAK,OAAO,GAAG,GAAG;AAAA;AAG3B,eAAO;AAAA;AAIT,WAAK,UAAU,SAAS,gBAAiB,GAAG,GAAG,GAAG;AAChD,YAAI,MAAM,KAAK,MAAM,IAAI;AAAG,iBAAO;AAEnC,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,gBAAO,KAAI,MAAO,IAAI,IAAI;AAC1B,gBAAM;AAAA;AAGR,eAAO;AAAA;AAKT,WAAK,UAAU,UAAU,iBAAkB,KAAK,KAAK,KAAK,MAAM,MAAM,GAAG;AACvE,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,eAAK,KAAK,IAAI,IAAI;AAClB,eAAK,KAAK,IAAI,IAAI;AAAA;AAAA;AAItB,WAAK,UAAU,YAAY,mBAAoB,KAAK,KAAK,MAAM,MAAM,GAAG,KAAK;AAC3E,aAAK,QAAQ,KAAK,KAAK,KAAK,MAAM,MAAM;AAExC,iBAAS,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG;AAC9B,cAAI,IAAI,KAAK;AAEb,cAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,KAAK;AACnC,cAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,KAAK;AAEnC,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG;AAC7B,gBAAI,SAAS;AACb,gBAAI,SAAS;AAEb,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,kBAAI,KAAK,KAAK,IAAI;AAClB,kBAAI,KAAK,KAAK,IAAI;AAElB,kBAAI,KAAK,KAAK,IAAI,IAAI;AACtB,kBAAI,KAAK,KAAK,IAAI,IAAI;AAEtB,kBAAI,KAAK,SAAS,KAAK,SAAS;AAEhC,mBAAK,SAAS,KAAK,SAAS;AAC5B,mBAAK;AAEL,mBAAK,IAAI,KAAK,KAAK;AACnB,mBAAK,IAAI,KAAK,KAAK;AAEnB,mBAAK,IAAI,IAAI,KAAK,KAAK;AACvB,mBAAK,IAAI,IAAI,KAAK,KAAK;AAGvB,kBAAI,MAAM,GAAG;AACX,qBAAK,QAAQ,SAAS,QAAQ;AAE9B,yBAAS,QAAQ,SAAS,QAAQ;AAClC,yBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAOnB,WAAK,UAAU,cAAc,qBAAsB,GAAG,GAAG;AACvD,YAAI,IAAI,KAAK,IAAI,GAAG,KAAK;AACzB,YAAI,MAAM,IAAI;AACd,YAAI,IAAI;AACR,aAAK,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG;AAClC;AAAA;AAGF,eAAO,KAAK,IAAI,IAAI;AAAA;AAGtB,WAAK,UAAU,YAAY,mBAAoB,KAAK,KAAK,GAAG;AAC1D,YAAI,KAAK;AAAG;AAEZ,iBAAS,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK;AAC9B,cAAI,IAAI,IAAI;AAEZ,cAAI,KAAK,IAAI,IAAI,IAAI;AACrB,cAAI,IAAI,IAAI,KAAK;AAEjB,cAAI,IAAI;AAER,cAAI,KAAK,CAAC,IAAI,IAAI,IAAI;AACtB,cAAI,IAAI,IAAI,KAAK,CAAC;AAAA;AAAA;AAItB,WAAK,UAAU,eAAe,sBAAuB,IAAI,GAAG;AAC1D,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK;AAC9B,cAAI,IAAI,KAAK,MAAM,GAAG,IAAI,IAAI,KAAK,KAAK,OACtC,KAAK,MAAM,GAAG,IAAI,KAAK,KACvB;AAEF,aAAG,KAAK,IAAI;AAEZ,cAAI,IAAI,UAAW;AACjB,oBAAQ;AAAA,iBACH;AACL,oBAAQ,IAAI,WAAY;AAAA;AAAA;AAI5B,eAAO;AAAA;AAGT,WAAK,UAAU,aAAa,oBAAqB,IAAI,KAAK,KAAK,GAAG;AAChE,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,kBAAQ,QAAS,IAAG,KAAK;AAEzB,cAAI,IAAI,KAAK,QAAQ;AAAQ,kBAAQ,UAAU;AAC/C,cAAI,IAAI,IAAI,KAAK,QAAQ;AAAQ,kBAAQ,UAAU;AAAA;AAIrD,aAAK,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG;AAC5B,cAAI,KAAK;AAAA;AAGX,eAAO,UAAU;AACjB,eAAQ,SAAQ,CAAC,UAAY;AAAA;AAG/B,WAAK,UAAU,OAAO,cAAe,GAAG;AACtC,YAAI,KAAK,IAAI,MAAM;AACnB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAG,KAAK;AAAA;AAGV,eAAO;AAAA;AAGT,WAAK,UAAU,OAAO,cAAe,GAAG,GAAG,KAAK;AAC9C,YAAI,IAAI,IAAI,KAAK,YAAY,EAAE,QAAQ,EAAE;AAEzC,YAAI,MAAM,KAAK,QAAQ;AAEvB,YAAI,IAAI,KAAK,KAAK;AAElB,YAAI,MAAM,IAAI,MAAM;AACpB,YAAI,OAAO,IAAI,MAAM;AACrB,YAAI,OAAO,IAAI,MAAM;AAErB,YAAI,OAAO,IAAI,MAAM;AACrB,YAAI,QAAQ,IAAI,MAAM;AACtB,YAAI,QAAQ,IAAI,MAAM;AAEtB,YAAI,OAAO,IAAI;AACf,aAAK,SAAS;AAEd,aAAK,WAAW,EAAE,OAAO,EAAE,QAAQ,KAAK;AACxC,aAAK,WAAW,EAAE,OAAO,EAAE,QAAQ,MAAM;AAEzC,aAAK,UAAU,KAAK,GAAG,MAAM,MAAM,GAAG;AACtC,aAAK,UAAU,MAAM,GAAG,OAAO,OAAO,GAAG;AAEzC,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,cAAI,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM;AAC9C,eAAK,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM;AAC/C,eAAK,KAAK;AAAA;AAGZ,aAAK,UAAU,MAAM,MAAM;AAC3B,aAAK,UAAU,MAAM,MAAM,MAAM,GAAG,GAAG;AACvC,aAAK,UAAU,MAAM,GAAG;AACxB,aAAK,aAAa,MAAM;AAExB,YAAI,WAAW,EAAE,WAAW,EAAE;AAC9B,YAAI,SAAS,EAAE,SAAS,EAAE;AAC1B,eAAO,IAAI;AAAA;AAIb,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,MAAM,IAAI,GAAG;AACjB,YAAI,QAAQ,IAAI,MAAM,KAAK,SAAS,IAAI;AACxC,eAAO,KAAK,MAAM,KAAK;AAAA;AAIzB,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,MAAM,IAAI,GAAG;AACjB,YAAI,QAAQ,IAAI,MAAM,KAAK,SAAS,IAAI;AACxC,eAAO,WAAW,MAAM,KAAK;AAAA;AAI/B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM,KAAK;AAAA;AAGjC,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ;AACtB,eAAO,MAAM;AAGb,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,IAAK,MAAK,MAAM,KAAK,KAAK;AAC9B,cAAI,KAAM,KAAI,YAAc,SAAQ;AACpC,oBAAU;AACV,mBAAU,IAAI,WAAa;AAE3B,mBAAS,OAAO;AAChB,eAAK,MAAM,KAAK,KAAK;AAAA;AAGvB,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK;AAChB,eAAK;AAAA;AAGP,eAAO;AAAA;AAGT,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAI5B,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,IAAI;AAAA;AAIlB,SAAG,UAAU,OAAO,gBAAiB;AACnC,eAAO,KAAK,KAAK,KAAK;AAAA;AAIxB,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,IAAI,WAAW;AACnB,YAAI,EAAE,WAAW;AAAG,iBAAO,IAAI,GAAG;AAGlC,YAAI,MAAM;AACV,iBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,MAAM,IAAI,OAAO;AAClD,cAAI,EAAE,OAAO;AAAG;AAAA;AAGlB,YAAI,EAAE,IAAI,EAAE,QAAQ;AAClB,mBAAS,IAAI,IAAI,OAAO,IAAI,EAAE,QAAQ,KAAK,IAAI,EAAE,OAAO;AACtD,gBAAI,EAAE,OAAO;AAAG;AAEhB,kBAAM,IAAI,IAAI;AAAA;AAAA;AAIlB,eAAO;AAAA;AAIT,SAAG,UAAU,SAAS,gBAAiB,MAAM;AAC3C,eAAO,OAAO,SAAS,YAAY,QAAQ;AAC3C,YAAI,IAAI,OAAO;AACf,YAAI,IAAK,QAAO,KAAK;AACrB,YAAI,YAAa,aAAe,KAAK,KAAQ,KAAK;AAClD,YAAI;AAEJ,YAAI,MAAM,GAAG;AACX,cAAI,QAAQ;AAEZ,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,gBAAI,WAAW,KAAK,MAAM,KAAK;AAC/B,gBAAI,IAAM,MAAK,MAAM,KAAK,KAAK,YAAa;AAC5C,iBAAK,MAAM,KAAK,IAAI;AACpB,oBAAQ,aAAc,KAAK;AAAA;AAG7B,cAAI,OAAO;AACT,iBAAK,MAAM,KAAK;AAChB,iBAAK;AAAA;AAAA;AAIT,YAAI,MAAM,GAAG;AACX,eAAK,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACrC,iBAAK,MAAM,IAAI,KAAK,KAAK,MAAM;AAAA;AAGjC,eAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,iBAAK,MAAM,KAAK;AAAA;AAGlB,eAAK,UAAU;AAAA;AAGjB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,QAAQ,eAAgB,MAAM;AAEzC,eAAO,KAAK,aAAa;AACzB,eAAO,KAAK,OAAO;AAAA;AAMrB,SAAG,UAAU,SAAS,gBAAiB,MAAM,MAAM,UAAU;AAC3D,eAAO,OAAO,SAAS,YAAY,QAAQ;AAC3C,YAAI;AACJ,YAAI,MAAM;AACR,cAAK,QAAQ,OAAO,MAAO;AAAA,eACtB;AACL,cAAI;AAAA;AAGN,YAAI,IAAI,OAAO;AACf,YAAI,IAAI,KAAK,IAAK,QAAO,KAAK,IAAI,KAAK;AACvC,YAAI,OAAO,WAAc,aAAc,KAAM;AAC7C,YAAI,cAAc;AAElB,aAAK;AACL,YAAI,KAAK,IAAI,GAAG;AAGhB,YAAI,aAAa;AACf,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,wBAAY,MAAM,KAAK,KAAK,MAAM;AAAA;AAEpC,sBAAY,SAAS;AAAA;AAGvB,YAAI,MAAM,GAAG;AAAA,mBAEF,KAAK,SAAS,GAAG;AAC1B,eAAK,UAAU;AACf,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,iBAAK,MAAM,KAAK,KAAK,MAAM,IAAI;AAAA;AAAA,eAE5B;AACL,eAAK,MAAM,KAAK;AAChB,eAAK,SAAS;AAAA;AAGhB,YAAI,QAAQ;AACZ,aAAK,IAAI,KAAK,SAAS,GAAG,KAAK,KAAM,WAAU,KAAK,KAAK,IAAI,KAAK;AAChE,cAAI,OAAO,KAAK,MAAM,KAAK;AAC3B,eAAK,MAAM,KAAM,SAAU,KAAK,IAAO,SAAS;AAChD,kBAAQ,OAAO;AAAA;AAIjB,YAAI,eAAe,UAAU,GAAG;AAC9B,sBAAY,MAAM,YAAY,YAAY;AAAA;AAG5C,YAAI,KAAK,WAAW,GAAG;AACrB,eAAK,MAAM,KAAK;AAChB,eAAK,SAAS;AAAA;AAGhB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,QAAQ,eAAgB,MAAM,MAAM,UAAU;AAEzD,eAAO,KAAK,aAAa;AACzB,eAAO,KAAK,OAAO,MAAM,MAAM;AAAA;AAIjC,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,QAAQ,OAAO;AAAA;AAI7B,SAAG,UAAU,OAAO,cAAe,MAAM;AACvC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,QAAQ,OAAO;AAAA;AAI7B,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ,YAAY,OAAO;AACzC,YAAI,IAAI,MAAM;AACd,YAAI,IAAK,OAAM,KAAK;AACpB,YAAI,IAAI,KAAK;AAGb,YAAI,KAAK,UAAU;AAAG,iBAAO;AAG7B,YAAI,IAAI,KAAK,MAAM;AAEnB,eAAO,CAAC,CAAE,KAAI;AAAA;AAIhB,SAAG,UAAU,SAAS,gBAAiB,MAAM;AAC3C,eAAO,OAAO,SAAS,YAAY,QAAQ;AAC3C,YAAI,IAAI,OAAO;AACf,YAAI,IAAK,QAAO,KAAK;AAErB,eAAO,KAAK,aAAa,GAAG;AAE5B,YAAI,KAAK,UAAU,GAAG;AACpB,iBAAO;AAAA;AAGT,YAAI,MAAM,GAAG;AACX;AAAA;AAEF,aAAK,SAAS,KAAK,IAAI,GAAG,KAAK;AAE/B,YAAI,MAAM,GAAG;AACX,cAAI,OAAO,WAAc,aAAc,KAAM;AAC7C,eAAK,MAAM,KAAK,SAAS,MAAM;AAAA;AAGjC,eAAO,KAAK;AAAA;AAId,SAAG,UAAU,QAAQ,eAAgB,MAAM;AACzC,eAAO,KAAK,QAAQ,OAAO;AAAA;AAI7B,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ;AACtB,eAAO,MAAM;AACb,YAAI,MAAM;AAAG,iBAAO,KAAK,MAAM,CAAC;AAGhC,YAAI,KAAK,aAAa,GAAG;AACvB,cAAI,KAAK,WAAW,KAAM,MAAK,MAAM,KAAK,KAAK,KAAK;AAClD,iBAAK,MAAM,KAAK,MAAO,MAAK,MAAM,KAAK;AACvC,iBAAK,WAAW;AAChB,mBAAO;AAAA;AAGT,eAAK,WAAW;AAChB,eAAK,MAAM;AACX,eAAK,WAAW;AAChB,iBAAO;AAAA;AAIT,eAAO,KAAK,OAAO;AAAA;AAGrB,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,aAAK,MAAM,MAAM;AAGjB,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,KAAK,MAAM,MAAM,UAAW,KAAK;AAClE,eAAK,MAAM,MAAM;AACjB,cAAI,MAAM,KAAK,SAAS,GAAG;AACzB,iBAAK,MAAM,IAAI,KAAK;AAAA,iBACf;AACL,iBAAK,MAAM,IAAI;AAAA;AAAA;AAGnB,aAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,IAAI;AAExC,eAAO;AAAA;AAIT,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ;AACtB,eAAO,MAAM;AACb,YAAI,MAAM;AAAG,iBAAO,KAAK,MAAM,CAAC;AAEhC,YAAI,KAAK,aAAa,GAAG;AACvB,eAAK,WAAW;AAChB,eAAK,MAAM;AACX,eAAK,WAAW;AAChB,iBAAO;AAAA;AAGT,aAAK,MAAM,MAAM;AAEjB,YAAI,KAAK,WAAW,KAAK,KAAK,MAAM,KAAK,GAAG;AAC1C,eAAK,MAAM,KAAK,CAAC,KAAK,MAAM;AAC5B,eAAK,WAAW;AAAA,eACX;AAEL,mBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,KAAK,MAAM,KAAK,GAAG,KAAK;AACzD,iBAAK,MAAM,MAAM;AACjB,iBAAK,MAAM,IAAI,MAAM;AAAA;AAAA;AAIzB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,OAAO,gBAAiB;AACnC,aAAK,WAAW;AAEhB,eAAO;AAAA;AAGT,SAAG,UAAU,MAAM,eAAgB;AACjC,eAAO,KAAK,QAAQ;AAAA;AAGtB,SAAG,UAAU,eAAe,sBAAuB,KAAK,KAAK,OAAO;AAClE,YAAI,MAAM,IAAI,SAAS;AACvB,YAAI;AAEJ,aAAK,QAAQ;AAEb,YAAI;AACJ,YAAI,QAAQ;AACZ,aAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AAC/B,cAAK,MAAK,MAAM,IAAI,SAAS,KAAK;AAClC,cAAI,QAAS,KAAI,MAAM,KAAK,KAAK;AACjC,eAAK,QAAQ;AACb,kBAAS,MAAK,MAAQ,SAAQ,WAAa;AAC3C,eAAK,MAAM,IAAI,SAAS,IAAI;AAAA;AAE9B,eAAO,IAAI,KAAK,SAAS,OAAO,KAAK;AACnC,cAAK,MAAK,MAAM,IAAI,SAAS,KAAK;AAClC,kBAAQ,KAAK;AACb,eAAK,MAAM,IAAI,SAAS,IAAI;AAAA;AAG9B,YAAI,UAAU;AAAG,iBAAO,KAAK;AAG7B,eAAO,UAAU;AACjB,gBAAQ;AACR,aAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,cAAI,CAAE,MAAK,MAAM,KAAK,KAAK;AAC3B,kBAAQ,KAAK;AACb,eAAK,MAAM,KAAK,IAAI;AAAA;AAEtB,aAAK,WAAW;AAEhB,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,WAAW,kBAAmB,KAAK,MAAM;AACpD,YAAI,QAAQ,KAAK,SAAS,IAAI;AAE9B,YAAI,IAAI,KAAK;AACb,YAAI,IAAI;AAGR,YAAI,MAAM,EAAE,MAAM,EAAE,SAAS,KAAK;AAClC,YAAI,UAAU,KAAK,WAAW;AAC9B,gBAAQ,KAAK;AACb,YAAI,UAAU,GAAG;AACf,cAAI,EAAE,MAAM;AACZ,YAAE,OAAO;AACT,gBAAM,EAAE,MAAM,EAAE,SAAS,KAAK;AAAA;AAIhC,YAAI,IAAI,EAAE,SAAS,EAAE;AACrB,YAAI;AAEJ,YAAI,SAAS,OAAO;AAClB,cAAI,IAAI,GAAG;AACX,YAAE,SAAS,IAAI;AACf,YAAE,QAAQ,IAAI,MAAM,EAAE;AACtB,mBAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK;AACjC,cAAE,MAAM,KAAK;AAAA;AAAA;AAIjB,YAAI,OAAO,EAAE,QAAQ,aAAa,GAAG,GAAG;AACxC,YAAI,KAAK,aAAa,GAAG;AACvB,cAAI;AACJ,cAAI,GAAG;AACL,cAAE,MAAM,KAAK;AAAA;AAAA;AAIjB,iBAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC/B,cAAI,KAAM,GAAE,MAAM,EAAE,SAAS,KAAK,KAAK,WACpC,GAAE,MAAM,EAAE,SAAS,IAAI,KAAK;AAI/B,eAAK,KAAK,IAAK,KAAK,MAAO,GAAG;AAE9B,YAAE,aAAa,GAAG,IAAI;AACtB,iBAAO,EAAE,aAAa,GAAG;AACvB;AACA,cAAE,WAAW;AACb,cAAE,aAAa,GAAG,GAAG;AACrB,gBAAI,CAAC,EAAE,UAAU;AACf,gBAAE,YAAY;AAAA;AAAA;AAGlB,cAAI,GAAG;AACL,cAAE,MAAM,KAAK;AAAA;AAAA;AAGjB,YAAI,GAAG;AACL,YAAE;AAAA;AAEJ,UAAE;AAGF,YAAI,SAAS,SAAS,UAAU,GAAG;AACjC,YAAE,OAAO;AAAA;AAGX,eAAO;AAAA,UACL,KAAK,KAAK;AAAA,UACV,KAAK;AAAA;AAAA;AAQT,SAAG,UAAU,SAAS,gBAAiB,KAAK,MAAM,UAAU;AAC1D,eAAO,CAAC,IAAI;AAEZ,YAAI,KAAK,UAAU;AACjB,iBAAO;AAAA,YACL,KAAK,IAAI,GAAG;AAAA,YACZ,KAAK,IAAI,GAAG;AAAA;AAAA;AAIhB,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,gBAAM,KAAK,MAAM,OAAO,KAAK;AAE7B,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI;AAAA;AAGhB,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI;AACd,gBAAI,YAAY,IAAI,aAAa,GAAG;AAClC,kBAAI,KAAK;AAAA;AAAA;AAIb,iBAAO;AAAA,YACL;AAAA,YACA;AAAA;AAAA;AAIJ,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa,GAAG;AAC7C,gBAAM,KAAK,OAAO,IAAI,OAAO;AAE7B,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI;AAAA;AAGhB,iBAAO;AAAA,YACL;AAAA,YACA,KAAK,IAAI;AAAA;AAAA;AAIb,YAAK,MAAK,WAAW,IAAI,cAAc,GAAG;AACxC,gBAAM,KAAK,MAAM,OAAO,IAAI,OAAO;AAEnC,cAAI,SAAS,OAAO;AAClB,kBAAM,IAAI,IAAI;AACd,gBAAI,YAAY,IAAI,aAAa,GAAG;AAClC,kBAAI,KAAK;AAAA;AAAA;AAIb,iBAAO;AAAA,YACL,KAAK,IAAI;AAAA,YACT;AAAA;AAAA;AAOJ,YAAI,IAAI,SAAS,KAAK,UAAU,KAAK,IAAI,OAAO,GAAG;AACjD,iBAAO;AAAA,YACL,KAAK,IAAI,GAAG;AAAA,YACZ,KAAK;AAAA;AAAA;AAKT,YAAI,IAAI,WAAW,GAAG;AACpB,cAAI,SAAS,OAAO;AAClB,mBAAO;AAAA,cACL,KAAK,KAAK,KAAK,IAAI,MAAM;AAAA,cACzB,KAAK;AAAA;AAAA;AAIT,cAAI,SAAS,OAAO;AAClB,mBAAO;AAAA,cACL,KAAK;AAAA,cACL,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,MAAM;AAAA;AAAA;AAIpC,iBAAO;AAAA,YACL,KAAK,KAAK,KAAK,IAAI,MAAM;AAAA,YACzB,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,MAAM;AAAA;AAAA;AAIpC,eAAO,KAAK,SAAS,KAAK;AAAA;AAI5B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,OAAO,KAAK,OAAO,OAAO;AAAA;AAIxC,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,OAAO,KAAK,OAAO,OAAO;AAAA;AAGxC,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,OAAO,KAAK,OAAO,MAAM;AAAA;AAIvC,SAAG,UAAU,WAAW,kBAAmB,KAAK;AAC9C,YAAI,KAAK,KAAK,OAAO;AAGrB,YAAI,GAAG,IAAI;AAAU,iBAAO,GAAG;AAE/B,YAAI,MAAM,GAAG,IAAI,aAAa,IAAI,GAAG,IAAI,KAAK,OAAO,GAAG;AAExD,YAAI,OAAO,IAAI,MAAM;AACrB,YAAI,KAAK,IAAI,MAAM;AACnB,YAAI,MAAM,IAAI,IAAI;AAGlB,YAAI,MAAM,KAAK,OAAO,KAAK,QAAQ;AAAG,iBAAO,GAAG;AAGhD,eAAO,GAAG,IAAI,aAAa,IAAI,GAAG,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM;AAAA;AAGhE,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,OAAO;AACd,YAAI,IAAK,MAAK,MAAM;AAEpB,YAAI,MAAM;AACV,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,gBAAO,KAAI,MAAO,MAAK,MAAM,KAAK,MAAM;AAAA;AAG1C,eAAO;AAAA;AAIT,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO;AAEd,YAAI,QAAQ;AACZ,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,cAAI,IAAK,MAAK,MAAM,KAAK,KAAK,QAAQ;AACtC,eAAK,MAAM,KAAM,IAAI,MAAO;AAC5B,kBAAQ,IAAI;AAAA;AAGd,eAAO,KAAK;AAAA;AAGd,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,QAAQ,MAAM;AAAA;AAG5B,SAAG,UAAU,OAAO,cAAe,GAAG;AACpC,eAAO,EAAE,aAAa;AACtB,eAAO,CAAC,EAAE;AAEV,YAAI,IAAI;AACR,YAAI,IAAI,EAAE;AAEV,YAAI,EAAE,aAAa,GAAG;AACpB,cAAI,EAAE,KAAK;AAAA,eACN;AACL,cAAI,EAAE;AAAA;AAIR,YAAI,IAAI,IAAI,GAAG;AACf,YAAI,IAAI,IAAI,GAAG;AAGf,YAAI,IAAI,IAAI,GAAG;AACf,YAAI,IAAI,IAAI,GAAG;AAEf,YAAI,IAAI;AAER,eAAO,EAAE,YAAY,EAAE,UAAU;AAC/B,YAAE,OAAO;AACT,YAAE,OAAO;AACT,YAAE;AAAA;AAGJ,YAAI,KAAK,EAAE;AACX,YAAI,KAAK,EAAE;AAEX,eAAO,CAAC,EAAE,UAAU;AAClB,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO;AACT,mBAAO,MAAM,GAAG;AACd,kBAAI,EAAE,WAAW,EAAE,SAAS;AAC1B,kBAAE,KAAK;AACP,kBAAE,KAAK;AAAA;AAGT,gBAAE,OAAO;AACT,gBAAE,OAAO;AAAA;AAAA;AAIb,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO;AACT,mBAAO,MAAM,GAAG;AACd,kBAAI,EAAE,WAAW,EAAE,SAAS;AAC1B,kBAAE,KAAK;AACP,kBAAE,KAAK;AAAA;AAGT,gBAAE,OAAO;AACT,gBAAE,OAAO;AAAA;AAAA;AAIb,cAAI,EAAE,IAAI,MAAM,GAAG;AACjB,cAAE,KAAK;AACP,cAAE,KAAK;AACP,cAAE,KAAK;AAAA,iBACF;AACL,cAAE,KAAK;AACP,cAAE,KAAK;AACP,cAAE,KAAK;AAAA;AAAA;AAIX,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,KAAK,EAAE,OAAO;AAAA;AAAA;AAOlB,SAAG,UAAU,SAAS,gBAAiB,GAAG;AACxC,eAAO,EAAE,aAAa;AACtB,eAAO,CAAC,EAAE;AAEV,YAAI,IAAI;AACR,YAAI,IAAI,EAAE;AAEV,YAAI,EAAE,aAAa,GAAG;AACpB,cAAI,EAAE,KAAK;AAAA,eACN;AACL,cAAI,EAAE;AAAA;AAGR,YAAI,KAAK,IAAI,GAAG;AAChB,YAAI,KAAK,IAAI,GAAG;AAEhB,YAAI,QAAQ,EAAE;AAEd,eAAO,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK,KAAK,GAAG;AACrC,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO;AACT,mBAAO,MAAM,GAAG;AACd,kBAAI,GAAG,SAAS;AACd,mBAAG,KAAK;AAAA;AAGV,iBAAG,OAAO;AAAA;AAAA;AAId,mBAAS,IAAI,GAAG,KAAK,GAAI,GAAE,MAAM,KAAK,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,OAAO;AAAE;AACzE,cAAI,IAAI,GAAG;AACT,cAAE,OAAO;AACT,mBAAO,MAAM,GAAG;AACd,kBAAI,GAAG,SAAS;AACd,mBAAG,KAAK;AAAA;AAGV,iBAAG,OAAO;AAAA;AAAA;AAId,cAAI,EAAE,IAAI,MAAM,GAAG;AACjB,cAAE,KAAK;AACP,eAAG,KAAK;AAAA,iBACH;AACL,cAAE,KAAK;AACP,eAAG,KAAK;AAAA;AAAA;AAIZ,YAAI;AACJ,YAAI,EAAE,KAAK,OAAO,GAAG;AACnB,gBAAM;AAAA,eACD;AACL,gBAAM;AAAA;AAGR,YAAI,IAAI,KAAK,KAAK,GAAG;AACnB,cAAI,KAAK;AAAA;AAGX,eAAO;AAAA;AAGT,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK;AAAU,iBAAO,IAAI;AAC9B,YAAI,IAAI;AAAU,iBAAO,KAAK;AAE9B,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,IAAI;AACZ,UAAE,WAAW;AACb,UAAE,WAAW;AAGb,iBAAS,QAAQ,GAAG,EAAE,YAAY,EAAE,UAAU,SAAS;AACrD,YAAE,OAAO;AACT,YAAE,OAAO;AAAA;AAGX,WAAG;AACD,iBAAO,EAAE,UAAU;AACjB,cAAE,OAAO;AAAA;AAEX,iBAAO,EAAE,UAAU;AACjB,cAAE,OAAO;AAAA;AAGX,cAAI,IAAI,EAAE,IAAI;AACd,cAAI,IAAI,GAAG;AAET,gBAAI,IAAI;AACR,gBAAI;AACJ,gBAAI;AAAA,qBACK,MAAM,KAAK,EAAE,KAAK,OAAO,GAAG;AACrC;AAAA;AAGF,YAAE,KAAK;AAAA,iBACA;AAET,eAAO,EAAE,OAAO;AAAA;AAIlB,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,KAAK,EAAE,KAAK;AAAA;AAG/B,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAQ,MAAK,MAAM,KAAK,OAAO;AAAA;AAGjC,SAAG,UAAU,QAAQ,iBAAkB;AACrC,eAAQ,MAAK,MAAM,KAAK,OAAO;AAAA;AAIjC,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,KAAK,MAAM,KAAK;AAAA;AAIzB,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,OAAO,QAAQ;AACtB,YAAI,IAAI,MAAM;AACd,YAAI,IAAK,OAAM,KAAK;AACpB,YAAI,IAAI,KAAK;AAGb,YAAI,KAAK,UAAU,GAAG;AACpB,eAAK,QAAQ,IAAI;AACjB,eAAK,MAAM,MAAM;AACjB,iBAAO;AAAA;AAIT,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,UAAU,KAAK,IAAI,KAAK,QAAQ,KAAK;AACnD,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,eAAK;AACL,kBAAQ,MAAM;AACd,eAAK;AACL,eAAK,MAAM,KAAK;AAAA;AAElB,YAAI,UAAU,GAAG;AACf,eAAK,MAAM,KAAK;AAChB,eAAK;AAAA;AAEP,eAAO;AAAA;AAGT,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,WAAW,KAAK,KAAK,MAAM,OAAO;AAAA;AAGhD,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,YAAI,WAAW,MAAM;AAErB,YAAI,KAAK,aAAa,KAAK,CAAC;AAAU,iBAAO;AAC7C,YAAI,KAAK,aAAa,KAAK;AAAU,iBAAO;AAE5C,aAAK;AAEL,YAAI;AACJ,YAAI,KAAK,SAAS,GAAG;AACnB,gBAAM;AAAA,eACD;AACL,cAAI,UAAU;AACZ,kBAAM,CAAC;AAAA;AAGT,iBAAO,OAAO,UAAW;AAEzB,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,gBAAM,MAAM,MAAM,IAAI,IAAI,MAAM,KAAK;AAAA;AAEvC,YAAI,KAAK,aAAa;AAAG,iBAAO,CAAC,MAAM;AACvC,eAAO;AAAA;AAOT,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa;AAAG,iBAAO;AACtD,YAAI,KAAK,aAAa,KAAK,IAAI,aAAa;AAAG,iBAAO;AAEtD,YAAI,MAAM,KAAK,KAAK;AACpB,YAAI,KAAK,aAAa;AAAG,iBAAO,CAAC,MAAM;AACvC,eAAO;AAAA;AAIT,SAAG,UAAU,OAAO,cAAe,KAAK;AAEtC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO;AACrC,YAAI,KAAK,SAAS,IAAI;AAAQ,iBAAO;AAErC,YAAI,MAAM;AACV,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACzC,cAAI,IAAI,KAAK,MAAM,KAAK;AACxB,cAAI,IAAI,IAAI,MAAM,KAAK;AAEvB,cAAI,MAAM;AAAG;AACb,cAAI,IAAI,GAAG;AACT,kBAAM;AAAA,qBACG,IAAI,GAAG;AAChB,kBAAM;AAAA;AAER;AAAA;AAEF,eAAO;AAAA;AAGT,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,SAAS;AAAA;AAG5B,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,SAAS;AAAA;AAG3B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,QAAQ;AAAA;AAG3B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,IAAI,QAAQ;AAAA;AAG1B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,SAAS;AAAA;AAG5B,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,SAAS;AAAA;AAG3B,SAAG,UAAU,OAAO,cAAe,KAAK;AACtC,eAAO,KAAK,KAAK,QAAQ;AAAA;AAG3B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,IAAI,QAAQ;AAAA;AAG1B,SAAG,UAAU,MAAM,aAAc,KAAK;AACpC,eAAO,KAAK,KAAK,SAAS;AAAA;AAG5B,SAAG,UAAU,KAAK,YAAa,KAAK;AAClC,eAAO,KAAK,IAAI,SAAS;AAAA;AAO3B,SAAG,MAAM,aAAc,KAAK;AAC1B,eAAO,IAAI,IAAI;AAAA;AAGjB,SAAG,UAAU,QAAQ,eAAgB,KAAK;AACxC,eAAO,CAAC,KAAK,KAAK;AAClB,eAAO,KAAK,aAAa,GAAG;AAC5B,eAAO,IAAI,UAAU,MAAM,UAAU;AAAA;AAGvC,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,YAAY;AAAA;AAG9B,SAAG,UAAU,YAAY,mBAAoB,KAAK;AAChD,aAAK,MAAM;AACX,eAAO;AAAA;AAGT,SAAG,UAAU,WAAW,kBAAmB,KAAK;AAC9C,eAAO,CAAC,KAAK,KAAK;AAClB,eAAO,KAAK,UAAU;AAAA;AAGxB,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAG5B,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,KAAK,MAAM;AAAA;AAG7B,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAG5B,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,KAAK,MAAM;AAAA;AAG7B,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAG5B,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS,MAAM;AACxB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAG5B,SAAG,UAAU,UAAU,iBAAkB,KAAK;AAC5C,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS,MAAM;AACxB,eAAO,KAAK,IAAI,KAAK,MAAM;AAAA;AAG7B,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,IAAI;AAAA;AAGtB,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,KAAK;AAAA;AAIvB,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,KAAK;AAAA;AAGvB,SAAG,UAAU,UAAU,mBAAoB;AACzC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,KAAK;AAAA;AAIvB,SAAG,UAAU,SAAS,kBAAmB;AACvC,eAAO,KAAK,KAAK;AACjB,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,IAAI;AAAA;AAGtB,SAAG,UAAU,SAAS,gBAAiB,KAAK;AAC1C,eAAO,KAAK,OAAO,CAAC,IAAI,KAAK;AAC7B,aAAK,IAAI,SAAS;AAClB,eAAO,KAAK,IAAI,IAAI,MAAM;AAAA;AAI5B,UAAI,SAAS;AAAA,QACX,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,QAAQ;AAAA;AAIV,sBAAiB,MAAM,GAAG;AAExB,aAAK,OAAO;AACZ,aAAK,IAAI,IAAI,GAAG,GAAG;AACnB,aAAK,IAAI,KAAK,EAAE;AAChB,aAAK,IAAI,IAAI,GAAG,GAAG,OAAO,KAAK,GAAG,KAAK,KAAK;AAE5C,aAAK,MAAM,KAAK;AAAA;AAGlB,aAAO,UAAU,OAAO,gBAAiB;AACvC,YAAI,MAAM,IAAI,GAAG;AACjB,YAAI,QAAQ,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI;AACzC,eAAO;AAAA;AAGT,aAAO,UAAU,UAAU,iBAAkB,KAAK;AAGhD,YAAI,IAAI;AACR,YAAI;AAEJ,WAAG;AACD,eAAK,MAAM,GAAG,KAAK;AACnB,cAAI,KAAK,MAAM;AACf,cAAI,EAAE,KAAK,KAAK;AAChB,iBAAO,EAAE;AAAA,iBACF,OAAO,KAAK;AAErB,YAAI,MAAM,OAAO,KAAK,IAAI,KAAK,EAAE,KAAK,KAAK;AAC3C,YAAI,QAAQ,GAAG;AACb,YAAE,MAAM,KAAK;AACb,YAAE,SAAS;AAAA,mBACF,MAAM,GAAG;AAClB,YAAE,KAAK,KAAK;AAAA,eACP;AACL,cAAI,EAAE,UAAU,QAAW;AAEzB,cAAE;AAAA,iBACG;AAEL,cAAE;AAAA;AAAA;AAIN,eAAO;AAAA;AAGT,aAAO,UAAU,QAAQ,eAAgB,OAAO,KAAK;AACnD,cAAM,OAAO,KAAK,GAAG,GAAG;AAAA;AAG1B,aAAO,UAAU,QAAQ,eAAgB,KAAK;AAC5C,eAAO,IAAI,KAAK,KAAK;AAAA;AAGvB,sBAAiB;AACf,eAAO,KACL,MACA,QACA;AAAA;AAEJ,eAAS,MAAM;AAEf,WAAK,UAAU,QAAQ,eAAgB,OAAO,QAAQ;AAEpD,YAAI,OAAO;AAEX,YAAI,SAAS,KAAK,IAAI,MAAM,QAAQ;AACpC,iBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,iBAAO,MAAM,KAAK,MAAM,MAAM;AAAA;AAEhC,eAAO,SAAS;AAEhB,YAAI,MAAM,UAAU,GAAG;AACrB,gBAAM,MAAM,KAAK;AACjB,gBAAM,SAAS;AACf;AAAA;AAIF,YAAI,OAAO,MAAM,MAAM;AACvB,eAAO,MAAM,OAAO,YAAY,OAAO;AAEvC,aAAK,IAAI,IAAI,IAAI,MAAM,QAAQ,KAAK;AAClC,cAAI,OAAO,MAAM,MAAM,KAAK;AAC5B,gBAAM,MAAM,IAAI,MAAQ,QAAO,SAAS,IAAM,SAAS;AACvD,iBAAO;AAAA;AAET,kBAAU;AACV,cAAM,MAAM,IAAI,MAAM;AACtB,YAAI,SAAS,KAAK,MAAM,SAAS,IAAI;AACnC,gBAAM,UAAU;AAAA,eACX;AACL,gBAAM,UAAU;AAAA;AAAA;AAIpB,WAAK,UAAU,QAAQ,eAAgB,KAAK;AAE1C,YAAI,MAAM,IAAI,UAAU;AACxB,YAAI,MAAM,IAAI,SAAS,KAAK;AAC5B,YAAI,UAAU;AAGd,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,IAAI,IAAI,MAAM,KAAK;AACvB,gBAAM,IAAI;AACV,cAAI,MAAM,KAAK,KAAK;AACpB,eAAK,IAAI,KAAS,MAAK,WAAa;AAAA;AAItC,YAAI,IAAI,MAAM,IAAI,SAAS,OAAO,GAAG;AACnC,cAAI;AACJ,cAAI,IAAI,MAAM,IAAI,SAAS,OAAO,GAAG;AACnC,gBAAI;AAAA;AAAA;AAGR,eAAO;AAAA;AAGT,sBAAiB;AACf,eAAO,KACL,MACA,QACA;AAAA;AAEJ,eAAS,MAAM;AAEf,sBAAiB;AACf,eAAO,KACL,MACA,QACA;AAAA;AAEJ,eAAS,MAAM;AAEf,wBAAmB;AAEjB,eAAO,KACL,MACA,SACA;AAAA;AAEJ,eAAS,QAAQ;AAEjB,aAAO,UAAU,QAAQ,eAAgB,KAAK;AAE5C,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,KAAM,KAAI,MAAM,KAAK,KAAK,KAAO;AACrC,cAAI,KAAK,KAAK;AACd,kBAAQ;AAER,cAAI,MAAM,KAAK;AACf,kBAAQ;AAAA;AAEV,YAAI,UAAU,GAAG;AACf,cAAI,MAAM,IAAI,YAAY;AAAA;AAE5B,eAAO;AAAA;AAIT,SAAG,SAAS,eAAgB,MAAM;AAEhC,YAAI,OAAO;AAAO,iBAAO,OAAO;AAEhC,YAAI;AACJ,YAAI,SAAS,QAAQ;AACnB,mBAAQ,IAAI;AAAA,mBACH,SAAS,QAAQ;AAC1B,mBAAQ,IAAI;AAAA,mBACH,SAAS,QAAQ;AAC1B,mBAAQ,IAAI;AAAA,mBACH,SAAS,UAAU;AAC5B,mBAAQ,IAAI;AAAA,eACP;AACL,gBAAM,IAAI,MAAM,mBAAmB;AAAA;AAErC,eAAO,QAAQ;AAEf,eAAO;AAAA;AAMT,mBAAc,GAAG;AACf,YAAI,OAAO,MAAM,UAAU;AACzB,cAAI,QAAQ,GAAG,OAAO;AACtB,eAAK,IAAI,MAAM;AACf,eAAK,QAAQ;AAAA,eACR;AACL,iBAAO,EAAE,IAAI,IAAI;AACjB,eAAK,IAAI;AACT,eAAK,QAAQ;AAAA;AAAA;AAIjB,UAAI,UAAU,WAAW,kBAAmB,GAAG;AAC7C,eAAO,EAAE,aAAa,GAAG;AACzB,eAAO,EAAE,KAAK;AAAA;AAGhB,UAAI,UAAU,WAAW,kBAAmB,GAAG,GAAG;AAChD,eAAQ,GAAE,WAAW,EAAE,cAAc,GAAG;AACxC,eAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAC1B;AAAA;AAGJ,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,KAAK;AAAO,iBAAO,KAAK,MAAM,QAAQ,GAAG,UAAU;AACvD,eAAO,EAAE,KAAK,KAAK,GAAG,UAAU;AAAA;AAGlC,UAAI,UAAU,MAAM,aAAc,GAAG;AACnC,YAAI,EAAE,UAAU;AACd,iBAAO,EAAE;AAAA;AAGX,eAAO,KAAK,EAAE,IAAI,GAAG,UAAU;AAAA;AAGjC,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG;AAEjB,YAAI,MAAM,EAAE,IAAI;AAChB,YAAI,IAAI,IAAI,KAAK,MAAM,GAAG;AACxB,cAAI,KAAK,KAAK;AAAA;AAEhB,eAAO,IAAI,UAAU;AAAA;AAGvB,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG;AAEjB,YAAI,MAAM,EAAE,KAAK;AACjB,YAAI,IAAI,IAAI,KAAK,MAAM,GAAG;AACxB,cAAI,KAAK,KAAK;AAAA;AAEhB,eAAO;AAAA;AAGT,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG;AAEjB,YAAI,MAAM,EAAE,IAAI;AAChB,YAAI,IAAI,KAAK,KAAK,GAAG;AACnB,cAAI,KAAK,KAAK;AAAA;AAEhB,eAAO,IAAI,UAAU;AAAA;AAGvB,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG;AAEjB,YAAI,MAAM,EAAE,KAAK;AACjB,YAAI,IAAI,KAAK,KAAK,GAAG;AACnB,cAAI,KAAK,KAAK;AAAA;AAEhB,eAAO;AAAA;AAGT,UAAI,UAAU,MAAM,aAAc,GAAG,KAAK;AACxC,aAAK,SAAS;AACd,eAAO,KAAK,KAAK,EAAE,MAAM;AAAA;AAG3B,UAAI,UAAU,OAAO,cAAe,GAAG,GAAG;AACxC,aAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,EAAE,KAAK;AAAA;AAG1B,UAAI,UAAU,MAAM,aAAc,GAAG,GAAG;AACtC,aAAK,SAAS,GAAG;AACjB,eAAO,KAAK,KAAK,EAAE,IAAI;AAAA;AAGzB,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,eAAO,KAAK,KAAK,GAAG,EAAE;AAAA;AAGxB,UAAI,UAAU,MAAM,aAAc,GAAG;AACnC,eAAO,KAAK,IAAI,GAAG;AAAA;AAGrB,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,EAAE;AAAU,iBAAO,EAAE;AAEzB,YAAI,OAAO,KAAK,EAAE,MAAM;AACxB,eAAO,OAAO,MAAM;AAGpB,YAAI,SAAS,GAAG;AACd,cAAI,MAAM,KAAK,EAAE,IAAI,IAAI,GAAG,IAAI,OAAO;AACvC,iBAAO,KAAK,IAAI,GAAG;AAAA;AAMrB,YAAI,IAAI,KAAK,EAAE,KAAK;AACpB,YAAI,IAAI;AACR,eAAO,CAAC,EAAE,YAAY,EAAE,MAAM,OAAO,GAAG;AACtC;AACA,YAAE,OAAO;AAAA;AAEX,eAAO,CAAC,EAAE;AAEV,YAAI,MAAM,IAAI,GAAG,GAAG,MAAM;AAC1B,YAAI,OAAO,IAAI;AAIf,YAAI,OAAO,KAAK,EAAE,KAAK,GAAG,OAAO;AACjC,YAAI,IAAI,KAAK,EAAE;AACf,YAAI,IAAI,GAAG,IAAI,IAAI,GAAG,MAAM;AAE5B,eAAO,KAAK,IAAI,GAAG,MAAM,IAAI,UAAU,GAAG;AACxC,YAAE,QAAQ;AAAA;AAGZ,YAAI,IAAI,KAAK,IAAI,GAAG;AACpB,YAAI,IAAI,KAAK,IAAI,GAAG,EAAE,KAAK,GAAG,OAAO;AACrC,YAAI,IAAI,KAAK,IAAI,GAAG;AACpB,YAAI,IAAI;AACR,eAAO,EAAE,IAAI,SAAS,GAAG;AACvB,cAAI,MAAM;AACV,mBAAS,IAAI,GAAG,IAAI,IAAI,SAAS,GAAG,KAAK;AACvC,kBAAM,IAAI;AAAA;AAEZ,iBAAO,IAAI;AACX,cAAI,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,OAAO,IAAI,IAAI;AAE7C,cAAI,EAAE,OAAO;AACb,cAAI,EAAE;AACN,cAAI,EAAE,OAAO;AACb,cAAI;AAAA;AAGN,eAAO;AAAA;AAGT,UAAI,UAAU,OAAO,cAAe,GAAG;AACrC,YAAI,MAAM,EAAE,OAAO,KAAK;AACxB,YAAI,IAAI,aAAa,GAAG;AACtB,cAAI,WAAW;AACf,iBAAO,KAAK,KAAK,KAAK;AAAA,eACjB;AACL,iBAAO,KAAK,KAAK;AAAA;AAAA;AAIrB,UAAI,UAAU,MAAM,aAAc,GAAG,KAAK;AACxC,YAAI,IAAI;AAAU,iBAAO,IAAI,GAAG,GAAG,MAAM;AACzC,YAAI,IAAI,KAAK,OAAO;AAAG,iBAAO,EAAE;AAEhC,YAAI,aAAa;AACjB,YAAI,MAAM,IAAI,MAAM,KAAK;AACzB,YAAI,KAAK,IAAI,GAAG,GAAG,MAAM;AACzB,YAAI,KAAK;AACT,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,cAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI;AAAA;AAGhC,YAAI,MAAM,IAAI;AACd,YAAI,UAAU;AACd,YAAI,aAAa;AACjB,YAAI,QAAQ,IAAI,cAAc;AAC9B,YAAI,UAAU,GAAG;AACf,kBAAQ;AAAA;AAGV,aAAK,IAAI,IAAI,SAAS,GAAG,KAAK,GAAG,KAAK;AACpC,cAAI,OAAO,IAAI,MAAM;AACrB,mBAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK;AACnC,gBAAI,MAAO,QAAQ,IAAK;AACxB,gBAAI,QAAQ,IAAI,IAAI;AAClB,oBAAM,KAAK,IAAI;AAAA;AAGjB,gBAAI,QAAQ,KAAK,YAAY,GAAG;AAC9B,2BAAa;AACb;AAAA;AAGF,wBAAY;AACZ,uBAAW;AACX;AACA,gBAAI,eAAe,cAAe,OAAM,KAAK,MAAM;AAAI;AAEvD,kBAAM,KAAK,IAAI,KAAK,IAAI;AACxB,yBAAa;AACb,sBAAU;AAAA;AAEZ,kBAAQ;AAAA;AAGV,eAAO;AAAA;AAGT,UAAI,UAAU,YAAY,mBAAoB,KAAK;AACjD,YAAI,IAAI,IAAI,KAAK,KAAK;AAEtB,eAAO,MAAM,MAAM,EAAE,UAAU;AAAA;AAGjC,UAAI,UAAU,cAAc,qBAAsB,KAAK;AACrD,YAAI,MAAM,IAAI;AACd,YAAI,MAAM;AACV,eAAO;AAAA;AAOT,SAAG,OAAO,cAAe,KAAK;AAC5B,eAAO,IAAI,KAAK;AAAA;AAGlB,oBAAe,GAAG;AAChB,YAAI,KAAK,MAAM;AAEf,aAAK,QAAQ,KAAK,EAAE;AACpB,YAAI,KAAK,QAAQ,OAAO,GAAG;AACzB,eAAK,SAAS,KAAM,KAAK,QAAQ;AAAA;AAGnC,aAAK,IAAI,IAAI,GAAG,GAAG,OAAO,KAAK;AAC/B,aAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AAC3B,aAAK,OAAO,KAAK,EAAE,OAAO,KAAK;AAE/B,aAAK,OAAO,KAAK,KAAK,IAAI,KAAK,GAAG,MAAM,GAAG,IAAI,KAAK;AACpD,aAAK,OAAO,KAAK,KAAK,KAAK,KAAK;AAChC,aAAK,OAAO,KAAK,EAAE,IAAI,KAAK;AAAA;AAE9B,eAAS,MAAM;AAEf,WAAK,UAAU,YAAY,mBAAoB,KAAK;AAClD,eAAO,KAAK,KAAK,IAAI,MAAM,KAAK;AAAA;AAGlC,WAAK,UAAU,cAAc,qBAAsB,KAAK;AACtD,YAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK;AAC/B,UAAE,MAAM;AACR,eAAO;AAAA;AAGT,WAAK,UAAU,OAAO,cAAe,GAAG,GAAG;AACzC,YAAI,EAAE,YAAY,EAAE,UAAU;AAC5B,YAAE,MAAM,KAAK;AACb,YAAE,SAAS;AACX,iBAAO;AAAA;AAGT,YAAI,IAAI,EAAE,KAAK;AACf,YAAI,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,KAAK,MAAM,OAAO,KAAK,OAAO,IAAI,KAAK;AACvE,YAAI,IAAI,EAAE,KAAK,GAAG,OAAO,KAAK;AAC9B,YAAI,MAAM;AAEV,YAAI,EAAE,IAAI,KAAK,MAAM,GAAG;AACtB,gBAAM,EAAE,KAAK,KAAK;AAAA,mBACT,EAAE,KAAK,KAAK,GAAG;AACxB,gBAAM,EAAE,KAAK,KAAK;AAAA;AAGpB,eAAO,IAAI,UAAU;AAAA;AAGvB,WAAK,UAAU,MAAM,aAAc,GAAG,GAAG;AACvC,YAAI,EAAE,YAAY,EAAE;AAAU,iBAAO,IAAI,GAAG,GAAG,UAAU;AAEzD,YAAI,IAAI,EAAE,IAAI;AACd,YAAI,IAAI,EAAE,MAAM,KAAK,OAAO,IAAI,KAAK,MAAM,OAAO,KAAK,OAAO,IAAI,KAAK;AACvE,YAAI,IAAI,EAAE,KAAK,GAAG,OAAO,KAAK;AAC9B,YAAI,MAAM;AACV,YAAI,EAAE,IAAI,KAAK,MAAM,GAAG;AACtB,gBAAM,EAAE,KAAK,KAAK;AAAA,mBACT,EAAE,KAAK,KAAK,GAAG;AACxB,gBAAM,EAAE,KAAK,KAAK;AAAA;AAGpB,eAAO,IAAI,UAAU;AAAA;AAGvB,WAAK,UAAU,OAAO,cAAe,GAAG;AAEtC,YAAI,MAAM,KAAK,KAAK,EAAE,OAAO,KAAK,GAAG,IAAI,KAAK;AAC9C,eAAO,IAAI,UAAU;AAAA;AAAA,OAEtB,OAAO,WAAW,eAAe,QAAQ;AAAA;AAAA;;;;;;;;ACl3G5C,QAAA,KAAA;AACA,QAAM,KAAK,mBAAoB;AAE/B,QAAM,KAAK,IAAI,GAAG;AAClB,QAAM,WAAW,GAAG;AAOpB,YAAQ,mBAAmB,SAAS,YAAoB,YAA0B;AAA1B,UAAA,eAAA,QAAA;AAAA,qBAAA;;AACtD,UAAM,IAAI,IAAI,GAAG;AACjB,UAAI,EAAE,KAAK,SAAS,MAAM,GAAG;AAC3B,cAAM,IAAI,MAAM;;AAGlB,UAAM,QAAQ,GAAG,EAAE,IAAI;AACvB,aAAO,YAAY,MAAM,QAAQ,MAAM,QAAQ;;AAGjD,YAAQ,uBAAuB,SAAS,YAAkB;AACxD,UAAM,KAAK,IAAI,GAAG;AAClB,UAAI,GAAG,KAAK,SAAS,MAAM,KAAK,GAAG,UAAU;AAC3C,cAAM,IAAI,MAAM;;AAGlB,aAAO,GAAG,KAAK,SAAS,GAAG,YAAY,QAAQ,MAAM;;AAGvD,YAAQ,kBAAkB,SAAS,QAAc;AAC/C,UAAI,IAAI,IAAI,GAAG,OAAO;AACtB,UAAI,EAAE,KAAK,SAAS,MAAM,GAAG;AAC3B,YAAI,IAAI,GAAG;;AAGb,UAAI,IAAI,IAAI,GAAG,OAAO;AACtB,UAAI,EAAE,KAAK,SAAS,MAAM,GAAG;AAC3B,YAAI,IAAI,GAAG;;AAGb,aAAO,OAAO,OAAO,CAAC,EAAE,YAAY,QAAQ,MAAM,KAAK,EAAE,YAAY,QAAQ,MAAM;;AAGrF,YAAQ,aAAa,SACnB,WACA,YACA,YAA0B;AAA1B,UAAA,eAAA,QAAA;AAAA,qBAAA;;AAEA,UAAM,QAAQ,GAAG,cAAc;AAE/B,UAAM,SAAS,IAAI,GAAG;AACtB,UAAI,OAAO,KAAK,SAAS,MAAM,KAAK,OAAO,UAAU;AACnD,cAAM,IAAI,MAAM;;AAGlB,UAAM,SAAS,MAAM,IAAI,IAAI;AAC7B,aAAO,YAAY,OAAO,QAAQ,OAAO,QAAQ;;AAGnD,QAAM,cAAc,SAAS,GAAO,GAAO,YAAmB;AAC5D,UAAI;AAEJ,UAAI,YAAY;AACd,oBAAY,OAAO,MAAM;AACzB,kBAAU,KAAK,EAAE,UAAU,IAAO;AAClC,UAAE,YAAY,QAAQ,MAAM,IAAI,KAAK,WAAW;aAC3C;AACL,oBAAY,OAAO,MAAM;AACzB,kBAAU,KAAK;AACf,UAAE,YAAY,QAAQ,MAAM,IAAI,KAAK,WAAW;AAChD,UAAE,YAAY,QAAQ,MAAM,IAAI,KAAK,WAAW;;AAGlD,aAAO;;;;;;;;;;;ACxET,QAAM,mCAAmC,OAAO,KAAK;MAEnqCAAqC,OAAO,KAAK;MAErmBAAmB,SACzB,YACA,WACA,YAA0B;AAA1B,UAAA,eAAA,QAAA;AAAA,qBAAA;;AAEA,UAAM,SAAS,OAAO,KACpB,aAAa,mCAAmC;AAElD,iBAAW,KAAK,QAAQ,aAAa,IAAI;AACzC,gBAAU,KAAK,QAAQ,aAAa,MAAM;AAC1C,aAAO;;AAGT,YAAQ,mBAAmB,SAAS,YAAkB;AACpD,UAAM,SAAS,WAAW;AAG1B,UAAI,QAAQ;AACZ,UAAI,SAAS,QAAQ,KAAK,WAAW,WAAW;AAAM,eAAO;AAC7D,eAAS;AAGT,UAAI,SAAS,QAAQ,KAAK,CAAE,YAAW,SAAS;AAAO,eAAO;AAE9D,UAAM,OAAO,WAAW,SAAS;AACjC,eAAS;AACT,UAAI,OAAO,KAAK,OAAO;AAAG,eAAO;AACjC,UAAI,SAAS,QAAQ;AAAM,eAAO;AAGlC,UAAM,MAAM,WAAW,QAAQ,OAAO,KAAM,QAAO,IAAI,WAAW,QAAQ,OAAO,MAAM,IAAI;AAC3F,eAAS;AACT,UAAI,SAAS,QAAQ;AAAK,eAAO;AAGjC,UACE,SAAS,QAAQ,KACjB,WAAW,WAAW,KACtB,WAAW,QAAQ,OAAO,KAC1B,WAAW,QAAQ,OAAO,GAC1B;AACA,eAAO;;AAET,eAAS;AAGT,UACE,SAAS,QAAQ,KACjB,WAAW,WAAW,KACtB,WAAW,QAAQ,KAAK,MACxB,SAAS,QAAQ,IAAI,WAAW,QAAQ,IACxC;AACA,eAAO;;AAGT,aAAO,WAAW,MAAM,QAAQ,GAAG,QAAQ,IAAI,WAAW,QAAQ;;AAGpE,YAAQ,qBAAqB,SAAS,WAAiB;AACrD,UAAM,IAAI,OAAO,MAAM,IAAI;AAC3B,UAAM,IAAI,OAAO,MAAM,IAAI;AAE3B,UAAM,SAAS,UAAU;AACzB,UAAI,QAAQ;AAGZ,UAAI,UAAU,aAAa,IAAM;AAC/B,eAAO;;AAIT,UAAI,UAAU,UAAU;AACxB,UAAI,UAAU,KAAM;AAClB,iBAAS,UAAU;AACnB,YAAI,QAAQ,QAAQ;AAClB,iBAAO;;;AAKX,UAAI,UAAU,aAAa,GAAM;AAC/B,eAAO;;AAIT,UAAI,OAAO,UAAU;AACrB,UAAI,OAAO,KAAM;AACf,kBAAU,OAAO;AACjB,YAAI,QAAQ,UAAU,QAAQ;AAC5B,iBAAO;;AAET,eAAO,UAAU,KAAK,UAAU,WAAW,GAAM,SAAS,GAAG,WAAW;AAAE;AAC1E,aAAK,OAAO,GAAG,UAAU,GAAG,SAAS,GAAG,WAAW;AAAG,iBAAQ,SAAQ,KAAK,UAAU;;AAEvF,UAAI,OAAO,SAAS,OAAO;AACzB,eAAO;;AAET,UAAI,SAAS;AACb,eAAS;AAGT,UAAI,UAAU,aAAa,GAAM;AAC/B,eAAO;;AAIT,UAAI,OAAO,UAAU;AACrB,UAAI,OAAO,KAAM;AACf,kBAAU,OAAO;AACjB,YAAI,QAAQ,UAAU,QAAQ;AAC5B,iBAAO;;AAET,eAAO,UAAU,KAAK,UAAU,WAAW,GAAM,SAAS,GAAG,WAAW;AAAE;AAC1E,aAAK,OAAO,GAAG,UAAU,GAAG,SAAS,GAAG,WAAW;AAAG,iBAAQ,SAAQ,KAAK,UAAU;;AAEvF,UAAI,OAAO,SAAS,OAAO;AACzB,eAAO;;AAET,UAAI,SAAS;AACb,eAAS;AAGT,aAAO,OAAO,KAAK,UAAU,YAAY,GAAM,QAAQ,GAAG,UAAU;AAAE;AAEtE,UAAI,OAAO,IAAI;AACb,eAAO;;AAET,UAAM,SAAS,UAAU,MAAM,QAAQ,SAAS;AAChD,aAAO,KAAK,GAAG,KAAK,OAAO;AAG3B,aAAO,OAAO,KAAK,UAAU,YAAY,GAAM,QAAQ,GAAG,UAAU;AAAE;AAEtE,UAAI,OAAO,IAAI;AACb,eAAO;;AAET,UAAM,SAAS,UAAU,MAAM,QAAQ,SAAS;AAChD,aAAO,KAAK,GAAG,KAAK,OAAO;AAE3B,aAAO,EAAE,GAAM;;;;;;;;;;;;AC3oBjB,QAAM,YAAY;AAClB,QAAM,cAAc;AACpB,QAAM,MAAM;AA8BC,YAAA,mBAAmB,SAAS,YAAkB;AAEzD,UAAI,WAAW,WAAW,IAAI;AAC5B,eAAO;;AAGT,aAAO,UAAU,iBAAiB,WAAW,KAAK;;AAUvC,YAAA,mBAAmB,SAAS,YAAoB,YAAoB;AAE/E,UAAI,WAAW,WAAW,IAAI;AAC5B,cAAM,IAAI,WAAW;;AAGvB,UAAM,YAAY,YAAY,iBAAiB,YAAY;AAE3D,aAAO,IAAI,iBAAiB,YAAY,WAAW;;AASxC,YAAA,mBAAmB,SAAS,YAAkB;AAGzD,mBAAa,IAAI,iBAAiB;AAClC,UAAI,eAAe,QAAQ,WAAW,WAAW,MAAM,QAAA,iBAAiB,aAAa;AACnF,eAAO;;AAGT,YAAM,IAAI,MAAM;;AASL,YAAA,mBAAmB,SAAS,YAAkB;AACzD,aAAO,OAAO,KAAK,UAAU,iBAAiB,WAAW,KAAK;;AASnD,YAAA,uBAAuB,SAAS,YAAkB;AAC7D,UAAI,WAAW,WAAW,IAAI;AAC5B,cAAM,IAAI,MAAM;;AAGlB,aAAO,OAAO,KAAK,YAAY,qBAAqB,WAAW,KAAK;;AAUzD,YAAA,qBAAqB,SAAS,YAAoB,OAAa;AAC1E,aAAO,OAAO,KAAK,UAAU,mBAAmB,WAAW,KAAK,aAAa;;AAUlE,YAAA,qBAAqB,SAAS,YAAoB,OAAa;AAC1E,aAAO,OAAO,KACZ,UAAU,mBAAmB,WAAW,KAAK,aAAa,WAAW,KAAK;;AAWjE,YAAA,kBAAkB,SAAS,YAAoB,YAAoB;AAC9E,aAAO,OAAO,KAAK,UAAU,gBAAgB,WAAW,KAAK,aAAa;;AAU/D,YAAA,mBAAmB,SAAS,WAAmB,YAAoB;AAC9E,aAAO,OAAO,KAAK,UAAU,iBAAiB,WAAW,KAAK,YAAY;;AAS/D,YAAA,kBAAkB,SAAS,WAAiB;AAEvD,UAAI,UAAU,WAAW,MAAM,UAAU,WAAW,IAAI;AACtD,eAAO;;AAGT,aAAO,UAAU,gBAAgB,WAAW,KAAK;;AAWtC,YAAA,oBAAoB,SAC/B,WACA,OACA,YAAoB;AAEpB,aAAO,OAAO,KACZ,UAAU,kBAAkB,WAAW,KAAK,YAAY,WAAW,KAAK,QAAQ;;AAYvE,YAAA,oBAAoB,SAC/B,WACA,OACA,YAAoB;AAEpB,aAAO,OAAO,KACZ,UAAU,kBAAkB,WAAW,KAAK,YAAY,WAAW,KAAK,QAAQ;;AAWvE,YAAA,mBAAmB,SAAS,YAAsB,YAAoB;AACjF,UAAM,OAAqB;AAC3B,iBAAW,QAAQ,SAAC,WAAiB;AACnC,aAAK,KAAK,WAAW,KAAK;;AAG5B,aAAO,OAAO,KAAK,UAAU,iBAAiB,MAAM;;AASzC,YAAA,qBAAqB,SAAS,WAAiB;AAC1D,aAAO,OAAO,KAAK,UAAU,mBAAmB,WAAW,KAAK;;AASrD,YAAA,kBAAkB,SAAS,WAAiB;AACvD,aAAO,OAAO,KAAK,UAAU,gBAAgB,WAAW,KAAK;;AASlD,YAAA,kBAAkB,SAAS,WAAiB;AACvD,aAAO,OAAO,KAAK,UAAU,gBAAgB,WAAW,KAAK;;AASlD,YAAA,qBAAqB,SAAS,WAAiB;AAI1D,UAAI,UAAU,WAAW,GAAG;AAC1B,cAAM,IAAI,WAAW;;AAGvB,UAAM,SAAS,IAAI,mBAAmB;AACtC,UAAI,WAAW,MAAM;AACnB,cAAM,IAAI,MAAM;;AAGlB,aAAO,YAAY,gBAAgB;;AAWxB,YAAA,OAAO,SAClB,SACA,YACA,SAAqB;AAErB,UAAI,YAAY,MAAM;AACpB,cAAM,IAAI,UAAU;;AAGtB,UAAI,cAAyC;AAE7C,UAAI,SAAS;AACX,sBAAc;AAEd,YAAI,QAAQ,SAAS,MAAM;AAEzB,gBAAM,IAAI,UAAU;;AAGtB,YAAI,QAAQ,MAAM;AAChB,cAAI,QAAQ,KAAK,UAAU,IAAI;AAC7B,kBAAM,IAAI,WAAW;;AAGvB,sBAAY,OAAO,IAAI,WAAW,QAAQ;;AAG5C,YAAI,QAAQ,YAAY,MAAM;AAC5B,gBAAM,IAAI,UAAU;;AAGtB,YAAI,QAAQ,SAAS;AAEnB,sBAAY,UAAU,SACpB,UACA,aACA,MACA,MACA,SAAe;AAEf,gBAAM,aAA4B,QAAQ,OAAO,OAAO,KAAK,QAAQ;AACrE,gBAAM,aAA4B,QAAQ,OAAO,OAAO,KAAK,QAAQ;AAErE,gBAAI,SAAiB,OAAO,KAAK;AAEjC,gBAAI,QAAQ,SAAS;AACnB,uBAAS,QAAQ,QACf,OAAO,KAAK,WACZ,OAAO,KAAK,cACZ,YACA,YACA;;AAIJ,mBAAO,IAAI,WAAW;;;;AAK5B,UAAM,MAAM,UAAU,UACpB,WAAW,KAAK,UAChB,WAAW,KAAK,aAChB;AAGF,aAAO;QACL,WAAW,OAAO,KAAK,IAAI;QAC3B,UAAU,IAAI;;;AAYL,YAAA,SAAS,SAAS,SAAiB,WAAmB,WAAiB;AAClF,aAAO,UAAU,YAAY,WAAW,KAAK,YAAY,WAAW,KAAK,UAAU;;AAYxE,YAAA,UAAU,SACrB,SACA,WACA,OACA,YAAoB;AAEpB,aAAO,OAAO,KACZ,UAAU,aAAa,WAAW,KAAK,YAAY,OAAO,WAAW,KAAK,UAAU;;AAW3E,YAAA,OAAO,SAAS,WAAmB,YAAkB;AAEhE,aAAO,OAAO,KAAK,UAAU,KAAK,WAAW,KAAK,YAAY,WAAW,KAAK,aAAa;;AAGhF,YAAA,aAAa,SACxB,WACA,YACA,YAAoB;AAKpB,UAAI,UAAU,WAAW,MAAM,UAAU,WAAW,IAAI;AACtD,cAAM,IAAI,WAAW;;AAIvB,UAAI,WAAW,WAAW,IAAI;AAC5B,cAAM,IAAI,WAAW;;AAGvB,aAAO,OAAO,KACZ,YAAY,WAAW,WAAW,KAAK,YAAY,WAAW,KAAK,aAAa;;;;;;;;;;;;ACvZpF,QAAA,KAAA;AAKa,YAAA,cAAkB,IAAI,GACjC,oEACA;AAMW,YAAA,aAAiB,IAAI,GAChC,qEACA;AAMW,YAAA,mBACX;AAKW,YAAA,iBAAyB,OAAO,KAAK,QAAA,kBAAkB;AAKvD,YAAA,wBACX;AAKW,YAAA,sBAA8B,OAAO,KAAK,QAAA,uBAAuB;AAKjE,YAAA,kBACX;AAKW,YAAA,gBAAwB,OAAO,KAAK,QAAA,iBAAiB;;;;;;;;;;;ACjDlE,QAAM,YAAY;AAClB,QAAA,KAAA;AAMa,YAAA,QAAQ,SAAS,OAAa;AACzC,aAAO,OAAO,YAAY,OAAO,KAAK;;AAW3B,YAAA,gBAAgB,SAAS,KAAU,QAAgB,OAAsB;AAAtB,UAAA,UAAA,QAAA;AAAA,gBAAA;;AAC9D,UAAM,MAAM,QAAA,MAAM;AAClB,YAAM,QAAA,SAAS;AACf,UAAI,OAAO;AACT,YAAI,IAAI,SAAS,QAAQ;AACvB,cAAI,KAAK;AACT,iBAAO;;AAET,eAAO,IAAI,MAAM,GAAG;aACf;AACL,YAAI,IAAI,SAAS,QAAQ;AACvB,cAAI,KAAK,KAAK,SAAS,IAAI;AAC3B,iBAAO;;AAET,eAAO,IAAI,MAAM,CAAC;;;AAGT,YAAA,YAAY,QAAA;AASZ,YAAA,iBAAiB,SAAS,KAAU,QAAc;AAC7D,aAAO,QAAA,UAAU,KAAK,QAAQ;;AAQnB,YAAA,QAAQ,SAAS,GAAM;AAClC,UAAI,UAAU,eAAe;AAC7B,UAAI,QAAQ,EAAE;AACd,aAAO,EAAE,SAAS,KAAK,MAAM,eAAe,KAAK;AAC/C,YAAI,EAAE,MAAM;AACZ,gBAAQ,EAAE;;AAEZ,aAAO;;AAEI,YAAA,aAAa,QAAA;AAMb,YAAA,WAAW,SAAS,GAAM;AACrC,UAAI,CAAC,OAAO,SAAS,IAAI;AACvB,YAAI,MAAM,QAAQ,IAAI;AACpB,cAAI,OAAO,KAAK;mBACP,OAAO,MAAM,UAAU;AAChC,cAAI,UAAU,YAAY,IAAI;AAC5B,gBAAI,OAAO,KAAK,UAAU,UAAU,UAAU,eAAe,KAAK;iBAC7D;AACL,kBAAM,IAAI,MACR,gHAA8G;;mBAGzG,OAAO,MAAM,UAAU;AAChC,cAAI,UAAU,YAAY;mBACjB,MAAM,QAAQ,MAAM,QAAW;AACxC,cAAI,OAAO,YAAY;mBACd,GAAG,KAAK,IAAI;AACrB,cAAI,EAAE,YAAY;mBACT,EAAE,SAAS;AAEpB,cAAI,OAAO,KAAK,EAAE;eACb;AACL,gBAAM,IAAI,MAAM;;;AAGpB,aAAO;;AAQI,YAAA,cAAc,SAAS,KAAW;AAC7C,aAAO,IAAI,GAAG,QAAA,SAAS,MAAM;;AAOlB,YAAA,cAAc,SAAS,KAAW;AAC7C,YAAM,QAAA,SAAS;AACf,aAAO,OAAO,IAAI,SAAS;;AAOhB,YAAA,aAAa,SAAS,KAAW;AAC5C,aAAO,IAAI,GAAG,KAAK,SAAS;;AAOjB,YAAA,aAAa,SAAS,KAAO;AACxC,aAAO,OAAO,KAAK,IAAI,OAAO,KAAK;;AAMxB,YAAA,eAAe,SAAS,KAAW;AAC9C,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO;;AAGT,aAAO,UAAU,cAAc,OAAO,MAAM,OAAO;;AAQxC,YAAA,WAAW,SAAS,IAAO;AACtC,UAAI,OAAO,SAAS,KAAK;AACvB,eAAO,OAAK,GAAG,SAAS;iBACf,cAAc,OAAO;AAC9B,YAAM,QAAQ;AACd,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAClC,gBAAM,KAAK,QAAA,SAAS,GAAG;;AAEzB,eAAO;;;;;;;;;;;;;AC3JL,QAAA,KAAuD;AAAvD,QAAE,YAAS,GAAA;AAAX,QAAa,YAAS,GAAA;AAAtB,QAAmC,OAAI,GAAA;AAAvC,QAAyC,YAAS,GAAA;AACxD,QAAM,aAAa;AACnB,QAAM,YAAY;AAClB,QAAA,MAAA;AACA,QAAA,UAAA;AAQa,YAAA,SAAS,SAAS,GAAQ,MAAkB;AAAlB,UAAA,SAAA,QAAA;AAAA,eAAA;;AACrC,UAAI,OAAO,MAAM,YAAY,CAAC,UAAU,YAAY,IAAI;AACtD,YAAI,OAAO,KAAK,GAAG;aACd;AACL,YAAI,QAAA,SAAS;;AAGf,UAAI,CAAC;AAAM,eAAO;AAElB,cAAQ;aACD,KAAK;AACR,iBAAO,UAAU;;aAEd,KAAK;AACR,iBAAO,KAAK;;aAET,KAAK;AACR,iBAAO,UAAU;;aAEd,KAAK;AACR,iBAAO,UAAU;;iBAEV;AACP,gBAAM,IAAI,MAAM,6BAA2B;;;;AASpC,YAAA,YAAY,SAAS,GAAM;AACtC,aAAO,QAAA,OAAO;;AAOH,YAAA,SAAS,SAAS,GAAM;AACnC,UAAI,QAAA,SAAS;AACb,aAAO,WAAW,UACf,OAAO,GACP;;AAQQ,YAAA,YAAY,SAAS,GAAQ,QAAe;AACvD,UAAI,QAAA,SAAS;AACb,UAAM,OAAO,WAAW,UACrB,OAAO,GACP;AACH,UAAI,WAAW,MAAM;AACnB,eAAO,QAAA,UAAU,MAAM;aAClB;AACL,eAAO;;;AAQE,YAAA,UAAU,SAAS,GAAY;AAC1C,aAAO,QAAA,OAAO,IAAI,OAAO;;;;;;;;;;;;ACjF3B,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAM,YAAY;AAClB,QAAA,KAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AAKa,YAAA,cAAc,WAAA;AACzB,UAAM,gBAAgB;AACtB,UAAM,OAAO,QAAA,MAAM;AACnB,aAAO,QAAA,YAAY;;AAMR,YAAA,iBAAiB,SAAS,SAAe;AACpD,aAAO,sBAAsB,KAAK;;AAMvB,YAAA,gBAAgB,SAAS,SAAe;AACnD,UAAM,WAAW,QAAA;AACjB,aAAO,aAAa,QAAA,aAAa;;AAatB,YAAA,oBAAoB,SAAS,SAAiB,gBAAuB;AAChF,gBAAU,UAAU,eAAe,SAAS;AAE5C,UAAM,SAAS,mBAAmB,SAAY,eAAe,aAAa,OAAO;AAEjF,UAAM,OAAO,OAAA,OAAO,SAAS,SAAS,SAAS;AAC/C,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,SAAS,KAAK,IAAI,OAAO,GAAG;AAC9B,iBAAO,QAAQ,GAAG;eACb;AACL,iBAAO,QAAQ;;;AAInB,aAAO;;AAQI,YAAA,yBAAyB,SAAS,SAAiB,gBAAuB;AACrF,aAAO,QAAA,eAAe,YAAY,QAAA,kBAAkB,SAAS,oBAAoB;;AAQtE,YAAA,kBAAkB,SAAS,MAAc,OAAa;AACjE,aAAO,QAAA,SAAS;AAChB,UAAM,UAAU,IAAI,GAAG;AAEvB,UAAI,QAAQ,UAAU;AAGpB,eAAO,OAAA,QAAQ,CAAC,MAAM,OAAO,MAAM;;AAIrC,aAAO,OAAA,QAAQ,CAAC,MAAM,OAAO,KAAK,QAAQ,aAAa,MAAM;;AASlD,YAAA,mBAAmB,SAC9B,MACA,MACA,UAAyB;AAEzB,UAAM,UAAU,QAAA,SAAS;AACzB,UAAM,UAAU,QAAA,SAAS;AACzB,UAAM,cAAc,QAAA,SAAS;AAE7B,aAAO,QAAQ,WAAW;AAC1B,aAAO,QAAQ,WAAW;AAE1B,UAAM,UAAU,OAAA,UACd,OAAO,OAAO,CAAC,OAAO,KAAK,MAAM,QAAQ,SAAS,SAAS,OAAA,UAAU;AAGvE,aAAO,QAAQ,MAAM;;AAMV,YAAA,gBAAgB,SAAS,SAAwB;AAC5D,UAAM,IAAI,QAAA,MAAM;AAChB,aAAO,EAAE,WAAW,KAAK,EAAE,MAAM,KAAK,EAAE,MAAM;;AAMnC,YAAA,iBAAiB,SAAS,YAAkB;AACvD,aAAO,UAAU,iBAAiB;;AASvB,YAAA,gBAAgB,SAAS,WAAmB,UAAyB;AAAzB,UAAA,aAAA,QAAA;AAAA,mBAAA;;AACvD,UAAI,UAAU,WAAW,IAAI;AAE3B,eAAO,UAAU,gBAAgB,OAAO,OAAO,CAAC,OAAO,KAAK,CAAC,KAAK;;AAGpE,UAAI,CAAC,UAAU;AACb,eAAO;;AAGT,aAAO,UAAU,gBAAgB;;AAStB,YAAA,eAAe,SAAS,QAAgB,UAAyB;AAAzB,UAAA,aAAA,QAAA;AAAA,mBAAA;;AACnD,eAAS,QAAA,SAAS;AAClB,UAAI,YAAY,OAAO,WAAW,IAAI;AACpC,iBAAS,UAAU,iBAAiB,QAAQ,OAAO,MAAM;;AAE3D,aAAO,OAAO,WAAW;AAEzB,aAAO,OAAA,OAAO,QAAQ,MAAM;;AAEjB,YAAA,kBAAkB,QAAA;AAMlB,YAAA,mBAAmB,SAAS,YAAkB;AACzD,aAAO,QAAA,gBAAgB,QAAA,gBAAgB;;AAO5B,YAAA,kBAAkB,SAAS,YAAkB;AACxD,mBAAa,QAAA,SAAS;AAEtB,aAAO,UAAU,gBAAgB,YAAY,OAAO,MAAM;;AAM/C,YAAA,eAAe,SAAS,WAAiB;AACpD,kBAAY,QAAA,SAAS;AACrB,UAAI,UAAU,WAAW,IAAI;AAC3B,oBAAY,UAAU,iBAAiB,WAAW,OAAO,MAAM;;AAEjE,aAAO;;;;;;;;;;;;AC9LT,QAAM,YAAY;AAClB,QAAA,KAAA;AACA,QAAA,UAAA;AACA,QAAA,SAAA;AAWa,YAAA,SAAS,SACpB,SACA,YACA,SAAgB;AAEhB,UAAM,MAAM,UAAU,KAAK,SAAS;AACpC,UAAM,WAAmB,IAAI;AAE7B,UAAM,MAAM;QACV,GAAG,IAAI,UAAU,MAAM,GAAG;QAC1B,GAAG,IAAI,UAAU,MAAM,IAAI;QAC3B,GAAG,UAAU,WAAY,WAAU,IAAI,MAAM,WAAW;;AAG1D,aAAO;;AAOI,YAAA,YAAY,SACvB,SACA,GACA,GACA,GACA,SAAgB;AAEhB,UAAM,YAAY,OAAO,OAAO,CAAC,QAAA,UAAU,GAAG,KAAK,QAAA,UAAU,GAAG,MAAM;AACtE,UAAM,WAAW,qBAAqB,GAAG;AACzC,UAAI,CAAC,mBAAmB,WAAW;AACjC,cAAM,IAAI,MAAM;;AAElB,UAAM,eAAe,UAAU,QAAQ,SAAS,WAAW;AAC3D,aAAO,UAAU,iBAAiB,cAAc,OAAO,MAAM;;AAOlD,YAAA,WAAW,SAAS,GAAW,GAAW,GAAW,SAAgB;AAChF,UAAM,WAAW,qBAAqB,GAAG;AACzC,UAAI,CAAC,mBAAmB,WAAW;AACjC,cAAM,IAAI,MAAM;;AAIlB,aAAO,QAAA,YAAY,OAAO,OAAO,CAAC,QAAA,cAAc,GAAG,KAAK,QAAA,cAAc,GAAG,KAAK,QAAA,SAAS;;AAO5E,YAAA,aAAa,SAAS,KAAW;AAC5C,UAAM,MAAc,QAAA,SAAS;AAG7B,UAAI,IAAI,WAAW,IAAI;AACrB,cAAM,IAAI,MAAM;;AAGlB,UAAI,IAAI,IAAI;AAEZ,UAAI,IAAI,IAAI;AACV,aAAK;;AAGP,aAAO;QACL;QACA,GAAG,IAAI,MAAM,GAAG;QAChB,GAAG,IAAI,MAAM,IAAI;;;AAQR,YAAA,mBAAmB,SAC9B,GACA,GACA,GACA,kBACA,SAAgB;AADhB,UAAA,qBAAA,QAAA;AAAA,2BAAA;;AAGA,UAAM,oBAAoB,IAAI,GAC5B,oEACA;AAEF,UAAM,cAAc,IAAI,GAAG,oEAAoE;AAE/F,UAAI,EAAE,WAAW,MAAM,EAAE,WAAW,IAAI;AACtC,eAAO;;AAGT,UAAI,CAAC,mBAAmB,qBAAqB,GAAG,WAAW;AACzD,eAAO;;AAGT,UAAM,MAAU,IAAI,GAAG;AACvB,UAAM,MAAU,IAAI,GAAG;AAEvB,UAAI,IAAI,YAAY,IAAI,GAAG,gBAAgB,IAAI,YAAY,IAAI,GAAG,cAAc;AAC9E,eAAO;;AAGT,UAAI,oBAAoB,IAAI,IAAI,uBAAuB,GAAG;AACxD,eAAO;;AAGT,aAAO;;AASI,YAAA,sBAAsB,SAAS,SAAe;AACzD,UAAM,SAAS,OAAO,KACpB,gCAAmC,QAAQ,OAAO,YAClD;AAEF,aAAO,OAAA,OAAO,OAAO,OAAO,CAAC,QAAQ;;AAGvC,kCAA8B,GAAW,SAAgB;AACvD,aAAO,UAAU,IAAK,KAAI,UAAU,MAAM,IAAI;;AAGhD,gCAA4B,UAAgB;AAC1C,aAAO,aAAa,KAAK,aAAa;;;;;;;;;;;;ACpJxC,QAAM,SAAS;AACf,QAAM,YAAY;AAClB,QAAA,MAAA;AACA,QAAA,UAAA;AAaa,YAAA,mBAAmB,SAAS,MAAW,QAAa,MAAS;AACxE,WAAK,MAAM;AACX,WAAK,UAAU;AAGf,WAAK,SAAS,SAAS,OAAsB;AAAtB,YAAA,UAAA,QAAA;AAAA,kBAAA;;AACrB,YAAI,OAAO;AAET,cAAM,QAAY;AAClB,eAAK,QAAQ,QAAQ,SAAC,OAAa;AACjC,kBAAI,SAAS,OAAK,KAAK,OAAO,SAAS;;AAEzC,iBAAO;;AAET,eAAO,QAAA,SAAS,KAAK;;AAGvB,WAAK,YAAY,qBAAkB;AACjC,eAAO,IAAI,OAAO,KAAK;;AAGzB,aAAO,QAAQ,SAAC,OAAY,GAAS;AACnC,aAAK,QAAQ,KAAK,MAAM;AACxB,0BAAe;AACb,iBAAO,KAAK,IAAI;;AAElB,wBAAgB,GAAM;AACpB,cAAI,QAAA,SAAS;AAEb,cAAI,EAAE,SAAS,WAAW,QAAQ,CAAC,MAAM,WAAW;AAClD,gBAAI,OAAO,YAAY;;AAGzB,cAAI,MAAM,aAAa,MAAM,QAAQ;AACnC,gBAAI,QAAA,WAAW;AACf,mBACE,MAAM,UAAU,EAAE,QAClB,eAAa,MAAM,OAAI,yBAAuB,MAAM,SAAM;qBAEnD,CAAE,OAAM,aAAa,EAAE,WAAW,MAAM,MAAM,QAAQ;AAC/D,mBACE,MAAM,WAAW,EAAE,QACnB,eAAa,MAAM,OAAI,+BAA6B,MAAM;;AAI9D,eAAK,IAAI,KAAK;;AAGhB,eAAO,eAAe,MAAM,MAAM,MAAM;UACtC,YAAY;UACZ,cAAc;UACd,KAAK;UACL,KAAK;;AAGP,YAAI,MAAM,SAAS;AACjB,eAAK,MAAM,QAAQ,MAAM;;AAI3B,YAAI,MAAM,OAAO;AACf,iBAAO,eAAe,MAAM,MAAM,OAAO;YACvC,YAAY;YACZ,cAAc;YACd,KAAK;YACL,KAAK;;;;AAMX,UAAI,MAAM;AACR,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO,OAAO,KAAK,UAAU,eAAe,OAAO;;AAGrD,YAAI,OAAO,SAAS,OAAO;AACzB,iBAAO,IAAI,OAAO;;AAGpB,YAAI,MAAM,QAAQ,OAAO;AACvB,cAAI,KAAK,SAAS,KAAK,QAAQ,QAAQ;AACrC,kBAAM,IAAI,MAAM;;AAIlB,eAAK,QAAQ,SAAC,GAAG,GAAC;AAChB,iBAAK,KAAK,QAAQ,MAAM,QAAA,SAAS;;mBAE1B,OAAO,SAAS,UAAU;AACnC,cAAM,SAAO,OAAO,KAAK;AACzB,iBAAO,QAAQ,SAAC,OAAU;AACxB,gBAAI,OAAK,QAAQ,MAAM,UAAU;AAAI,mBAAK,MAAM,QAAQ,KAAK,MAAM;AACnE,gBAAI,OAAK,QAAQ,MAAM,WAAW;AAAI,mBAAK,MAAM,SAAS,KAAK,MAAM;;eAElE;AACL,gBAAM,IAAI,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHtB,QAAM,YAAY;AAmBT,YAAA,YAAA;AAlBT,QAAM,YAAY;AAClB,QAAA,KAAA;AAOS,YAAA,KAAA;AANT,QAAA,MAAA;AAWS,YAAA,MAAA;AAVT,WAAO,OAAO,SAAS;AAoBvB,iBAAA,sBAAA;AAKA,iBAAA,oBAAA;AAKA,iBAAA,iBAAA;AAKA,iBAAA,sBAAA;AAKA,iBAAA,kBAAA;AAKA,iBAAA,mBAAA;;;;;ACjDA;AAAA;AAAA;AACA,QAAM,QAAQ;AACd,QAAM,KAAK;AAEX,QAAI,MAAM,WAAY;AAAA;AAKtB,4BAAyB,MAAM;AAC7B,UAAI,KAAK,WAAW,SAAS;AAC3B,eAAO,WAAW,KAAK,MAAM;AAAA,iBACpB,SAAS,OAAO;AACzB,eAAO;AAAA,iBACE,KAAK,WAAW,UAAU;AACnC,eAAO,YAAY,KAAK,MAAM;AAAA,iBACrB,SAAS,QAAQ;AAC1B,eAAO;AAAA,iBACE,KAAK,WAAW,WAAW;AACpC,eAAO,iBAAiB,KAAK,MAAM;AAAA,iBAC1B,SAAS,SAAS;AAC3B,eAAO;AAAA,iBACE,KAAK,WAAW,YAAY;AACrC,eAAO,kBAAkB,KAAK,MAAM;AAAA,iBAC3B,SAAS,UAAU;AAC5B,eAAO;AAAA;AAET,aAAO;AAAA;AAGT,QAAI,UAAU,SAAU,MAAM,OAAO;AAEnC,UAAI,MAAM,OAAO,MAAM,MAAM,IAAI,gBAAgB,KAAK,OAAO;AAC7D,aAAO,MAAM,UAAU,OAAO,KAAK;AAAA;AAGrC,QAAI,WAAW,SAAU,MAAM,OAAO;AACpC,aAAO,IAAI,QAAQ,MAAM,OAAO,MAAM,GAAG;AAAA;AAI3C,wBAAqB,MAAM;AACzB,aAAO,SAAS,aAAa,KAAK,MAAM,IAAI;AAAA;AAI9C,0BAAuB,MAAM;AAC3B,UAAI,MAAM,mBAAmB,KAAK;AAClC,aAAO,CAAE,SAAS,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI;AAAA;AAIlD,4BAAyB,MAAM;AAC7B,UAAI,MAAM,KAAK,MAAM;AACrB,UAAI,KAAK;AACP,eAAO,IAAI,OAAO,KAAK,YAAY,SAAS,IAAI,IAAI;AAAA;AAEtD,aAAO;AAAA;AAGT,yBAAsB,KAAK;AACzB,UAAI,OAAO,OAAO;AAClB,UAAI,SAAS,UAAU;AACrB,YAAI,MAAM,cAAc,MAAM;AAC5B,iBAAO,IAAI,GAAG,MAAM,eAAe,MAAM;AAAA,eACpC;AACL,iBAAO,IAAI,GAAG,KAAK;AAAA;AAAA,iBAEZ,SAAS,UAAU;AAC5B,eAAO,IAAI,GAAG;AAAA,iBACL,IAAI,SAAS;AAEtB,eAAO;AAAA,aACF;AACL,cAAM,IAAI,MAAM;AAAA;AAAA;AAMpB,4BAAyB,KAAK;AAC5B,UAAI,MAAM,kBAAkB,KAAK;AAEjC,UAAI,IAAI,WAAW,GAAG;AACpB,cAAM,IAAI,MAAM;AAAA;AAGlB,UAAI,OAAO,kBAAkB,KAAK,IAAI;AAEtC,UAAI,SAAS,QAAQ,KAAK,WAAW,GAAG;AACtC,eAAO;AAAA,UACL,QAAQ,IAAI;AAAA,UACZ,MAAM,KAAK,GAAG,MAAM;AAAA,UACpB,SAAS,KAAK,GAAG,MAAM;AAAA;AAAA,aAEpB;AACL,YAAI,SAAS,IAAI,GAAG,MAAM;AAC1B,YAAI,OAAO,WAAW,KAAK,OAAO,OAAO,IAAI;AAI3C,mBAAS;AAAA;AAEX,eAAO;AAAA,UACL,QAAQ,IAAI;AAAA,UACZ,MAAM;AAAA;AAAA;AAAA;AAOZ,0BAAuB,MAAM,KAAK;AAChC,UAAI,MAAM,KAAK,KAAK;AAEpB,UAAI,SAAS,WAAW;AACtB,eAAO,aAAa,WAAW,YAAY;AAAA,iBAClC,SAAS,QAAQ;AAC1B,eAAO,aAAa,SAAS,MAAM,IAAI;AAAA,iBAC9B,SAAS,UAAU;AAC5B,eAAO,aAAa,SAAS,OAAO,KAAK,KAAK;AAAA,iBACrC,QAAQ,OAAO;AAGxB,YAAI,OAAO,IAAI,WAAW,aAAa;AACrC,gBAAM,IAAI,MAAM;AAAA;AAElB,eAAO,eAAe;AACtB,YAAI,SAAS,aAAa,SAAS,KAAK,IAAI,SAAS,MAAM;AACzD,gBAAM,IAAI,MAAM,iCAAiC;AAAA;AAEnD,cAAM;AACN,eAAO,KAAK,MAAM,GAAG,KAAK,YAAY;AACtC,YAAI,OAAO,QAAQ,UAAU;AAC3B,gBAAM,KAAK,MAAM;AAAA;AAEnB,aAAK,KAAK,KAAK;AACb,cAAI,KAAK,aAAa,MAAM,IAAI;AAAA;AAElC,YAAI,SAAS,WAAW;AACtB,cAAI,SAAS,aAAa,WAAW,IAAI;AACzC,cAAI,QAAQ;AAAA;AAEd,eAAO,OAAO,OAAO;AAAA,iBACZ,SAAS,SAAS;AAC3B,cAAM,OAAO,KAAK;AAElB,cAAM,OAAO,OAAO,CAAE,aAAa,WAAW,IAAI,SAAS;AAE3D,YAAK,IAAI,SAAS,OAAQ,GAAG;AAC3B,gBAAM,OAAO,OAAO,CAAE,KAAK,MAAM,MAAM,KAAM,IAAI,SAAS;AAAA;AAG5D,eAAO;AAAA,iBACE,KAAK,WAAW,UAAU;AACnC,eAAO,WAAW;AAClB,YAAI,OAAO,KAAK,OAAO,IAAI;AACzB,gBAAM,IAAI,MAAM,6BAA6B;AAAA;AAG/C,eAAO,MAAM,eAAe,KAAK;AAAA,iBACxB,KAAK,WAAW,SAAS;AAClC,eAAO,WAAW;AAClB,YAAK,OAAO,KAAO,OAAO,KAAO,OAAO,KAAM;AAC5C,gBAAM,IAAI,MAAM,4BAA4B;AAAA;AAG9C,cAAM,YAAY;AAClB,YAAI,IAAI,cAAc,MAAM;AAC1B,gBAAM,IAAI,MAAM,kCAAkC,OAAO,SAAS,IAAI;AAAA;AAGxE,YAAI,MAAM,GAAG;AACX,gBAAM,IAAI,MAAM;AAAA;AAGlB,eAAO,IAAI,YAAY,QAAQ,MAAM;AAAA,iBAC5B,KAAK,WAAW,QAAQ;AACjC,eAAO,WAAW;AAClB,YAAK,OAAO,KAAO,OAAO,KAAO,OAAO,KAAM;AAC5C,gBAAM,IAAI,MAAM,2BAA2B;AAAA;AAG7C,cAAM,YAAY;AAClB,YAAI,IAAI,cAAc,MAAM;AAC1B,gBAAM,IAAI,MAAM,iCAAiC,OAAO,SAAS,IAAI;AAAA;AAGvE,eAAO,IAAI,OAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,iBACxC,KAAK,WAAW,WAAW;AACpC,eAAO,aAAa;AAEpB,cAAM,YAAY;AAElB,YAAI,MAAM,GAAG;AACX,gBAAM,IAAI,MAAM;AAAA;AAGlB,eAAO,aAAa,WAAW,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK;AAAA,iBACxD,KAAK,WAAW,UAAU;AACnC,eAAO,aAAa;AAEpB,eAAO,aAAa,UAAU,YAAY,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK;AAAA;AAG/E,YAAM,IAAI,MAAM,kCAAkC;AAAA;AAMpD,0BAAuB,YAAY,MAAM,QAAQ;AAC/C,UAAI,OAAO,eAAe,UAAU;AAClC,qBAAa,UAAU;AAAA;AAEzB,UAAI,MAAM,KAAK,KAAK;AAEpB,UAAI,WAAW,SAAS,WAAW;AACjC,eAAO,aAAa,WAAW,SAAS,MAAM,QAAQ,YAAY,QAAQ,MAAM,IAAI,SAAS;AAAA,iBACpF,WAAW,SAAS,QAAQ;AACrC,eAAO,aAAa,WAAW,SAAS,MAAM,QAAQ,eAAe,IAAI,GAAG,GAAG;AAAA,iBACtE,WAAW,SAAS,UAAU;AACvC,YAAI,QAAQ,aAAa,WAAW,SAAS,MAAM;AACnD,eAAO,OAAO,KAAK,OAAO,QAAQ;AAAA,iBACzB,WAAW,SAAS;AAG7B,cAAM;AACN,eAAO,WAAW;AAElB,YAAI,WAAW,SAAS,WAAW;AACjC,mBAAS,aAAa,WAAW,MAAM,QAAQ;AAC/C,iBAAO,aAAa,WAAW,MAAM,QAAQ;AAC7C,mBAAS,SAAS;AAAA;AAEpB,aAAK,IAAI,GAAG,IAAI,MAAM,KAAK;AACzB,cAAI,UAAU,aAAa,WAAW,UAAU,MAAM;AACtD,cAAI,KAAK;AACT,oBAAU,WAAW,SAAS;AAAA;AAEhC,eAAO;AAAA,iBACE,WAAW,SAAS,SAAS;AACtC,iBAAS,aAAa,WAAW,MAAM,QAAQ;AAC/C,eAAO,aAAa,WAAW,MAAM,QAAQ;AAC7C,eAAO,KAAK,MAAM,SAAS,IAAI,SAAS,KAAK;AAAA,iBACpC,WAAW,KAAK,WAAW,UAAU;AAC9C,eAAO,KAAK,MAAM,QAAQ,SAAS,WAAW;AAAA,iBACrC,WAAW,KAAK,WAAW,SAAS;AAC7C,cAAM,IAAI,GAAG,KAAK,MAAM,QAAQ,SAAS,KAAK,IAAI;AAClD,YAAI,IAAI,cAAc,WAAW,MAAM;AACrC,gBAAM,IAAI,MAAM,gCAAgC,WAAW,OAAO,SAAS,IAAI;AAAA;AAEjF,eAAO;AAAA,iBACE,WAAW,KAAK,WAAW,QAAQ;AAC5C,cAAM,IAAI,GAAG,KAAK,MAAM,QAAQ,SAAS,KAAK,IAAI,MAAM,SAAS;AACjE,YAAI,IAAI,cAAc,WAAW,MAAM;AACrC,gBAAM,IAAI,MAAM,iCAAiC,WAAW,OAAO,SAAS,IAAI;AAAA;AAGlF,eAAO;AAAA,iBACE,WAAW,KAAK,WAAW,WAAW;AAC/C,eAAO,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,WAAW,KAAK;AAC5C,cAAM,aAAa,WAAW,MAAM;AACpC,YAAI,CAAC,IAAI,IAAI,MAAM,UAAU;AAC3B,gBAAM,IAAI,MAAM;AAAA;AAElB,eAAO,IAAI,IAAI;AAAA,iBACN,WAAW,KAAK,WAAW,UAAU;AAC9C,eAAO,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,WAAW,KAAK;AAC5C,cAAM,aAAa,UAAU,MAAM;AACnC,YAAI,CAAC,IAAI,IAAI,MAAM,UAAU;AAC3B,gBAAM,IAAI,MAAM;AAAA;AAElB,eAAO,IAAI,IAAI;AAAA;AAEjB,YAAM,IAAI,MAAM,kCAAkC,WAAW;AAAA;AAK/D,uBAAoB,MAAM;AACxB,UAAI;AACJ,UAAI;AACJ,UAAI,QAAQ,OAAO;AACjB,eAAO,eAAe;AACtB,YAAI,WAAW,KAAK,MAAM,GAAG,KAAK,YAAY;AAC9C,mBAAW,UAAU;AACrB,cAAM;AAAA,UACJ,SAAS;AAAA,UACT,MAAM;AAAA,UACN;AAAA,UACA,aAAa,SAAS,YAAY,KAAK,SAAS,cAAc;AAAA,UAC9D;AAAA;AAEF,eAAO;AAAA,aACF;AACL,YAAI;AACJ,gBAAQ;AAAA,eACD;AACH,sBAAU;AACV;AAAA,eACG;AACH,sBAAU;AACV;AAAA,eACG;AACH,sBAAU;AACV;AAAA;AAEJ,cAAM;AAAA,UACJ;AAAA,UACA,MAAM;AAAA,UACN,aAAa;AAAA;AAGf,YAAK,KAAK,WAAW,YAAY,SAAS,WAAY,KAAK,WAAW,WAAW,KAAK,WAAW,QAAQ;AACvG,cAAI,OAAO,WAAW;AAAA,mBACb,KAAK,WAAW,aAAa,KAAK,WAAW,UAAU;AAChE,cAAI,OAAO,aAAa;AAAA;AAG1B,YAAI,KAAK,WAAW,YAAY,SAAS,WAAY,KAAI,OAAO,KAAK,IAAI,OAAO,KAAK;AACnF,gBAAM,IAAI,MAAM,6BAA6B,IAAI;AAAA;AAEnD,YAAK,MAAK,WAAW,WAAW,KAAK,WAAW,WAAY,KAAI,OAAO,KAAK,IAAI,OAAO,KAAK,IAAI,OAAO,MAAM;AAC3G,gBAAM,IAAI,MAAM,gCAAgC,IAAI;AAAA;AAEtD,eAAO;AAAA;AAAA;AAKX,uBAAoB,MAAM;AAExB,aAAQ,SAAS,YAAc,SAAS,WAAa,eAAe,UAAU;AAAA;AAIhF,qBAAkB,MAAM;AACtB,aAAO,KAAK,YAAY,SAAS,KAAK,SAAS;AAAA;AAMjD,QAAI,YAAY,SAAU,OAAO,QAAQ;AACvC,UAAI,SAAS;AACb,UAAI,OAAO;AAEX,UAAI,aAAa;AAEjB,YAAM,QAAQ,SAAU,OAAM;AAC5B,YAAI,QAAQ,QAAO;AACjB,cAAI,OAAO,eAAe;AAE1B,cAAI,SAAS,WAAW;AACtB,0BAAc,KAAK;AAAA,iBACd;AACL,0BAAc;AAAA;AAAA,eAEX;AACL,wBAAc;AAAA;AAAA;AAIlB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,OAAO,eAAe,MAAM;AAChC,YAAI,QAAQ,OAAO;AACnB,YAAI,MAAM,aAAa,MAAM;AAG7B,YAAI,UAAU,OAAO;AACnB,iBAAO,KAAK,aAAa,WAAW;AACpC,eAAK,KAAK;AACV,wBAAc,IAAI;AAAA,eACb;AACL,iBAAO,KAAK;AAAA;AAAA;AAIhB,aAAO,OAAO,OAAO,OAAO,OAAO;AAAA;AAGrC,QAAI,YAAY,SAAU,OAAO,MAAM;AACrC,UAAI,MAAM;AACV,aAAO,OAAO,KAAK;AACnB,UAAI,SAAS;AACb,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,OAAO,eAAe,MAAM;AAChC,YAAI,SAAS,UAAU,MAAM,MAAM;AACnC,YAAI,UAAU,aAAa,QAAQ,MAAM;AACzC,kBAAU,OAAO;AACjB,YAAI,KAAK;AAAA;AAEX,aAAO;AAAA;AAGT,QAAI,eAAe,SAAU,QAAQ;AACnC,UAAI,OAAO,MAAM,UAAU,MAAM,KAAK,WAAW,MAAM;AACvD,UAAI,MAAM,eAAe;AAGzB,UAAI,KAAK,WAAW,IAAI,KAAK,QAAQ;AACnC,cAAM,IAAI,MAAM;AAAA;AAGlB,aAAO,OAAO,OAAO,CAAE,IAAI,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAI,UAAU,IAAI,MAAM;AAAA;AAGrF,QAAI,eAAe,SAAU,QAAQ,MAAM;AACzC,UAAI,MAAM,eAAe;AAGzB,UAAI,CAAC,IAAI,SAAS;AAChB,cAAM,IAAI,MAAM;AAAA;AAGlB,aAAO,IAAI,UAAU,IAAI,SAAS;AAAA;AAGpC,uBAAoB,MAAM,OAAO;AAC/B,UAAI,KAAK,WAAW,cAAc,KAAK,WAAW,UAAU;AAC1D,eAAO,OAAO,MAAM,SAAS;AAAA,aACxB;AACL,eAAO,MAAM;AAAA;AAAA;AAIjB,QAAI,YAAY,SAAU,OAAO,QAAQ;AACvC,UAAI,MAAM;AAEV,eAAS,KAAK,OAAO;AACnB,YAAI,OAAO,MAAM;AACjB,YAAI,QAAQ,OAAO;AAGnB,YAAI,iBAAiB,KAAK,OAAO;AAC/B,kBAAQ,MAAM,IAAI,SAAU,MAAM;AAChC,mBAAO,UAAU,MAAM;AAAA,aACtB,KAAK;AAAA,eACH;AACL,kBAAQ,UAAU,MAAM;AAAA;AAG1B,YAAI,KAAK;AAAA;AAGX,aAAO;AAAA;AAGT,QAAI,mBAAmB,SAAU,MAAM,OAAO,SAAS;AAErD,UAAI,MAAM;AACV,UAAI,QAAQ,OAAO;AACjB,YAAI,UAAU,KAAK,QAAQ,WAAW;AACtC,YAAI,CAAC,QAAQ,UAAU;AACrB,cAAI,YAAY,eAAe;AAC/B,cAAI,cAAc,aAAa,cAAc,KAAK,MAAM,SAAS,WAAW;AAC1E,kBAAM,IAAI,MAAM,iCAAiC;AAAA;AAAA;AAGrD,YAAI,cAAc,MAAM,IAAI,SAAU,GAAG;AACvC,iBAAO,IAAI,iBAAiB,SAAS,GAAG;AAAA;AAE1C,eAAO,OAAO,OAAO;AAAA,iBACZ,SAAS,SAAS;AAC3B,eAAO;AAAA,iBACE,SAAS,UAAU;AAC5B,eAAO,OAAO,KAAK,OAAO;AAAA,iBACjB,SAAS,QAAQ;AAC1B,kBAAU,WAAW;AACrB,YAAI,UAAU,MAAO,UAAW,GAAG,KAAK;AACxC,eAAO,OAAO,KAAK,QAAQ,UAAU,MAAM,UAAU,KAAK;AAAA,iBACjD,SAAS,WAAW;AAC7B,YAAI,WAAW;AACf,YAAI,SAAS;AACX,qBAAW,UAAU;AAAA;AAEvB,eAAO,MAAM,cAAc,OAAO;AAAA,iBACzB,KAAK,WAAW,UAAU;AACnC,eAAO,WAAW;AAClB,YAAI,OAAO,KAAK,OAAO,IAAI;AACzB,gBAAM,IAAI,MAAM,6BAA6B;AAAA;AAG/C,eAAO,MAAM,eAAe,OAAO;AAAA,iBAC1B,KAAK,WAAW,SAAS;AAClC,eAAO,WAAW;AAClB,YAAK,OAAO,KAAO,OAAO,KAAO,OAAO,KAAM;AAC5C,gBAAM,IAAI,MAAM,4BAA4B;AAAA;AAG9C,cAAM,YAAY;AAClB,YAAI,IAAI,cAAc,MAAM;AAC1B,gBAAM,IAAI,MAAM,kCAAkC,OAAO,SAAS,IAAI;AAAA;AAGxE,kBAAU,WAAW;AACrB,eAAO,IAAI,YAAY,QAAQ,MAAM,UAAU;AAAA,iBACtC,KAAK,WAAW,QAAQ;AACjC,eAAO,WAAW;AAClB,YAAK,OAAO,KAAO,OAAO,KAAO,OAAO,KAAM;AAC5C,gBAAM,IAAI,MAAM,2BAA2B;AAAA;AAG7C,cAAM,YAAY;AAClB,YAAI,IAAI,cAAc,MAAM;AAC1B,gBAAM,IAAI,MAAM,iCAAiC,OAAO,SAAS,IAAI;AAAA;AAGvE,kBAAU,WAAW;AACrB,eAAO,IAAI,OAAO,MAAM,YAAY,QAAQ,MAAM,UAAU;AAAA,aACvD;AAEL,cAAM,IAAI,MAAM,kCAAkC;AAAA;AAAA;AAItD,QAAI,eAAe,SAAU,OAAO,QAAQ;AAC1C,UAAI,MAAM,WAAW,OAAO,QAAQ;AAClC,cAAM,IAAI,MAAM;AAAA;AAGlB,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,OAAO,eAAe,MAAM;AAChC,YAAI,QAAQ,OAAO;AACnB,YAAI,KAAK,IAAI,iBAAiB,MAAM,OAAO;AAAA;AAG7C,aAAO,OAAO,OAAO;AAAA;AAGvB,QAAI,eAAe,SAAU,OAAO,QAAQ;AAC1C,aAAO,MAAM,UAAU,IAAI,aAAa,OAAO;AAAA;AAGjD,QAAI,iBAAiB,SAAU,OAAO,QAAQ;AAC5C,aAAO,MAAM,OAAO,IAAI,aAAa,OAAO;AAAA;AAG9C,QAAI,oBAAoB,SAAU,OAAO,QAAQ;AAC/C,aAAO,MAAM,UAAU,IAAI,aAAa,OAAO,SAAS;AAAA;AAU1D,uBAAoB,GAAG;AAErB,aAAQ,KAAK,OAAS,KAAK;AAAA;AAI7B,QAAI,cAAc,SAAU,KAAK;AAC/B,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,YAAI,OAAO,IAAI;AACf,YAAI,SAAS,KAAK;AAChB,cAAI,KAAK;AAAA,mBACA,SAAS,KAAK;AACvB,cAAI,MAAM;AACV,cAAI,IAAI,IAAI;AACZ,iBAAQ,IAAI,IAAI,UAAW,UAAU,IAAI,KAAK;AAC5C,mBAAO,IAAI,KAAK;AAChB;AAAA;AAEF,cAAI,IAAI;AACR,cAAI,KAAK;AAAA,mBACA,SAAS,KAAK;AACvB,cAAI,KAAK;AAAA,mBACA,SAAS,KAAK;AACvB,cAAI,KAAK;AAAA,eACJ;AACL,gBAAM,IAAI,MAAM,kCAAkC;AAAA;AAAA;AAGtD,aAAO;AAAA;AAGT,QAAI,YAAY,SAAU,OAAO;AAC/B,UAAI,MAAM;AACV,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAI,OAAO,MAAM;AACjB,YAAI,SAAS,SAAS;AACpB,cAAI,KAAK;AAAA,mBACA,KAAK,WAAW,UAAU;AACnC,cAAI,KAAK,MAAM,WAAW;AAAA,mBACjB,SAAS,UAAU;AAC5B,cAAI,KAAK;AAAA,mBACA,SAAS,YAAY;AAC9B,cAAI,KAAK;AAAA,eACJ;AACL,gBAAM,IAAI,MAAM,kCAAkC;AAAA;AAAA;AAGtD,aAAO,IAAI,KAAK;AAAA;AAGlB,WAAO,UAAU;AAAA;AAAA;;;AC3lBjB;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;;;;;;;ACAjB,QAAA,oBAAA;AAOA,QAAA,mBAAA;AAEA,QAAA,UAAA;AAoCA,QAAY;AAAZ,IAAA,UAAY,uBAAoB;AAC9B,4BAAA,QAAA;AACA,4BAAA,QAAA;AACA,4BAAA,QAAA;OAHU,wBAAA,QAAA,wBAAA,SAAA,uBAAoB;AA8CnB,YAAA,uBAAuB;MAClC,MAAM;MACN,YAAY;QACV,OAAO;UACL,MAAM;UACN,sBAAsB;YACpB,MAAM;YACN,OAAO;cACL,MAAM;cACN,YAAY;gBACV,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,MAAM,UAAU,MAAM;;cAEhC,UAAU,CAAC,QAAQ;;;;QAIzB,aAAa,EAAE,MAAM;QACrB,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,MAAM;;MAEnB,UAAU,CAAC,SAAS,eAAe,UAAU;;AAQ/C,gCAAyB;AACvB,YAAM,QAAQ,CAAC,QAAQ,WAAW,UAAU;AAC5C,YAAM,OAAO,MAAM,KAAK,IAAI,MAAM,KAAK,IACrC,CAAC,GAAG,UAAU,MAAO,SAAQ,KAAK;AAEpC,YAAM,QAAQ,MAAM,KAAK,IAAI,MAAM,KAAK,IACtC,CAAC,GAAG,UAAU,OAAQ,SAAQ,KAAK;AAErC,YAAM,QAAQ,MAAM,KAAK,IAAI,MAAM,KAAK,IACtC,CAAC,GAAG,UAAU,QAAQ,QAAQ;AAGhC,aAAO,CAAC,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG;;AAU1C,6BACE,SACA,iBAAwC;AAExC,UAAI,CAAC,OAAO,KAAK,uBAAsB,SAAS,UAAU;AACxD,cAAM,IAAI,MAAM,qBAAqB;iBAC5B,mBAAmB,CAAC,gBAAgB,SAAS,UAAU;AAChE,cAAM,IAAI,MACR,sCAAsC,mCAAmC,gBAAgB,KACvF;;;AAgBR,yBACE,OACA,MACA,MACA,OACA,SAA0D;AAE1D,sBAAgB,SAAS,CAAC,sBAAqB,IAAI,sBAAqB;AAExE,UAAI,MAAM,UAAU,QAAW;AAC7B,eAAO;UACL;UACA,YAAY,sBAAqB,MAAM,SAAS,OAC5C,uEACA,kBAAA,OAAO,WAAW,MAAM,OAAO,OAAO;;;AAI9C,UAAI,UAAU,QAAW;AACvB,cAAM,IAAI,MAAM,2BAA2B,gBAAgB;;AAG7D,UAAI,SAAS,SAAS;AACpB,eAAO,CAAC,WAAW,kBAAA,OAAO;;AAG5B,UAAI,SAAS,UAAU;AAErB,YAAI,OAAO,UAAU,UAAU;AAC7B,kBAAQ,OAAO,KAAK,OAAO;;AAE7B,eAAO,CAAC,WAAW,kBAAA,OAAO;;AAG5B,UAAI,KAAK,YAAY,SAAS,KAAK,SAAS,GAAG;AAC7C,YAAI,YAAY,sBAAqB,IAAI;AACvC,gBAAM,IAAI,MACR;;AAGJ,cAAM,aAAa,KAAK,MAAM,GAAG,KAAK,YAAY;AAClD,cAAM,iBAAiB,MAAM,IAAI,CAAC,SAChC,YAAY,OAAO,MAAM,YAAY,MAAM;AAE7C,eAAO;UACL;UACA,kBAAA,OACE,iBAAA,UACE,eAAe,IAAI,CAAC,CAAC,OAAO,IAC5B,eAAe,IAAI,CAAC,CAAC,EAAE,OAAO;;;AAMtC,aAAO,CAAC,MAAM;;AAYhB,wBACE,aACA,MACA,OACA,SAA0D;AAE1D,sBAAgB,SAAS,CAAC,sBAAqB,IAAI,sBAAqB;AAExE,YAAM,eAAe,CAAC;AACtB,YAAM,gBAA2B,CAAC,SAAS,aAAa;AAExD,iBAAW,SAAS,MAAM,cAAc;AACtC,YAAI,YAAY,sBAAqB,MAAM,KAAK,MAAM,UAAU,QAAW;AACzE;;AAEF,cAAM,CAAC,MAAM,SAAS,YACpB,OACA,MAAM,MACN,MAAM,MACN,KAAK,MAAM,OACX;AAEF,qBAAa,KAAK;AAClB,sBAAc,KAAK;;AAGrB,aAAO,iBAAA,UAAU,cAAc;;AAUjC,wBACE,aACA,OAA4C;AAE5C,UAAI,SAAS;AACb,YAAM,eAAe,qBAAqB,aAAa;AACvD,mBAAa,OAAO;AAEpB,YAAM,OAAO,CAAC,aAAa,GAAG,MAAM,KAAK,cAAc;AACvD,iBAAW,QAAQ,MAAM;AACvB,cAAM,WAAW,MAAM;AACvB,YAAI,CAAC,UAAU;AACb,gBAAM,IAAI,MAAM,iCAAiC;;AAGnD,kBAAU,GAAG,QAAQ,MAAM,MACxB,IAAI,CAAC,EAAE,MAAM,MAAM,QAAQ,GAAG,KAAK,QACnC,KAAK;;AAGV,aAAO;;AAWT,kCACE,aACA,OACA,UAAuB,oBAAI,OAAK;AAEhC,OAAC,eAAe,YAAY,MAAM;AAClC,UAAI,QAAQ,IAAI,gBAAgB,MAAM,iBAAiB,QAAW;AAChE,eAAO;;AAGT,cAAQ,IAAI;AAEZ,iBAAW,SAAS,MAAM,cAAc;AACtC,6BAAqB,MAAM,MAAM,OAAO;;AAE1C,aAAO;;AAYT,wBACE,aACA,MACA,OACA,SAA0D;AAE1D,sBAAgB,SAAS,CAAC,sBAAqB,IAAI,sBAAqB;AAExE,aAAO,kBAAA,OAAO,WAAW,aAAa,MAAM,OAAO;;AAUrD,sBACE,aACA,OAA4C;AAE5C,aAAO,kBAAA,OAAO,WAAW,aAAa;;AASxC,0BACE,MAAqB;AAErB,YAAM,gBAA0C;AAChD,iBAAW,OAAO,QAAA,qBAAqB,YAAY;AACjD,YAAI,KAAK,MAAM;AACb,wBAAc,OAAO,KAAK;;;AAG9B,UAAI,WAAW,eAAe;AAC5B,sBAAc,QAAK,OAAA,OAAA,EAAK,cAAc,MAAO,cAAc;;AAE7D,aAAO;;AAeT,wBACE,WACA,SAA0D;AAE1D,sBAAgB,SAAS,CAAC,sBAAqB,IAAI,sBAAqB;AAExE,YAAM,gBAAgB,aAAa;AACnC,YAAM,QAAQ,CAAC,OAAO,KAAK,QAAQ;AACnC,YAAM,KACJ,WACE,gBACA,cAAc,QACd,cAAc,OACd;AAGJ,UAAI,cAAc,gBAAgB,gBAAgB;AAChD,cAAM,KACJ,WAEE,cAAc,aACd,cAAc,SACd,cAAc,OACd;;AAIN,aAAO,kBAAA,OAAO,OAAO,OAAO;;AAMjB,YAAA,iBAAiB;MAC5B;MACA;MACA;MACA;MACA;MACA;MACA;;AAYF,gCAAmC,WAA6B;AAC9D,YAAM,aAAa,oBAAoB;AACvC,aAAO,kBAAA,YAAY;;AAFrB,YAAA,qBAAA;AAcA,iCAA6B,WAAsB;AACjD,YAAM,QAAQ,IAAI,MAAM;AACxB,UACE,OAAO,cAAc,YACrB,CAAE,aAAY,cACd,CAAC,UAAU,QACX;AACA,cAAM;;AAGR,YAAM,OAAO,UAAU,IAAI,SAAU,GAAC;AACpC,YAAI,EAAE,SAAS,SAAS;AACtB,iBAAO,EAAE;;AAGX,eAAO,QAAA,eAAe,EAAE;;AAE1B,YAAM,QAAQ,UAAU,IAAI,SAAU,GAAC;AACrC,eAAO,EAAE;;AAEX,YAAM,SAAS,UAAU,IAAI,SAAU,GAAC;AACtC,YAAI,CAAC,EAAE,MAAM;AACX,gBAAM;;AAER,eAAO,GAAG,EAAE,QAAQ,EAAE;;AAGxB,aAAO,iBAAA,aACL,CAAC,WAAW,YACZ;QACE,iBAAA,aAAa,IAAI,MAAM,UAAU,QAAQ,KAAK,WAAW;QACzD,iBAAA,aAAa,OAAO;;;AAwB1B,4BAGE,EACA,YACA,MACA,WAKD;AACC,sBAAgB;AAChB,UAAI,QAAA,UAAU,OAAO;AACnB,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,aAAa;AAChC,cAAM,IAAI,MAAM;;AAGlB,YAAM,cACJ,YAAY,sBAAqB,KAC7B,oBAAoB,QACpB,QAAA,eAAe,WACb,MACA;AAER,YAAM,MAAM,kBAAA,OAAO,aAAa;AAChC,aAAO,QAAA,UAAU,kBAAA,SAAS,IAAI,IAAI,IAAI,GAAG,IAAI;;AA3B/C,YAAA,gBAAA;AAyCA,mCAGE,EACA,MACA,WACA,WAKD;AACC,sBAAgB;AAChB,UAAI,QAAA,UAAU,OAAO;AACnB,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,YAAY;AAC/B,cAAM,IAAI,MAAM;;AAGlB,YAAM,cACJ,YAAY,sBAAqB,KAC7B,oBAAoB,QACpB,QAAA,eAAe,WACb,MACA;AAER,YAAM,YAAY,QAAA,iBAAiB,aAAa;AAChD,YAAM,SAAS,kBAAA,gBAAgB;AAC/B,aAAO,kBAAA,YAAY;;AA5BrB,YAAA,wBAAA;;;;;ACpiBA;AAAA;AAAA;AAEA,IAAC,UAAS,MAAM,GAAG;AACjB;AACA,UAAI,OAAO,WAAW,eAAe,OAAO;AAAS,eAAO,UAAU;AAAA,eAC7D,KAAK;AAAM,aAAK,KAAK,OAAO;AAAA,WAChC;AACH,aAAK,OAAO;AACZ,aAAK,KAAK,OAAO;AAAA;AAAA,OAEnB,SAAM,WAAW;AACjB;AAEA,UAAI,OAAO;AAEX,8BAAwB,GAAG;AACzB,YAAI,CAAE,uFAAuF,KAAK,IAAK;AACrG,gBAAM,IAAI,UAAU;AAAA;AAAA;AAIxB,WAAK,aAAa,SAAS,GAAG;AAC5B,YAAI,OAAO,MAAM;AAAU,gBAAM,IAAI,UAAU;AAC/C,YAAI,GAAG,IAAI,SAAS,mBAAmB,KAAK,IAAI,IAAI,WAAW,EAAE;AACjE,aAAK,IAAI,GAAG,IAAI,EAAE,QAAQ;AAAK,YAAE,KAAK,EAAE,WAAW;AACnD,eAAO;AAAA;AAGT,WAAK,aAAa,SAAS,KAAK;AAC9B,YAAI,GAAG,IAAI;AACX,aAAK,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,YAAE,KAAK,OAAO,aAAa,IAAI;AAChE,eAAO,mBAAmB,OAAO,EAAE,KAAK;AAAA;AAG1C,UAAI,OAAO,SAAS,aAAa;AAG/B,YAAI,OAAO,OAAO,SAAS,aAAa;AAEtC,eAAK,eAAe,SAAU,KAAK;AAC/B,mBAAO,OAAO,KAAK,KAAK,SAAS;AAAA;AAGrC,eAAK,eAAe,SAAU,GAAG;AAC/B,2BAAe;AACf,mBAAO,IAAI,WAAW,MAAM,UAAU,MAAM,KAAK,OAAO,KAAK,GAAG,WAAW;AAAA;AAAA,eAGxE;AAEL,eAAK,eAAe,SAAU,KAAK;AACjC,mBAAQ,IAAI,OAAO,KAAM,SAAS;AAAA;AAGpC,eAAK,eAAe,SAAS,GAAG;AAC9B,2BAAe;AACf,mBAAO,IAAI,WAAW,MAAM,UAAU,MAAM,KAAK,IAAI,OAAO,GAAG,WAAW;AAAA;AAAA;AAAA,aAIzE;AAGL,aAAK,eAAe,SAAS,KAAK;AAChC,cAAI,GAAG,IAAI,IAAI,MAAM,IAAI;AACzB,eAAK,IAAI,GAAG,IAAI,KAAK;AAAK,cAAE,KAAK,OAAO,aAAa,IAAI;AACzD,iBAAO,KAAK,EAAE,KAAK;AAAA;AAGrB,aAAK,eAAe,SAAS,GAAG;AAC9B,yBAAe;AACf,cAAI,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,WAAW,EAAE;AACzC,eAAK,IAAI,GAAG,IAAI,EAAE,QAAQ;AAAK,cAAE,KAAK,EAAE,WAAW;AACnD,iBAAO;AAAA;AAAA;AAKX,aAAO;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9ET,QAAA,OAAA,aAAA;AACA,QAAA,WAAA,aAAA;AAEA,QAAA,UAAA;AAkBA,qBAAwB,EACtB,WACA,MACA,WAKD;AACC,UAAI,QAAA,UAAU,YAAY;AACxB,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,OAAO;AAC1B,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,UAAU;AAC7B,cAAM,IAAI,MAAM;;AAGlB,cAAQ;aACD,4BAA4B;AAC/B,cAAI,OAAO,SAAS,UAAU;AAC5B,kBAAM,IAAI,MAAM;;AAGlB,gBAAM,mBAAmB,KAAK,IAAI;AAGlC,cAAI;AACJ,cAAI;AACF,+BAAmB,SAAS,aAAa;mBAClC,KAAP;AACA,kBAAM,IAAI,MAAM;;AAGlB,gBAAM,sBAAsB,SAAS,WAAW;AAChD,gBAAM,QAAQ,KAAK,YAAY,KAAK,IAAI;AAGxC,gBAAM,mBAAmB,KAAK,IAC5B,qBACA,OACA,kBACA,iBAAiB;AAInB,gBAAM,SAAS;YACb,SAAS;YACT,OAAO,SAAS,aAAa;YAC7B,gBAAgB,SAAS,aAAa,iBAAiB;YACvD,YAAY,SAAS,aAAa;;AAGpC,iBAAO;;;AAIP,gBAAM,IAAI,MAAM;;;AAxDtB,YAAA,UAAA;AAwEA,2BAA8B,EAC5B,WACA,MACA,WAKD;AACC,UAAI,QAAA,UAAU,YAAY;AACxB,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,OAAO;AAC1B,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,UAAU;AAC7B,cAAM,IAAI,MAAM;;AAGlB,YAAM,yBAAyB,KAAK;AACpC,YAAM,mBAAmB;AAEzB,UAAI,OAAO,SAAS,YAAY,YAAY,MAAM;AAGhD,cAAM,IAAI,MACR;;AAKJ,YAAM,kBAAkB;QACtB;QACA,SAAS;;AAIX,YAAM,aAAa,OAAO,WACxB,KAAK,UAAU,kBACf;AAEF,YAAM,SAAS,aAAa;AAC5B,UAAI,YAAY;AAEhB,UAAI,SAAS,GAAG;AACd,oBAAY,yBAAyB,SAAS;;AAEhD,sBAAgB,UAAU,IAAI,OAAO;AAErC,YAAM,gBAAgB,KAAK,UAAU;AACrC,aAAO,QAAQ,EAAE,WAAW,MAAM,eAAe;;AAhDnD,YAAA,gBAAA;AA2DA,sBAAwB,EACtB,eACA,cAID;AACC,UAAI,QAAA,UAAU,gBAAgB;AAC5B,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,aAAa;AAChC,cAAM,IAAI,MAAM;;AAGlB,cAAQ,cAAc;aACf,4BAA4B;AAE/B,gBAAM,+BAA+B,eAAe;AACpD,gBAAM,+BAA+B,KAAK,IAAI,QAAQ,cACpD,8BACA;AAGF,gBAAM,QAAQ,SAAS,aAAa,cAAc;AAClD,gBAAM,aAAa,SAAS,aAAa,cAAc;AACvD,gBAAM,iBAAiB,SAAS,aAC9B,cAAc;AAIhB,gBAAM,mBAAmB,KAAK,IAAI,KAChC,YACA,OACA,gBACA;AAIF,cAAI;AACJ,cAAI;AACF,qBAAS,SAAS,WAAW;mBACtB,KAAP;AACA,kBAAM,IAAI,MAAM;;AAGlB,cAAI,QAAQ;AACV,mBAAO;;AAET,gBAAM,IAAI,MAAM;;;AAIhB,gBAAM,IAAI,MAAM;;;AAnDtB,YAAA,UAAA;AA+DA,2BAA8B,EAC5B,eACA,cAID;AACC,UAAI,QAAA,UAAU,gBAAgB;AAC5B,cAAM,IAAI,MAAM;iBACP,QAAA,UAAU,aAAa;AAChC,cAAM,IAAI,MAAM;;AAGlB,YAAM,kBAAkB,KAAK,MAAM,SAAQ,EAAE,eAAe;AAC5D,aAAO,gBAAgB;;AAdzB,YAAA,gBAAA;AAuBA,qCAAuC,YAAkB;AACvD,YAAM,uBAAuB,eAAe;AAC5C,YAAM,sBACJ,KAAK,IAAI,QAAQ,cAAc,sBAAsB;AACvD,aAAO,SAAS,aAAa;;AAJ/B,YAAA,yBAAA;AAaA,4BAAwB,QAAc;AACpC,YAAM,YAAY,OAAO,KAAK,QAAQ,OAAO,SAAS;AACtD,aAAO,SAAS,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7P/B,iBAAA,yBAAA;AACA,iBAAA,2BAAA;AACA,iBAAA,sBAAA;AACA,QAAA,UAAA;AAAS,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;;AAAW,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC0BpB,0BAA0B,KAA1B;AAEE,SAAO,IAAI,WAAW,IAAI,KAAK;;gCAiBjB,MAAA;MAAuB;IACrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAXqC;AAarC,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM;;AAalB,+CAA6C,SAAiB,KAA9D;AACE,QAAI,OAAO,YAAY,YAAY,QAAQ,SAAS,GAAG;AAErD,YAAM,WAAqB,MAAM,YAAY;AAC7C,YAAM,qBAA+B,SAAS,IAAK,cAAa,SAAS;AACzE,YAAM,oBAA4B,QAAQ;AAE1C,UAAI,mBAAmB,SAAS,oBAAoB;AAClD,eAAO;;;AAGX,UAAM,gCAAU,IAAI,cAAc;MAChC,SAAO;;;AAQX,gCAA8B,KAA2B,KAAzD;AACE,QAAI,SAAS,MAAM,YAAY;;AAGjC,sCAAoC,KAA2B,KAA/D;AACE,UAAM,WAAW,MAAM,YAAY;AACnC,QAAI,SAAS,SAAS,MAAM;;AAO9B,iCAA+B,KAA2B,KAA1D;AACE,QAAI,CAAC,oBAAoB;AACvB,YAAM,gCAAU,IAAI;;AAGtB,UAAM,WAA+B,IAAI,OAA+B,MAAM;MAC5E,MAAM;;AAER,aAAS,OAAO,MAAM,8BAA8B,SAAS,MAAgB;AAC7E,QAAI,SAAS,MAAM,mBAAmB,UAAU;;AAGlD,iCAA+B,KAA2B,KAA1D;AACE,QAAI,CAAC,wBAAwB;AAC3B,YAAM,gCAAU,IAAI;;AAGtB,UAAM,WAA+B,IAAI,OAA+B,MAAM;MAC5E,MAAM;;AAER,aAAS,OAAO,MAAM,8BAA8B,SAAS,MAAgB;AAC7E,QAAI,SAAS,MAAM,uBAAuB,UAAU;;AAOtD,yBAAuB,KAA2B,KAAlD;AACE,QAAI,CAAC,uBAAuB;AAC1B,YAAM,gCAAU,IAAI;;AAGtB,UAAM,UAAkB,MAAM,8BAA+B,IAAI,OAAoB,IAAI;AACzF,UAAM,UAAmB,IAAI,OAAoB;AACjD,UAAM,cAAwC,IAAI,OAAqC,MAAM;AAC7F,UAAM,YAAS,gBAAA,gBAAA,IACV,cADU,IAAA;MAEb,MAAM;MACN,MAAM;;AAGR,QAAI,SAAS,MAAM,sBAAsB,WAAW;;AAGtD,gCAA6B,KAA2B,KAAxD;AACE,QAAI,CAAC,qBAAqB;AACxB,YAAM,gCAAU,IAAI;;AAGtB,UAAM,UAAwB,IAAI,OAAyB;AAC3D,UAAM,UAAkB,MAAM,8BAA+B,IAAI,OAAoB,IAAI;AACzF,UAAM,UAAU;AAChB,UAAM,cAAwC,IAAI,OAAqC,MAAM;AAC7F,UAAM,YAAS,gBAAA,gBAAA,IACV,cADU,IAAA;MAEb,MAAM;MACN,MAAM;;AAGR,QAAI,SAAS,MAAM,oBAAoB,WAAW,KAAK;;AAGzD,iCAA+B,KAA2B,KAA1D;AACE,QAAI,CAAC,uBAAuB;AAC1B,YAAM,gCAAU,IAAI;;AAGtB,UAAM,UAAkB,MAAM,8BAA+B,IAAI,OAAoB,IAAI;AACzF,UAAM,UAAuC,IAAI,OAAwC;AACzF,UAAM,UAAU;AAChB,UAAM,YAA4D;MAChE,MAAM;MACN,MAAM;MACN;;AAGF,QAAI,SAAS,MAAM,sBAAsB,WAAW,KAAK;;AAG3D,iCAA+B,KAA2B,KAA1D;AACE,QAAI,CAAC,uBAAuB;AAC1B,YAAM,gCAAU,IAAI;;AAGtB,UAAM,UAAkB,MAAM,8BAA+B,IAAI,OAAoB,IAAI;AACzF,UAAM,UAAuC,IAAI,OAAwC;AACzF,UAAM,UAAU;AAChB,UAAM,YAA4D;MAChE,MAAM;MACN,MAAM;MACN;;AAGF,QAAI,SAAS,MAAM,sBAAsB,WAAW,KAAK;;AAG3D,+BAA4B,KAA2B,KAAvD;AACE,QAAI,CAAC,wBAAwB;AAC3B,YAAM,gCAAU,IAAI;;AAItB,UAAM,aAAsB,IAAI,OAAoB;AACpD,UAAM,cAAuB,IAAI,OAAoB;AAErD,UAAM,cAAwC,IAAI,OAAqC,MAAM;AAS7F,QAAI,SAAiB;AACrB,QAAI,iBAAiB,eAAe,CAAC,iBAAiB,cAAc;AAClE,UAAI,UAAO;AACX,iBAAO;AACP,iBAAO;AACP,iBAAO;AACN,UAAY,UAAU;AAEvB,gBAAU;AACV,gBAAU;WACL;AACL,gBAAU;AACV,gBAAU;;AAEZ,cAAU,MAAM,8BAA8B,SAAS;AAEvD,UAAM,YAAS,gBAAA,gBAAA,IACV,cADU,IAAA;MAEb,MAAM;MACN,MAAM;;AAIR,QAAI,SAAS,MAAM,uBAAuB,WAAW;;AAGvD,qCAAmC,KAA2B,KAA9D;AACE,QAAI,CAAC,4BAA4B;AAC/B,YAAM,gCAAU,IAAI;;AAGtB,UAAM,UAAkB,MAAM,8BAA+B,IAAI,OAAkB,IAAI;AAEvF,QAAI,SAAS,MAAM,2BAA2B,SAAS;;AAGzD,gCAA8B,KAA2B,KAAzD;AACE,QAAI,CAAC,uBAAuB;AAC1B,YAAM,gCAAU,IAAI;;AAGtB,UAAM,aAAsB,IAAI,OAAkB;AAClD,UAAM,UAAkB,MAAM,8BAA+B,IAAI,OAAkB,IAAI;AACvF,UAAM,cAAwC,IAAI,OAAqC,MAAM;AAC7F,UAAM,YAAS,gBAAA,gBAAA,IACV,cADU,IAAA;MAEb,MAAM;MACN,MAAM;;AAGR,QAAI,SAAS,sBAAsB,WAAW;;AAGhD,iCAA+B,KAA2B,KAA1D;AACE,QAAI,CAAC,eAAe;AAClB,YAAM,gCAAU,IAAI;;AAEtB,QAAI,SAAS,cAAc;;AAG7B,SAAO,yBAAyB;IAE9B,cAAc,sBAAsB;IACpC,iBAAiB,sBAAsB;IACvC,cAAc,sBAAsB;IAEpC,qBAAqB,sBAAsB;IAC3C,qBAAqB,sBAAsB;IAE3C,UAAU,sBAAsB;IAChC,mBAAmB,sBAAsB;IACzC,sBAAsB,sBAAsB;IAC5C,sBAAsB,sBAAsB;IAC5C,eAAe,sBAAsB;IACrC,4BAA4B,sBAAsB;IAClD,aAAa,sBAAsB;;;6BC7RH,kBAAA;AAClC,QAAM;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACE;AACJ,QAAM,gBAAgB,gBAAgB,CACpC,yBAAyB;IACvB,aAAa;MAEf,uBAAuB;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;AAGJ,SAAO;;qCAoBO,MAAA;MAA4B;IAAE;IAAU;MAAZ;AAC1C,6BAA2B,KAA+C,KAA1E;;AACE,UAAM,cAAc,eAAA,IAAI,YAAJ,QAAA,gBAAA,UAAA,YAAY,SAAS,IAAI,OAAO,KAAK;AACzD,QAAI,CAAC;AAAa,YAAM,gCAAU,IAAI,cAAc;AACpD,QAAI,CAAC,YAAY;AAAS,YAAM,gCAAU,IAAI,cAAc;AAC5D,QAAI,CAAC,YAAY,WAAW,YAAY,QAAQ,WAAW;AAAG,YAAM,gCAAU,IAAI,cAAc;AAChG,QAAI,CAAC,YAAY;AAAgB,YAAM,gCAAU,IAAI,cAAc;AAEnE,QAAI,SAAS,MAAM,SAAS;;AAE9B,6BAA2B,KAAyC,KAApE;;AACE,UAAM,cAAc,gBAAA,IAAI,YAAJ,QAAA,iBAAA,UAAA,aAAY,SAAS,IAAI,OAAO,KAAK;AACzD,QAAI,CAAC;AAAa,YAAM,gCAAU,IAAI,cAAc;AACpD,QAAI,SAAS,MAAM,YAAY;;AAGjC,SAAO,yBAAyB;IAC9B,yBAAyB,sBAAsB;IAC/C,4BAA4B,sBAAsB;;;iCAStC,OAAA;MAAwB;IAAE;MAAF;AACtC,+BAA6B,KAA4C,KAAzE;;AACE,UAAM,gBAAgB,gBAAA,IAAI,YAAJ,QAAA,iBAAA,UAAA,aAAY,SAAS,IAAI,OAAO,KAAK;AAC3D,QAAI,CAAC,mBAAD,QAAC,kBAAD,UAAC,cAAe;AAAY,YAAM,gCAAU,IAAI,cAAc;AAClE,QAAI,SAAS,MAAM,iBAAiB;;AAGtC,SAAO,yBAAyB;IAC9B,sBAAsB,sBAAsB;;;iCC9FR,SAAA;AACtC,SAAO,CAAC,KAA2B,KAA2B,MAA8B,QAArF;AACL,QAAI,IAAI,WAAW,eAAe;AAChC,UAAI,SAAS;AACb,aAAO;;AAET,WAAO;;;wCAIoC,gBAAA;AAC7C,SAAO,CAAC,KAA2B,KAAsC,MAA8B,QAAhG;AACL,QAAI,IAAI,WAAW,uBAAuB;AACxC,UAAI,SAAS;AACb,aAAO;;AAET,WAAO;;;6BAIyB,gBAAA;AAIlC,QAAM;IAAE;IAAS;MAAc;AAC/B,QAAM,kBAAkB,sBAAsB;IAAE;;AAChD,QAAM,oBAAoB,gBAAgB,CAAC,wBAAwB,UAAU,+BAA+B,iBAAiB;AAC7H,SAAO;IAAE;IAAmB;;;+BCtBd,MAAA;MAAoB;IAAE;MAAF;AAClC,SAAO;IACL,eAAe,YAAA;AACb,YAAM,gCAAU,IAAI;;IAEtB,aAAa,OAAO,MAAP;AACX,YAAM;QAAE;UAAa;AACrB,UAAI,YAAY,SAAS,QAAQ;AAC/B,eAAO;;AAET,YAAM,IAAI,MAAM;;IAElB,oBAAoB,OAAO,UAA6B,MAApC;AAClB,YAAM,SAAS,MAAM,UAAU,gBAAgB;AAC/C,aAAO;;IAET,wBAAwB,OAAO,UAA6B,MAApC;AACtB,YAAM,SAAS,MAAM,UAAU,gBAAgB;AAC/C,aAAO;;IAET,uBAAuB,OAAO,WAAkC,MAAzC;AACrB,YAAM,SAAS,MAAM,UAAU,YAAY,CAAC,UAAU,MAAM,UAAU;AACtE,aAAO;;IAET,wBAAwB,OAAO,WAAkC,MAAzC;AACtB,YAAM,SAAS,MAAM,UAAU,oBAAoB,CAAC,UAAU,MAAM,UAAU;AAC9E,aAAO;;IAET,qBAAqB,OAAO,WAAuC,MAA9C;AACnB,8BAAI,MAAM,uBAAuB;AACjC,YAAM,SAAS,MAAM,UAAU,cAAc,CAAC,UAAU,MAAM,UAAU;AACxE,aAAO;;IAET,uBAAuB,OAAO,MAAP;AACrB,YAAM,gCAAU,IAAI;;IAEtB,uBAAuB,OAAO,MAAP;AACrB,YAAM,gCAAU,IAAI;;IAEtB,4BAA4B,OAAO,MAAP;AAC1B,YAAM,gCAAU,IAAI;;IAEtB,uBAAwB,OAAD;AACrB,YAAM,gCAAU,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;AE7B1B,sCAAsC,iBAA0B,aAAhE;AACE,QAAM;IAAE,aAAa;IAAM;MAAY;AACvC,QAAM,WAAW,kBAAkB,uBAAS,SAAS,uBAAS;AAE9D,QAAM,oBAAoB;IACxB;IACA,SAAS,YAAY,YAAY,IAAI,SAAS,SAAS;IACvD,WAAW,YAAY,YAAY,IAAI,OAAO,SAAS,SAAS;IAChE;;AAGF,SAAO,sBAAO,OAAO;;6BAGP,MAAA;MAAoB;IAClC;IACA;IACA;MAHkC;AASlC,SAAO;IACL,aAAa,OAAO,MAA4B,CAAA,KAAA,OAAM,6CAAiB,OAAO,KAAK,SAAS,QAAQ,SAAS;IAC7G,eAAe,OAAO,MAA4B;IAClD,oBAAoB,OAAO,UAA6B,MAApC;AAClB,YAAM,sBAAsB;AAC5B,UAAI,CAAC;AAAqB,cAAM,gCAAU,SAAS,OAAO;UAAE,SAAS;UAA+B,MAAM;;AAC1G,YAAM,SAAS,MAAM,uBAAuB,CAAC,CAAC,SAAS,gBAAgB,CAAC,CAAC,SAAS,sBAAsB;AACxG,YAAM,gBAAgB,6BAAmB,WAAW,UAAU;QAAE;;AAChE,YAAM,WAAW,cAAc,KAAK,OAAO,KAAK,SAAS,QAAQ;AACjE,YAAM,SAAS,MAAM,oBAAoB,QAA0B;QACjE,QAAQ;QACR,QAAQ,CAAA,KAAA,OAAM,SAAS,SAAS;;AAElC,aAAO;;IAET,wBAAwB,OAAO,UAA6B,MAApC;AACtB,YAAM,SAAS,MAAM,uBAAuB,CAAC,CAAC,SAAS,gBAAgB,CAAC,CAAC,SAAS,sBAAsB;AACxG,YAAM,gBAAgB,6BAAmB,WAAW,UAAU;QAAE;;AAChE,YAAM,WAAW,cAAc,KAAK,OAAO,KAAK,SAAS,QAAQ;AACjE,aAAA,KAAA,OAAY,SAAS,SAAS;;IAEhC,uBAAuB,OAAO,WAAkC,MAAzC;AACrB,YAAM,gBAAgB,YAAY,SAAS,UAAU;AACrD,aAAO;;IAET,wBAAwB,OAAO,WAAkC,MAAzC;AACtB,YAAM,gBAAgB,OAAO,KAAK,SAAS;AAC3C,YAAM,MAAM,sCAAa;QAAE,YAAY;QAAe,MAAM,UAAU;;AACtE,aAAO;;IAET,qBAAqB,OAAO,WAAuC,MAA9C;AACnB,8BAAI,MAAM,uBAAuB;AACjC,YAAM,gBAAgB,OAAO,KAAK,SAAS;AAC3C,YAAM,MAAM,uCAAc;QAAE,YAAY;QAAe,MAAM,UAAU;QAAM,SAAS,yCAAqB;;AAC3G,aAAO;;IAET,uBAAuB,OAAO,WAA2D,MAAlE;AACrB,8BAAI,MAAM,yBAAyB;AACnC,YAAM,gBAAgB,OAAO,KAAK,SAAS;AAC3C,YAAM,MAAM,uCAAc;QAAE,YAAY;QAAe,MAAM,UAAU;QAAM,SAAS,yCAAqB;;AAC3G,aAAO;;IAET,uBAAuB,OAAO,WAA2D,MAAlE;AACrB,8BAAI,MAAM,yBAAyB;AACnC,YAAM,gBAAgB,OAAO,KAAK,SAAS;AAC3C,YAAM,MAAM,uCAAc;QAAE,YAAY;QAAe,MAAM,UAAU;QAAM,SAAS,yCAAqB;;AAC3G,aAAO;;IAET,4BAA4B,OAAO,SAAiB,MAAxB;AAC1B,8BAAI,KAAK,8BAA8B;AACvC,aAAO,gDAAuB;;IAEhC,uBAAuB,CAAC,WAAkC,MAAnC;AACrB,8BAAI,KAAK,yBAAyB;AAClC,YAAM,WAAW,2CAAe,UAAU;AAC1C,YAAM,OAAO,OAAO,KAAK,UAAU;AACnC,YAAM,YAAY,iCAAQ;QAAE,eAAe,KAAK,MAAM,KAAK,SAAS;QAA8B,YAAY;;AAC9G,aAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CDpF8B,aAAA;MAGzC,YAAA,MAAA;YAAY;UAAE;UAAQ;UAAO;YAAjB;AACV,cAAM;UACJ,QAAQ;YAAE,aAAW,gBAAA,gBAAA,IAAO,OAAO,cAAd,IAAA;cAA2B,gBAAgB,iBAAiB;;;UACjF,OAAK,gBAAA,gBAAA,IAAQ,SAAS,KAAjB,IAAA;YAAsB,SAAS;YAAW,UAAU;;;2CALtB;AAOrC,aAAK,YAAY,aAAa;;YAYnB,SAAM;AACjB,YAAI,CAAC,KAAK;AACR,gBAAM,gCAAU,SAAS,OAAO;YAAE,SAAS;YAA8E,MAAM;;AACjI,cAAM,KAAK,cAAc,KAAK;AAC9B,eAAO,KAAK,qBAAqB,QAAQ;UAAE,QAAQ;;;YAGxC,cAAc,WAAD;AACxB,aAAK,uBAAuB;AAC5B,cAAM,KAAK,YAAY;;YAGZ,YAAW,OAAA;YAAC;UAAE;YAAF;AACvB,cAAM,qBAAqB,KAAK,eAAe;AAC/C,cAAM;UAAE;UAAQ;UAAY;YAAc;AAC1C,aAAK,OAAO;UACV,SAAS;;AAEX,cAAM,KAAK,UAAU,YAAY;UAC/B,SAAS,OAAO,SAAS,SAAS;UAClC,gBAAgB;YACd,MAAM;YACN,QAAQ;;UAEV,WAAW,OAAO,SAAS,SAAS;UACpC,QAAQ;;AAEV,aAAK,UAAU;UAAE,aAAa;;AAC9B,cAAM,KAAK,cAAc,KAAK;;YAGhB,cAAc,WAAD;AAC3B,YAAI,CAAC,UAAU;AAAW,gBAAM,iBAAiB,kBAAkB;AACnE,YAAI,CAAC,KAAK;AAAU,gBAAM,gCAAU,SAAS,OAAO;YAAE,SAAS;YAA+B,MAAM;;AACpG,cAAM;UAAE;YAAY,KAAK,OAAO;AAChC,cAAM,sBAAsB,YAAY,UAAU,QAAQ,cAAc,UAAU,UAAtD,KAAA,OAAqE,UAAU,QAAQ,SAAS;AAC5H,YAAI,YAAY;AACd,gBAAM,0BAA0B,mBAA1B,oCAAA,OAAiF,qBAAjF,gBAAA,OAAmH;AAE3H,aAAK,OAAO;UAAE,SAAS;;AACvB,aAAK,SAAS,KAAK,WAAW;UAAE;;AAChC,aAAK,SAAS,KAAK,gBAAgB,KAAK,MAAM;AAC9C,eAAO;;YAGK,YAAY,WAAD;AACvB,cAAM,mBAAmB,sBAAoB;UAAE;;AAC/C,aAAK,OAAO;UACV,UAAU,UAAU,YAAY;;AAElC,cAAM,gBAAgB,oBAAoB;AAC1C,cAAM,SAAS,IAAI;AACnB,cAAM;UAAE;YAAsB,oBAAoB,KAAK,OAAO;AAC9D,eAAO,KAAK;AACZ,eAAO,KAAK;AACZ,cAAM,WAAW,mBAAmB;AACpC,aAAK,0BAA0B;AAC/B,cAAM,KAAK,cAAc;;YAGb,uBAAuB,WAAD;AAClC,kBAAU,GAAG,kBAAkB,OAAO,OAAqB,YAA5B;AAC7B,cAAI,CAAC,KAAK;AAAU,kBAAM,iBAAiB,kBAAkB;AAC7D,cAAI,OAAO;AACT,iBAAK,SAAS,KAAK,SAAS;AAC5B;;AAEF,gBAAM;YAAE;YAAU,SAAS;YAAkB;cAAW;AAExD,cAAI,aAAQ,QAAR,aAAQ,UAAR,SAAU,UAAU,KAAK,MAAM,SAAS,OAAO,SAAS,IAAI;AAC9D,iBAAK,OAAO;cACV;;AAGF,iBAAK,SAAS,KAAK,mBAAmB;;AAExC,gBAAM,sBAAsB,YAAY,oBAAoB,mBAAhC,KAAA,OAAwD,iBAAiB,SAAS;AAE9G,cAAI,oBAAoB,KAAK,MAAM,YAAY,qBAAqB;AAElE,iBAAK,UAAU;cACb,aAAW,gBAAA,gBAAA,IAAO,KAAK,OAAO,cAAnB,IAAA;gBAAgC,SAAS;gBAAqB,WAAW;;;AAEtF,kBAAM,KAAK,YAAY;;;;;oBAvGlB,uBAAA,uBAWyB,OAAO,WAAP;AAIlC,YAAM,kBAAkB,IAAI,sBAAsB;QAAE,QAAQ;UAAE,aAAa,OAAO;;;AAClF,YAAM,gBAAgB,cAAc,OAAO;AAC3C,aAAO;;+CEXqC,aAAA;MAC9C,YAAA,MAAA;YAAY;UAAE;UAAQ;YAAV;AACV,cAAM;UAAE,QAAQ;YAAE,aAAW,cAAA,cAAA,IAAO,OAAO,cAAd,IAAA;cAA2B,gBAAgB,iBAAiB;;;UAAY;;;YAY1F,SAAM;AACjB,YAAI,CAAC,KAAK,MAAM;AACd,gBAAM,gCAAU,SAAS,OAAO;YAAE,SAAS;YAA6E,MAAM;;AAChI,cAAM,KAAK,cAAc,KAAK,MAAM;AACpC,eAAO,KAAK,qBAAqB,QAAQ;UAAE,QAAQ;;;YAGxC,cAAc,SAAD;AACxB,cAAM,mBAAmB,oBAAoB;UAC3C;UACA,aAAa,KAAK,OAAO;UACzB,wBAAwB,KAAK,uBAAuB,KAAK;;AAE3D,cAAM,gBAAgB,oBAAoB;AAC1C,cAAM,wBAAwB,KAAK;AACnC,cAAM,SAAS,IAAI;AAEnB,cAAM;UAAE;YAAsB,oBAAoB,KAAK,OAAO;AAC9D,eAAO,KAAK;AACZ,eAAO,KAAK;AACZ,eAAO,KAAK,KAAK;AACjB,eAAO,KAAK;AACZ,cAAM,WAAW,mBAAmB;AACpC,aAAK,0BAA0B;AAC/B,cAAM,KAAK;;YAGA,cAAc,QAAD;AACxB,YAAI,CAAC,KAAK;AAAsB,gBAAM,gCAAU,SAAS,OAAO;YAAE,SAAS;YAA+B,MAAM;;AAChH,cAAM,cAAc,MAAM,KAAK,qBAAqB,QAAyB;UAAE,QAAQ;;AACvF,YAAI,gBAAgB,OAAO,YAAY;AACrC,gBAAM,KAAK,cAAc,OAAO;AAChC,eAAK,qBAAqB,KAAK,mBAAmB;YAChD,UAAU,MAAM,KAAK,qBAAqB,QAA2B;cAAE,QAAQ;;;;;YAKxE,YAAY,QAAD;AACtB,YAAI,CAAC,KAAK;AAAsB,gBAAM,gCAAU,SAAS,OAAO;YAAE,SAAS;YAA+B,MAAM;;AAChH,cAAM,cAAc,KAAK,eAAe,OAAO;AAC/C,aAAK,OAAO;UACV,SAAS;;AAEX,aAAK,UAAU;UAAE;;AACjB,cAAM,UAAU,MAAM,KAAK,qBAAqB,QAAyB;UAAE,QAAQ;;AACnF,cAAM,KAAK,cAAc;;YAGX,gBAAa;AAC3B,YAAI,CAAC,KAAK;AAAU,gBAAM,gCAAU,SAAS,OAAO;YAAE,SAAS;YAA+B,MAAM;;AACpG,cAAM;UAAE;YAAY,KAAK,OAAO;AAChC,YAAI,CAAC;AAAS,gBAAM,gCAAU,IAAI,cAAc;AAChD,cAAM,UAAU,MAAM,KAAK,qBAAqB,QAA0B;UACxE,QAAQ;UACR,QAAQ;;AAGV,YAAI,SAAS,SAAS,QAAQ,SAAS,SAAS;AAAK,gBAAM,gCAAU,SAAS,kBAAnB,oCAAA,OAAyE;AACpI,gCAAI,MAAM,iBAAiB,KAAK,UAAU,SAAS,KAAK,MAAM;AAE9D,YAAI,KAAK,MAAM,YAAY,SAAS;AAClC,eAAK,SAAS,KAAK,gBAAgB;AACnC,eAAK,SAAS,KAAK,WAAW;YAAE;;;AAElC,aAAK,OAAO;UAAE;;AACd,eAAO;;MAGD,2BAAwB;AAC9B,cAAM,sBAA4C;UAChD,UAAU,OAAO,WAAP;AACR,kBAAM;cAAE;cAAS;cAAW;cAAS;cAAmB;gBAAmB;AAC3E,iBAAK,SAAS;cACZ,gBAAgB;cAChB;cACA,QAAQ,oBAAc,QAAd,mBAAc,SAAd,SAAA,eAAgB,WAAU;cAClC,YAAY,oBAAc,QAAd,mBAAc,SAAd,SAAA,eAAgB,SAAQ;cACpC,aAAa;cACb,WAAW,QAAQ;cACnB,eAAe,uBAAiB,QAAjB,sBAAiB,SAAjB,SAAA,kBAAoB,OAAM;;;UAG7C,aAAa,OAAO,WAAP;AACX,kBAAM;cAAE;gBAAY;AACpB,kBAAM,KAAK,YAAY;cAAE;;;;AAG7B,cAAM,wBAAwB,4BAA4B;AAC1D,eAAO;;MAGD,uBAAoB;AAC1B,cAAM,kBAAoC;UACxC,kBAAkB,OAAO,WAAP;AAChB,kBAAM;cAAE;gBAAe;AACvB,kBAAM,KAAK,cAAc;cAAE;;;;AAG/B,eAAO,wBAAwB;;;oBAjHtB,4BAAA,uBAKyB,OAAO,WAAP;AAIlC,YAAM,kBAAkB,IAAI,2BAA2B;QAAE,QAAQ;UAAE,aAAa,OAAO;;;AACvF,YAAM,gBAAgB,cAAc,OAAO;AAC3C,aAAO;;;;",
  "names": []
}
